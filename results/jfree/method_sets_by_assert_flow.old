[1] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (16): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:332, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:333, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:336, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:337, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:340, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:341, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:344, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:345, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:348, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:349, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:352, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:353, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:356, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:357, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:360, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:361, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxisAndMargin()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:375, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:376, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:379, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:380, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:383, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:384, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:387, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:388, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:391, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:392, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:395, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:396, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:399, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:400, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:403, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:404, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:332, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:336, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:340, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:344, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:348, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:352, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:356, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:360, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxisAndMargin()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:375, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:379, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:383, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:387, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:391, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:395, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:399, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:403, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_LogAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:419, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:423, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:427, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:333, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:337, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:341, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:345, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:349, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:353, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:357, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:361, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_NumberAxisAndMargin()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:376, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:380, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:384, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:388, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:392, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:396, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:400, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:404, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_LogAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:420, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:424, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:428, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[2] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (12): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testInsertAndRetrieve()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:332, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:333, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:334, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:335, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:338, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:339, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:340, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:341, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:344, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:345, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:346, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:347, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:388, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:389, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:390, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:391, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:394, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:395, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:396, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:397, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:400, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:401, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:402, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:403, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:421, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:422, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:423, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:424, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:427, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:428, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:429, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:430, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:433, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:434, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:435, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:436, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:454, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:455, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:456, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:457, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:460, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:461, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:462, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:463, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:466, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:467, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:468, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:469, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:487, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:488, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:489, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:490, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:493, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:494, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:495, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:496, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:499, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:500, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:501, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:502, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 0.67, ccsize: 2, packages: 2, classes: 3): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetKey()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:147, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:148, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testInsertAndRetrieve()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:332, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:333, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:334, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:335, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:388, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:389, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:390, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:391, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:421, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:422, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:423, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:424, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:454, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:455, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:456, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:457, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:487, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:488, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:489, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:490, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testInsertAndRetrieve()>
		<org.jfree.data.junit.KeyedObjectsTests.java:164, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:166, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:167, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 2, classes: 2): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetValue()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:105, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:106, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testInsertAndRetrieve()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:338, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:339, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:340, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:341, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:394, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:395, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:396, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:397, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:427, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:428, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:429, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:430, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:460, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:461, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:462, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:463, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:493, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:494, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:495, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:496, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testInsertAndRetrieve()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:344, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:345, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:346, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:347, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:400, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:401, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:402, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:403, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByKeyDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:433, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:434, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:435, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:436, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueAscending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:466, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:467, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:468, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:469, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSortByValueDescending()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:499, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:500, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:501, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:502, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[3] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (11): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:227, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:230, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:231, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:232, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:233, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:236, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:237, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:238, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:239, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:240, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:388, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:390, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:391, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:392, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:393, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:394, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:397, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:398, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:399, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:400, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:401, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (6):
Set (score: 0.67, ccsize: 4, packages: 2, classes: 4): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:236, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testGetLegendItems2()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:140, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:142, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:144, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:146, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:116, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:390, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:397, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void test2947660()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:377, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 4, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:230, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:237, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:391, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:398, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 4, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:231, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:238, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:392, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:399, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 4, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:232, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:239, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:393, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:400, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 4, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:233, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:240, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:394, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:401, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 2, classes: 6): 
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:227, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:625, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:630, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:635, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:640, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:114, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testGetLegendItems2()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:138, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:388, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:976, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void test2947660()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:366, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:372, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:376, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[4] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (10): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:201, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:202, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:204, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:206, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:208, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:210, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:212, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:214, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:216, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:218, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:236, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:237, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:239, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:241, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:243, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:245, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:247, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:249, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:251, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:253, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:171, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:172, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:173, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:175, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:176, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:178, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:180, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:181, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:182, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (9):
Set (score: 0.67, ccsize: 2, packages: 2, classes: 4): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testGetRangeBounds()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:276, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:277, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:281, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:282, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:286, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:287, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:293, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:294, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testRemove()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:314, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:315, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:319, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:320, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:323, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:324, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:218, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:253, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testGetRangeBounds()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:205, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:206, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:210, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:211, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:215, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:216, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:182, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testGetRangeBounds()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:97, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:98, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:102, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:103, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:107, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:108, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:112, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:114, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:119, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:121, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testGetRangeBounds2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:264, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:265, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:268, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:269, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testRemove()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:288, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:289, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testGetRangeBounds()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:402, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:404, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:408, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:410, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:202, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:237, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:204, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:239, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:206, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:241, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:208, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:243, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:210, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:245, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:212, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:247, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:214, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:249, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:216, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testAddUpdatesCachedRange()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:251, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[5] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (10): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:825, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:842, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:843, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:844, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:845, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:846, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:847, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:848, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:849, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:912, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:928, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:929, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:930, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:931, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:932, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:933, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:934, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:935, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 1.00, ccsize: 4, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:844, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:848, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:930, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:934, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 2, packages: 6, classes: 16): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:180, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:152, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:182, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:140, 14.29%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:142, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:122, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:155, 15.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:135, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.LineBorderTests.java:145, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:199, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:706, 12.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:734, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:776, 10.34%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:825, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:737, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:768, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:813, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:865, 9.09%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:912, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:173, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:195, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:153, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:187, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 22, classes: 273): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:141, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:937, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[6] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (8): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:323, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:327, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:330, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:332, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:336, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:339, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:342, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:316, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:321, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:324, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:327, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:331, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:334, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:337, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:341, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 12): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:344, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:348, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:323, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:327, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:192, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:196, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:195, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:201, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:366, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:370, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:234, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:239, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:166, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:170, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:316, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:321, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:221, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:226, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:88, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 11): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:351, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:354, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:357, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:330, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:332, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:336, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:339, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:342, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:199, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:202, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:205, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:214, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:217, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:208, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:212, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:373, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:376, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:379, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:382, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:385, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:243, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:247, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:252, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:256, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:259, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:96, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:99, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:105, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:108, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:111, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:114, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:117, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:120, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:123, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:176, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:179, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:182, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:324, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:327, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:331, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:334, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:337, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:341, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:229, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:232, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:235, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:238, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:242, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[7] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:140, 6.45%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:141, 6.45%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:142, 9.68%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:157, 6.45%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:158, 6.45%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:159, 9.68%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:164, 9.68%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:165, 12.90%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:150, 6.06%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:151, 6.06%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:152, 9.09%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:168, 6.06%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:169, 6.06%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:170, 9.09%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:175, 9.09%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:176, 12.12%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:218, 6.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:219, 6.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:220, 10.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:235, 6.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:236, 6.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:237, 10.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:242, 10.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:243, 13.33%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 3, packages: 1, classes: 10): 
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:116, 25.00%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:176, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:165, 12.90%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:176, 12.12%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:174, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:161, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:219, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:158, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:148, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:243, 13.33%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 2, packages: 3, classes: 12): 
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:115, 18.75%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:146, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:175, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:164, 9.68%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:175, 9.09%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:173, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:160, 18.75%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:218, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:157, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:147, 18.75%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:242, 10.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testConstructor()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:120, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testCloning2()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:643, 13.04%> (predicates:{(r1 != r2)=null, (temp$8 == temp$9)=null, (temp$15 == r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[8] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (8): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:424, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:428, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:433, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:434, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:439, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:440, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:445, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:446, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testFindDomainBounds()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:343, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:349, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:357, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:358, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:365, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:366, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:370, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:371, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.50, ccsize: 2, packages: 6, classes: 8): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange3()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:240, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:248, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:315, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:317, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:221, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:276, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange2()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:304, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:449, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:451, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testConstructor()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:90, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor1()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:196, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor2()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:205, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:293, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:297, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:303, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:310, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:316, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:321, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds4()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:471, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:478, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:484, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:708, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:713, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:718, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:723, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds2_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:347, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:353, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:359, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:433, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:439, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:445, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:748, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:753, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:758, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1272, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1277, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1282, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1294, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1299, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1304, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:204, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:208, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:250, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:253, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:386, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:389, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:689, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:694, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:145, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:185, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:218, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:231, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:263, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:273, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:331, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:399, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:413, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:567, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:587, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:602, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:616, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBoundsForTableXYDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:768, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testStackedRangeWithMap()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:789, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testShift()>
		<org.jfree.data.junit.RangeTests.java:231, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:236, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:241, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:246, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:251, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:256, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testExpand()>
		<org.jfree.data.junit.RangeTests.java:205, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:221, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testScale()>
		<org.jfree.data.junit.RangeTests.java:277, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:282, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testCombineIgnoringNaN()>
		<org.jfree.data.junit.RangeTests.java:369, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:374, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testCombine()>
		<org.jfree.data.junit.RangeTests.java:351, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testFindDomainBounds()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:357, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:365, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:370, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testDataRange()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:98, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 2, packages: 6, classes: 8): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange3()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:241, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:249, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:277, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange2()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:305, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:318, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:452, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testConstructor()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:91, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor1()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:197, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor2()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:206, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:294, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:298, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:304, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:311, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:317, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:322, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds4()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:466, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:472, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:479, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:485, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:709, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:714, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:719, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:724, 27.78%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds2_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:348, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:354, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:360, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:434, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:440, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:446, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:749, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:754, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:759, 29.41%> (predicates:{(r == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1273, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1278, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1283, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1295, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1300, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:205, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:209, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:251, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:254, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:387, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:390, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:690, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:695, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:146, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:166, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:186, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:219, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:232, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:264, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:274, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:332, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:400, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:414, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:568, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:588, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:603, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:617, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBoundsForTableXYDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:769, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testStackedRangeWithMap()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:790, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testShift()>
		<org.jfree.data.junit.RangeTests.java:232, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:237, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:242, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:247, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:252, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:257, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testExpand()>
		<org.jfree.data.junit.RangeTests.java:206, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:222, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testScale()>
		<org.jfree.data.junit.RangeTests.java:278, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:283, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testCombineIgnoringNaN()>
		<org.jfree.data.junit.RangeTests.java:370, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:375, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testCombine()>
		<org.jfree.data.junit.RangeTests.java:347, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testFindDomainBounds()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:358, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:366, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:371, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testDataRange()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:99, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[9] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (7): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:187, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:188, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:193, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:194, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:195, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:196, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:201, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:190, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:191, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:196, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:197, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:198, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:199, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:204, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:188, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:194, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:195, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:191, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:197, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:198, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:187, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:193, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:190, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:196, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:196, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:201, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testAddURLSeries()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:199, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:204, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[10] Set (editDistance: 0, isComplete: true, packages: 1, classes: 7): 
Assertions (7): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:192, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:196, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:199, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:202, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:205, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:214, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:217, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:366, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:370, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:373, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:376, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:379, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:382, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:385, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:234, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:239, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:243, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:247, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:252, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:256, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:259, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:96, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:99, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:105, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:108, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:111, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:114, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:117, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:120, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:123, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:166, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:170, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:176, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:179, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:182, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:221, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:226, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:229, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:232, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:235, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:238, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:242, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 12): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:344, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:348, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:323, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:327, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:192, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:196, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:195, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:201, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:366, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:370, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:234, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:239, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:166, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:170, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:316, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:321, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:221, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:226, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:88, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 11): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:351, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:354, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:357, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:330, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:332, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:336, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:339, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:342, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:199, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:202, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:205, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:214, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:217, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:208, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:212, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:373, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:376, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:379, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:382, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:385, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:243, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:247, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:252, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:256, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:259, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:96, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:99, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:105, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:108, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:111, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:114, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:117, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:120, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:123, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:176, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:179, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:182, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:324, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:327, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:331, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:334, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:337, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:341, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:229, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:232, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:235, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:238, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:242, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[11] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.WeekTests: void testWeek12005()>
		<org.jfree.data.time.junit.WeekTests.java:240, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:241, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:245, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:246, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:249, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:250, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testWeek532005()>
		<org.jfree.data.time.junit.WeekTests.java:275, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:276, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:280, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:281, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:285, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:286, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.DayTests.java:315, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.HourTests.java:287, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MillisecondTests.java:266, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MinuteTests.java:244, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MonthTests.java:335, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.QuarterTests.java:355, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.SecondTests.java:243, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testWeek12005()>
		<org.jfree.data.time.junit.WeekTests.java:240, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:245, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:249, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testWeek532005()>
		<org.jfree.data.time.junit.WeekTests.java:275, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:280, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:285, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.WeekTests.java:372, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.YearTests.java:323, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.DayTests.java:369, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.HourTests.java:340, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MillisecondTests.java:319, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MinuteTests.java:297, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MonthTests.java:388, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.QuarterTests.java:408, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.SecondTests.java:296, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testWeek12005()>
		<org.jfree.data.time.junit.WeekTests.java:241, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:246, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:250, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testWeek532005()>
		<org.jfree.data.time.junit.WeekTests.java:276, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:281, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:286, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.WeekTests.java:432, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.YearTests.java:377, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[12] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.MonthTests: void testParseMonth()>
		<org.jfree.data.time.junit.MonthTests.java:223, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.MonthTests.java:233, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:234, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.MonthTests.java:243, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:244, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testParseQuarter()>
		<org.jfree.data.time.junit.QuarterTests.java:218, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:219, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.QuarterTests.java:228, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.QuarterTests.java:238, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:239, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 3, packages: 1, classes: 2): 
	<org.jfree.data.time.junit.MonthTests: void testParseMonth()>
		<org.jfree.data.time.junit.MonthTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.MonthTests.java:234, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.MonthTests.java:244, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testParseQuarter()>
		<org.jfree.data.time.junit.QuarterTests.java:219, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.QuarterTests.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.QuarterTests.java:239, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[13] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

Methods (9): 
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testGetSetKey()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:213, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:215, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:216, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:221, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:224, 11.11%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetPaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:99, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:101, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:102, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:107, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:110, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetStroke()>
		<org.jfree.chart.plot.junit.MarkerTests.java:123, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:125, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:126, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:131, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:134, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelFont()>
		<org.jfree.chart.plot.junit.MarkerTests.java:221, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:223, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:224, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:229, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:232, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelPaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:245, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:247, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:248, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:253, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:256, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelAnchor()>
		<org.jfree.chart.plot.junit.MarkerTests.java:269, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:271, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:272, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:277, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:280, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelOffset()>
		<org.jfree.chart.plot.junit.MarkerTests.java:293, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:295, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:296, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:301, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:304, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelOffsetType()>
		<org.jfree.chart.plot.junit.MarkerTests.java:318, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:320, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:321, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:326, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:329, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelTextAnchor()>
		<org.jfree.chart.plot.junit.MarkerTests.java:343, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:345, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:346, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:351, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.chart.plot.junit.MarkerTests.java:354, 8.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.50, ccsize: 3, packages: 1, classes: 4): 
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testGetSetKey()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:216, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testGetSetDrawAsLine()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:238, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testGetSetStartValue()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:182, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testGetSetEndValue()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:195, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetPaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:102, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetStroke()>
		<org.jfree.chart.plot.junit.MarkerTests.java:126, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetOutlinePaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:150, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetOutlineStroke()>
		<org.jfree.chart.plot.junit.MarkerTests.java:169, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetAlpha()>
		<org.jfree.chart.plot.junit.MarkerTests.java:190, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabel()>
		<org.jfree.chart.plot.junit.MarkerTests.java:205, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelFont()>
		<org.jfree.chart.plot.junit.MarkerTests.java:224, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelPaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:248, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelAnchor()>
		<org.jfree.chart.plot.junit.MarkerTests.java:272, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelOffset()>
		<org.jfree.chart.plot.junit.MarkerTests.java:296, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelOffsetType()>
		<org.jfree.chart.plot.junit.MarkerTests.java:321, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetLabelTextAnchor()>
		<org.jfree.chart.plot.junit.MarkerTests.java:346, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.plot.junit.ValueMarkerTests: void testGetSetValue()>
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:242, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[14] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (5): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:344, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:348, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:351, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:354, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:357, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:195, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:201, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:208, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:212, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 12): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:344, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:348, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:323, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:327, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:192, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:196, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:195, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:201, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:366, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:370, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:234, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:239, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:166, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:170, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:316, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:321, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:221, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:226, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:88, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 11): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:351, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:354, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:357, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:330, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:332, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:336, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:339, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:342, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:199, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:202, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:205, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:214, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:217, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:208, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:212, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:373, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:376, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:379, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:382, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:385, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:243, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:247, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:252, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:256, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:259, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:96, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:99, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:105, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:108, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:111, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:114, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:117, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:120, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:123, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:176, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:179, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:182, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:324, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:327, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:331, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:334, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:337, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:341, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:229, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:232, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:235, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:238, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:242, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[15] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:363, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:364, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:369, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:370, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:383, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:246, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:247, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:251, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:252, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:264, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:249, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:250, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:254, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:255, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:267, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 0.67, ccsize: 2, packages: 7, classes: 17): 
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:367, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testRemove()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:655, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testSampleFunction2D()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:852, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testConstructor()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:191, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void test1161340()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:106, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:108, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:114, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:171, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testClear()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:201, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:245, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveAllSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:363, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:369, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:87, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:246, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:251, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:249, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:254, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:173, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:176, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:183, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testConstructor()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:99, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testAddSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:294, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testToArrayExample()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:538, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 3, classes: 7): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testSampleFunction2D()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:853, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:186, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:364, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:247, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:250, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:177, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testToArrayExample()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:540, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 2, packages: 3, classes: 7): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testSampleFunction2D()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:856, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:858, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testAddSeries2()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:214, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:217, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:220, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:223, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:226, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testBinBoundaries()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:239, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:240, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:241, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testAddSeries()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:198, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:202, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void test1553088()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:256, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:260, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testClearObservations()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:150, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:370, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:252, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:255, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testToArrayExample()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:545, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:546, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:547, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[16] Set (editDistance: 0, isComplete: true, packages: 1, classes: 7): 
Assertions (5): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:108, 12.50%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:109, 12.50%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:110, 18.75%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:115, 18.75%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:116, 25.00%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:168, 12.50%> (predicates:{(f1 != f2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:169, 12.50%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:170, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:175, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:176, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:166, 12.50%> (predicates:{(i1 != i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:167, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:168, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:173, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:174, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:153, 12.50%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:154, 12.50%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:155, 18.75%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:160, 18.75%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:161, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:211, 12.50%> (predicates:{(i1 != i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:212, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:213, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:218, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:219, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:150, 12.50%> (predicates:{(f1 != f2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:151, 12.50%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:152, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:157, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:158, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:140, 12.50%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:141, 12.50%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:142, 18.75%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:147, 18.75%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:148, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 3, packages: 1, classes: 10): 
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:116, 25.00%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:176, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:165, 12.90%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:176, 12.12%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:174, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:161, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:219, 25.00%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:158, 25.00%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:148, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:243, 13.33%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 2, packages: 3, classes: 12): 
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:115, 18.75%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:146, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:175, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:164, 9.68%> (predicates:{(b1 != b2)=null, (temp$4 == temp$5)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:175, 9.09%> (predicates:{(c1 != c2)=null, (temp$4 == temp$5)=null, (temp$20 == temp$21)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:173, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:160, 18.75%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:218, 18.75%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:157, 18.75%> (predicates:{(f1 != f2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:147, 18.75%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:242, 10.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testConstructor()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:120, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testCloning2()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:643, 13.04%> (predicates:{(r1 != r2)=null, (temp$8 == temp$9)=null, (temp$15 == r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[17] Set (editDistance: 0, isComplete: true, packages: 2, classes: 5): 
Assertions (5): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testClear()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:286, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:287, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:289, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:291, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:292, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:303, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:306, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:308, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:309, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:305, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:307, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:309, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:310, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:318, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:319, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:321, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:323, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:324, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:303, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:306, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:308, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:309, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 2, classes: 5): 
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testClear()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:287, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:289, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:292, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:306, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:309, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:305, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:307, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:310, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:319, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:321, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:324, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testClear()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:306, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:309, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[18] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:258, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:259, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:260, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:261, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:274, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:275, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:276, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:277, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:290, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:291, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:292, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:293, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:321, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:322, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:323, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:324, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:337, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:338, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:339, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:340, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:353, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:354, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:355, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:356, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:384, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:385, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:386, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:387, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:400, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:401, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:402, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:403, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:416, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:417, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:418, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:419, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList5()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:448, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:449, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:450, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:451, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:206, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:219, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList4()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:245, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:258, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:274, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:290, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:306, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:321, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:337, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:353, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:369, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3a()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:384, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3b()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:400, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3c()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:416, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:432, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList5()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:448, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[19] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveRowByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:296, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:297, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:307, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:317, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveColumnByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:328, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:329, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:339, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:349, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveRowByKey()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:360, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:361, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:371, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:381, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveColumnByKey()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:392, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:393, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:403, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:413, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.data.junit.KeyedObjects2DTests: void testGetValueByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:159, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:160, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveRowByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:297, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveColumnByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:329, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveRowByKey()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:361, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveColumnByKey()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:393, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveValue()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:426, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[20] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testMsSegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:304, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:305, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:306, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:307, 88.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testMondayThroughFridaySegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:330, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:332, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:333, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:334, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testFifteenMinSegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:343, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:346, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:347, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:348, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testMsSegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:304, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testMs2SegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:316, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testMondayThroughFridaySegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:330, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testFifteenMinSegmentedTimeline()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:343, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[21] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MillisecondTests.java:142, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:143, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:145, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:146, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MillisecondTests.java:162, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:163, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:165, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:166, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void test943985()>
		<org.jfree.data.time.junit.MillisecondTests.java:210, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:211, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:213, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:214, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MillisecondTests.java:142, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:145, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MillisecondTests.java:162, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:165, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[22] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.MarkerTests: void testListenersWithCategoryPlot()>
		<org.jfree.chart.plot.junit.MarkerTests.java:369, 8.11%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:372, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:376, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:378, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null, (temp$25 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testListenersWithXYPlot()>
		<org.jfree.chart.plot.junit.MarkerTests.java:392, 8.11%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:395, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:399, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:401, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null, (temp$25 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 3): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testAddDomainMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:889, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:892, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testAddRangeMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:904, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:907, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testListenersWithCategoryPlot()>
		<org.jfree.chart.plot.junit.MarkerTests.java:369, 8.11%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:372, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:376, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:378, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null, (temp$25 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testListenersWithXYPlot()>
		<org.jfree.chart.plot.junit.MarkerTests.java:392, 8.11%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:395, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:399, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:401, 8.11%> (predicates:{(temp$4 != null)=null, (temp$11 != null)=null, (temp$18 != null)=null, (temp$25 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testAddDomainMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1070, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1073, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testAddRangeMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1085, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1088, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[23] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:255, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:262, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:267, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:271, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:206, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:213, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:218, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:222, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 6): 
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:267, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:271, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:218, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:222, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:212, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:215, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:221, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:228, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:236, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:249, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void test3026341()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:210, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:217, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:255, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:262, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:206, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:213, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[24] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testConstructor1()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:86, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:87, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:88, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:89, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testConstructor1()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:86, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:87, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:88, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:89, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.50, ccsize: 2, packages: 1, classes: 3): 
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testConstructor1()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:89, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testConstructor1()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:89, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testConstructor1()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:87, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[25] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3): 
Assertions (4): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:188, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:189, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:190, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:191, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:301, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:302, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:303, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:291, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:292, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:293, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:294, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:310, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:311, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:312, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:313, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 5, packages: 1, classes: 3): 
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:188, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:189, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:190, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:191, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:301, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:302, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:303, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:304, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:291, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:292, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:293, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:294, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[26] Set (editDistance: 0, isComplete: true, packages: 1, classes: 5): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:273, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:275, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:279, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:280, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:274, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:276, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:280, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:281, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:274, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:276, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:280, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:281, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:438, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:440, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:444, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:445, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:273, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:275, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:279, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:280, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 4, classes: 8): 
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testConstructor1()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:120, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testRemoveAgedItems()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:839, 16.00%> (predicates:{(temp$2 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testRemoveAgedItems2()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:877, 12.90%> (predicates:{(temp$2 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:256, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:258, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:273, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:275, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:274, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:276, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:274, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:276, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:438, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:440, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSetMaximumItemCount()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:273, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:275, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[27] Set (editDistance: 0, isComplete: true, packages: 1, classes: 7): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (14): 
	<org.jfree.data.time.junit.DayTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.DayTests.java:132, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:133, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:135, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:136, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.DayTests.java:150, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:151, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:153, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:154, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.HourTests.java:128, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:129, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:131, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:132, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.HourTests.java:145, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:146, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:148, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:149, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MinuteTests.java:134, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:135, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:137, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:138, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MinuteTests.java:152, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:153, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:155, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:156, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MonthTests.java:147, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:148, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:150, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:151, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MonthTests.java:165, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:166, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:168, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:169, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.QuarterTests.java:142, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:143, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:145, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:146, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.QuarterTests.java:160, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:161, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:163, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:164, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.SecondTests.java:135, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:138, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:139, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.SecondTests.java:152, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:153, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:155, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:156, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.YearTests.java:135, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:138, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:139, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.YearTests.java:153, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:154, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:156, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:157, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (4):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.DayTests.java:133, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.DayTests.java:151, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.DayTests.java:348, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.HourTests.java:129, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.HourTests.java:146, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.HourTests.java:320, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MillisecondTests.java:143, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MillisecondTests.java:163, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MillisecondTests.java:299, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MinuteTests.java:135, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MinuteTests.java:153, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MinuteTests.java:277, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MonthTests.java:148, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MonthTests.java:166, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MonthTests.java:368, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.QuarterTests.java:143, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.QuarterTests.java:161, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.QuarterTests.java:388, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.SecondTests.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.SecondTests.java:153, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.SecondTests.java:276, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.WeekTests.java:408, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.YearTests.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.YearTests.java:154, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.YearTests.java:357, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.DayTests.java:136, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.DayTests.java:154, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.DayTests.java:295, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.HourTests.java:132, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.HourTests.java:149, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.HourTests.java:267, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MillisecondTests.java:146, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MillisecondTests.java:166, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MillisecondTests.java:246, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MinuteTests.java:138, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MinuteTests.java:156, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MinuteTests.java:224, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MonthTests.java:151, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MonthTests.java:169, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MonthTests.java:315, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.QuarterTests.java:146, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.QuarterTests.java:164, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.QuarterTests.java:335, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.SecondTests.java:139, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.SecondTests.java:156, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.SecondTests.java:223, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.WeekTests.java:348, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.YearTests.java:139, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.YearTests.java:157, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.YearTests.java:303, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.MinuteTests.java:134, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:137, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.MinuteTests.java:152, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:155, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor1()>
		<org.jfree.data.time.junit.SecondTests.java:135, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:138, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testDateConstructor2()>
		<org.jfree.data.time.junit.SecondTests.java:152, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:155, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[28] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.block.junit.EmptyBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:112, 15.38%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:113, 15.38%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:114, 23.08%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.CompositeTitleTests.java:165, 10.53%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.CompositeTitleTests.java:166, 10.53%> (predicates:{(t1 != t2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.CompositeTitleTests.java:167, 15.79%> (predicates:{(t1 != t2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 6, classes: 16): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:180, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:152, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:182, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:140, 14.29%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:142, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:122, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:155, 15.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:135, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.LineBorderTests.java:145, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:199, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:706, 12.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:734, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:776, 10.34%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:825, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:737, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:768, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:813, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:865, 9.09%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:912, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:173, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:195, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:153, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:187, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
==============================================

[29] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetIndex()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:189, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:190, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:191, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:201, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testGetIndex()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:148, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:149, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:150, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:159, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testGetIndex()>
		<org.jfree.data.junit.KeyedObjectsTests.java:298, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:299, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:300, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:310, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 3, classes: 4): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetIndex()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:189, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:190, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:191, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testGetIndex()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:148, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:149, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:150, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testGetIndex2()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:240, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:242, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:244, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testGetIndex()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:216, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:222, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testRemoveValue()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:360, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:362, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testGetIndex()>
		<org.jfree.data.junit.KeyedObjectsTests.java:298, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:299, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:300, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testRemoveValue()>
		<org.jfree.data.junit.KeyedObjectsTests.java:354, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:358, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testRemoveValueInt()>
		<org.jfree.data.junit.KeyedObjectsTests.java:392, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[30] Set (editDistance: 0, isComplete: true, packages: 6, classes: 7): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (13): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange3()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:240, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:241, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:248, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:249, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testAutoRange3()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:282, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:283, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:290, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:291, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testBugX()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:832, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:833, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:840, 20.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:841, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindDomainBounds2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:324, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:325, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:329, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:330, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:351, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:352, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:356, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:357, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:378, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:379, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:383, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:384, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:204, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:205, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:208, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:209, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:250, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:251, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:253, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:254, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds3_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:386, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:387, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:389, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:390, 6.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBounds_CategoryDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:689, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:690, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:694, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:695, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testAdd()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:226, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:227, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:231, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:232, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void test3072674()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:313, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:314, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:317, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:318, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testUpdate_RegularTimePeriod()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1115, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1117, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1119, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1121, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:351, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:356, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:378, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:383, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:352, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:357, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testFindRangeBounds2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:379, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:384, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[31] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (3): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:776, 10.34%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:790, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:813, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:825, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:865, 9.09%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:877, 6.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 6, classes: 16): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:180, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:152, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:182, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:140, 14.29%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:142, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:122, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:155, 15.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:135, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.LineBorderTests.java:145, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:199, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:706, 12.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:734, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:776, 10.34%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:825, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:737, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:768, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:813, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:865, 9.09%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:912, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:173, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:195, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:153, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:187, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 22, classes: 273): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:141, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:937, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[32] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.time.junit.MonthTests: void testNext()>
		<org.jfree.data.time.junit.MonthTests.java:417, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:418, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:420, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testNext()>
		<org.jfree.data.time.junit.QuarterTests.java:437, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:438, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:440, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testNext()>
		<org.jfree.data.time.junit.WeekTests.java:461, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:462, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:464, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void test31Dec9999Next()>
		<org.jfree.data.time.junit.DayTests.java:194, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testNext()>
		<org.jfree.data.time.junit.DayTests.java:392, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testLastHourNext()>
		<org.jfree.data.time.junit.HourTests.java:191, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testNext()>
		<org.jfree.data.time.junit.HourTests.java:374, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testNext()>
		<org.jfree.data.time.junit.MillisecondTests.java:357, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testNext()>
		<org.jfree.data.time.junit.MinuteTests.java:332, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testNext()>
		<org.jfree.data.time.junit.MonthTests.java:420, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testNext()>
		<org.jfree.data.time.junit.QuarterTests.java:440, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testNext()>
		<org.jfree.data.time.junit.SecondTests.java:332, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testNext()>
		<org.jfree.data.time.junit.WeekTests.java:464, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void test9999Next()>
		<org.jfree.data.time.junit.YearTests.java:196, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testNext()>
		<org.jfree.data.time.junit.YearTests.java:406, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.MonthTests: void testNext()>
		<org.jfree.data.time.junit.MonthTests.java:417, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testNext()>
		<org.jfree.data.time.junit.QuarterTests.java:437, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testNext()>
		<org.jfree.data.time.junit.WeekTests.java:461, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[33] Set (editDistance: 0, isComplete: true, packages: 1, classes: 4): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:184, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:193, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:192, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:201, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:315, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:324, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:184, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:193, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 7, classes: 17): 
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:367, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testRemove()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:655, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testSampleFunction2D()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:852, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testConstructor()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:191, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void test1161340()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:106, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:108, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:114, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:171, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testClear()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:201, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:245, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveAllSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:363, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:369, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:87, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:246, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:251, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:249, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:254, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:173, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:176, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:183, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testConstructor()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:99, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testAddSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:294, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testToArrayExample()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:538, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[34] Set (editDistance: 0, isComplete: true, packages: 1, classes: 15): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (15): 
	<org.jfree.chart.junit.AreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.AreaChartTests.java:164, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.AreaChartTests.java:168, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.AreaChartTests.java:170, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.BarChart3DTests.java:142, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChart3DTests.java:146, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChart3DTests.java:148, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.BarChartTests.java:146, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChartTests.java:150, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChartTests.java:152, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.LineChart3DTests.java:141, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChart3DTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChart3DTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.LineChartTests.java:141, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChartTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChartTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ScatterPlotTests: void testReplaceDataset()>
		<org.jfree.chart.junit.ScatterPlotTests.java:142, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ScatterPlotTests.java:146, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ScatterPlotTests.java:148, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedAreaChartTests.java:141, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedAreaChartTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedAreaChartTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedBarChart3DTests.java:141, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChart3DTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChart3DTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedBarChartTests.java:147, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChartTests.java:151, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChartTests.java:153, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.TimeSeriesChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.TimeSeriesChartTests.java:138, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.TimeSeriesChartTests.java:142, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.TimeSeriesChartTests.java:144, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYAreaChartTests.java:139, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYAreaChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYAreaChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYBarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYBarChartTests.java:142, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYBarChartTests.java:146, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYBarChartTests.java:148, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYLineChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYLineChartTests.java:139, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYLineChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYLineChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYStepAreaChartTests.java:139, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepAreaChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepAreaChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYStepChartTests.java:139, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 15): 
	<org.jfree.chart.junit.AreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.AreaChartTests.java:168, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.AreaChartTests.java:170, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.BarChart3DTests.java:146, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChart3DTests.java:148, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.BarChartTests.java:150, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.BarChartTests.java:152, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.LineChart3DTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChart3DTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.LineChartTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LineChartTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ScatterPlotTests: void testReplaceDataset()>
		<org.jfree.chart.junit.ScatterPlotTests.java:146, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ScatterPlotTests.java:148, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedAreaChartTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedAreaChartTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChart3DTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedBarChart3DTests.java:145, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChart3DTests.java:147, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.StackedBarChartTests.java:151, 13.51%> (predicates:{(temp$22 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StackedBarChartTests.java:153, 13.51%> (predicates:{(temp$22 > 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.TimeSeriesChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.TimeSeriesChartTests.java:142, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.TimeSeriesChartTests.java:144, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYAreaChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYAreaChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYBarChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYBarChartTests.java:146, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYBarChartTests.java:148, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYLineChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYLineChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYLineChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepAreaChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYStepAreaChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepAreaChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepChartTests: void testReplaceDataset()>
		<org.jfree.chart.junit.XYStepChartTests.java:143, 17.86%> (predicates:{(temp$13 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.XYStepChartTests.java:145, 17.86%> (predicates:{(temp$13 > 0)=null, (temp$19 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[35] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (3): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:168, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:170, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:171, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:221, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:223, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:242, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:244, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:245, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:221, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:223, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:242, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:244, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 7, classes: 17): 
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:367, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testRemove()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:655, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testSampleFunction2D()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:852, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testConstructor()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:191, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void test1161340()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:106, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:108, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:114, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:171, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testClear()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:201, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:245, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testRemoveAllSeries()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:363, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:369, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:87, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:246, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:251, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:249, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:254, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:173, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:176, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:183, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testConstructor()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:99, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testAddSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:294, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testToArrayExample()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:538, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[36] Set (editDistance: 0, isComplete: true, packages: 2, classes: 15): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (15): 
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:183, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:184, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:313, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:314, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:315, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:362, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:363, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:364, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:174, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:242, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:243, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:244, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:356, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:357, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:358, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:270, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:271, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:272, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:246, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:247, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:248, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:292, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:293, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:294, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:417, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:418, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:419, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:203, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:204, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:205, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:247, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:248, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:214, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:215, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:216, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:346, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:347, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:348, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:299, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:300, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:301, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 0.67, ccsize: 3, packages: 2, classes: 15): 
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:183, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:313, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:362, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:242, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:356, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:270, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:246, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:292, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:417, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:203, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:247, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:214, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:346, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:299, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 2, classes: 15): 
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:184, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:314, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:363, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:173, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:243, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:357, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:271, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:247, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:293, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:418, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:204, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:248, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:215, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:347, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:300, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 2, classes: 15): 
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:185, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:315, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:364, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:174, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:244, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:358, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:272, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:248, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:294, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:419, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:205, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:216, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:348, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testGetLegendItemSeriesIndex()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:301, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[37] Set (editDistance: 0, isComplete: true, packages: 3, classes: 6): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:206, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:207, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:208, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:219, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:220, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:221, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:233, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:234, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList1d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:306, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:307, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:308, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList2d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:369, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:370, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:371, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList3d()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:432, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:433, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:434, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testRemove()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:211, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:214, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:225, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:225, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:275, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:278, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:281, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:221, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:224, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 4): 
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:225, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:225, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:278, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:281, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:221, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:224, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[38] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.PieChart3DTests: void testReplaceDatasetOnPieChart()>
		<org.jfree.chart.junit.PieChart3DTests.java:107, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PieChart3DTests.java:108, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PieChartTests: void testReplaceDatasetOnPieChart()>
		<org.jfree.chart.junit.PieChartTests.java:101, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PieChartTests.java:102, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.73, ccsize: 5, packages: 1, classes: 2): 
	<org.jfree.chart.junit.PieChart3DTests: void testReplaceDatasetOnPieChart()>
		<org.jfree.chart.junit.PieChart3DTests.java:108, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PieChartTests: void testReplaceDatasetOnPieChart()>
		<org.jfree.chart.junit.PieChartTests.java:102, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[39] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItem()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:289, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:292, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItem()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:338, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:341, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testGetLegendItem()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:289, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:292, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testGetLegendItem()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:338, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:341, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[40] Set (editDistance: 0, isComplete: true, packages: 1, classes: 4): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:183, 22.73%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:191, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:195, 22.73%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:203, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:184, 22.73%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:192, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:187, 22.73%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:195, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.50, ccsize: 5, packages: 1, classes: 4): 
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:191, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:203, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:192, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testNotification()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:195, 27.27%> (predicates:{(temp$5 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[41] Set (editDistance: 0, isComplete: true, packages: 1, classes: 8): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<org.jfree.data.time.junit.DayTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.DayTests.java:270, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:272, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.HourTests.java:358, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:360, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MillisecondTests.java:337, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:340, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MinuteTests.java:315, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:317, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MonthTests.java:406, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:408, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.QuarterTests.java:426, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:428, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.SecondTests.java:314, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:316, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.WeekTests.java:450, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:452, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.DayTests.java:270, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:272, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.HourTests.java:358, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:360, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MillisecondTests.java:337, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:340, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MinuteTests.java:315, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:317, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.MonthTests.java:406, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:408, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.QuarterTests.java:426, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:428, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.SecondTests.java:314, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:316, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.WeekTests.java:450, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:452, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.YearTests.java:395, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[42] Set (editDistance: 0, isComplete: true, packages: 2, classes: 4): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:125, 13.33%> (predicates:{(a1 == a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:123, 13.33%> (predicates:{(w1 == w2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:127, 13.33%> (predicates:{(p1 == p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:317, 8.00%> (predicates:{(temp$14 == temp$13)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 22, classes: 273): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:141, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:937, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[43] Set (editDistance: 0, isComplete: true, packages: 3, classes: 5): 
Assertions (2): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.junit.JFreeChartTests: void testEquals2()>
		<org.jfree.chart.junit.JFreeChartTests.java:237, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:238, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:122, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:123, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:107, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:108, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:122, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:123, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:107, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:108, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 3, packages: 2, classes: 4): 
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:123, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:108, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:123, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:108, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[44] Set (editDistance: 0, isComplete: true, packages: 3, classes: 6): 
Assertions (2): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:180, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:182, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:162, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:140, 14.29%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:142, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.LineBorderTests.java:145, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:147, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:199, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:202, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:734, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:747, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 6, classes: 16): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:180, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testSerialization()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:152, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:182, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:140, 14.29%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:142, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:122, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:155, 15.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:135, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testSerialization()>
		<org.jfree.chart.block.junit.LineBorderTests.java:145, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:199, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:706, 12.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:734, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:776, 10.34%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:825, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:737, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:768, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:813, 13.04%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:865, 9.09%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:912, 5.36%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:173, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:195, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:153, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:187, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
==============================================

[45] Set (editDistance: 0, isComplete: true, packages: 4, classes: 5): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisLocationTests.java:125, 18.75%> (predicates:{(location1 == location2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:119, 16.67%> (predicates:{(orientation1 == orientation2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:115, 16.67%> (predicates:{(t1 == t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:132, 16.67%> (predicates:{(d1 == d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:132, 16.67%> (predicates:{(r1 == r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 22, classes: 273): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:141, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:937, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[46] Set (editDistance: 0, isComplete: true, packages: 5, classes: 10): 
Assertions (2): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (12): 
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:182, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:142, 17.65%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:155, 15.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:135, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:706, 12.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:737, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:768, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:173, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:324, 6.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:187, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 22, classes: 273): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testSerialization()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:123, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:124, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.AbstractBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:184, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testSerialization()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:144, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:154, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:157, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:137, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization1()>
		<org.jfree.chart.junit.JFreeChartTests.java:315, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:141, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:708, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:779, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:828, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotOrientationTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotOrientationTests.java:117, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:739, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:770, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:816, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:868, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSerialization5()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:914, 8.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:937, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:113, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:175, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testSerialization()>
		<org.jfree.data.junit.DomainOrderTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTests.java:326, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testSerialization()>
		<org.jfree.data.junit.RangeTypeTests.java:130, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization1()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:189, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testSerialization2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:214, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[47] Set (editDistance: 0, isComplete: true, packages: 9, classes: 16): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (20): 
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testEquals()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:83, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:85, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetRange()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:224, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:225, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMaximumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:236, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:246, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMinimumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:264, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization2()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:191, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:192, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:191, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:215, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:202, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:227, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:188, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:210, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:268, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:292, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:165, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetSeriesKey()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:195, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:196, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetRowKey()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:212, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:213, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMinimumRangeValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:512, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:516, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMaximumRangeValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:525, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:529, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testImmutable()>
		<org.jfree.data.time.junit.DateRangeTests.java:142, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:144, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:275, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:276, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:323, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:341, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:156, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:174, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:173, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:195, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:176, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:198, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMaximumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:236, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMinimumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:264, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMaximumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:246, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSetMinimumDate()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[48] Set (editDistance: 0, isComplete: true, packages: 9, classes: 23): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (68): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:221, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:222, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange1()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:276, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:277, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testXYAutoRange2()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:304, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:305, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testAutoRange1()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:243, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:244, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testAutoRange2()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:262, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:263, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testXYAutoRange1()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:366, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:367, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testXYAutoRange2()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:394, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:395, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ValueAxisTests: void testAxisMargins()>
		<org.jfree.chart.axis.junit.ValueAxisTests.java:248, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:252, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:146, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:147, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testFN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:159, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:160, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:171, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:172, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:183, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:184, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:195, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:196, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:207, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:208, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:219, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:220, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:241, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:242, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:252, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:253, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:264, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:265, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:275, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:276, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:287, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:288, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:299, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:300, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:312, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:313, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:324, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:325, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor1()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:196, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:197, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ImageTitleTests: void testWidthAndHeight()>
		<org.jfree.chart.title.junit.ImageTitleTests.java:137, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:138, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testConstructor()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:86, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.LineFunction2DTests.java:87, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testConstructor()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:88, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:89, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testConstructor()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:87, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PowerFunction2DTests.java:88, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:145, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:146, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:166, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindDomainBounds3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:185, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:186, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:218, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:219, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateDomainBounds_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:231, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:232, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:263, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:264, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:273, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:274, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds_CategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:331, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:332, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:399, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:400, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateRangeBounds2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:413, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:414, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:567, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:568, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:587, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:588, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:602, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:603, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCumulativeRange_NaN()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:616, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:617, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBoundsForTableXYDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:768, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:769, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testStackedRangeWithMap()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:789, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:790, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMinimumStackedRangeValue2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:895, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:899, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMaximumStackedRangeValue2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:936, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:940, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests: void test1593149()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:179, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:180, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testGetRangeLowerBound()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:242, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:243, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testGetRangeUpperBound()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:253, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:254, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testOLSRegression1a()>
		<org.jfree.data.statistics.junit.RegressionTests.java:83, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:84, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testPowerRegression1a()>
		<org.jfree.data.statistics.junit.RegressionTests.java:115, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:116, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testOLSRegression2a()>
		<org.jfree.data.statistics.junit.RegressionTests.java:147, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:148, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testPowerRegression2a()>
		<org.jfree.data.statistics.junit.RegressionTests.java:179, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:180, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian5()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:353, 4.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:356, 4.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testBug3445507()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:424, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:425, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testDelete_RegularTimePeriod()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:338, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:339, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testBug3446965()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1017, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1018, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testDataRange()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:98, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:99, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:292, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:293, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:293, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:294, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testGetXLowValue()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:319, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:321, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testGetXHighValue()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:330, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:332, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:293, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:294, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testBug3445507()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:451, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:452, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testAddOrUpdate2()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:394, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:395, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:457, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:458, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testUpdateByIndex3()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:758, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:759, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSetMaximumItemCount2()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:292, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:293, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (4):
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:241, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:252, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:264, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:275, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:287, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:299, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:312, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:324, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 1): 
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:242, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:253, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:265, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNullBlock_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:276, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:288, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:300, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_FR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:313, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testGridNotFull_NN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:325, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.29, ccsize: 4, packages: 1, classes: 1): 
	<org.jfree.chart.block.junit.GridArrangementTests: void testNN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:146, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testFN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:159, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:171, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:183, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:195, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:207, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:219, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.18, ccsize: 5, packages: 1, classes: 1): 
	<org.jfree.chart.block.junit.GridArrangementTests: void testNN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:147, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testFN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:160, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:172, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRF()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:184, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:196, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testRN()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:208, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testNR()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:220, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[49] Set (editDistance: 0, isComplete: true, packages: 1, classes: 10): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (20): 
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.DayTests.java:284, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.DayTests.java:337, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testImmutability()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:137, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.HourTests.java:256, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.HourTests.java:309, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MillisecondTests.java:235, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.MillisecondTests.java:288, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MinuteTests.java:213, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.MinuteTests.java:266, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MonthTests.java:304, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.MonthTests.java:357, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.QuarterTests.java:324, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.QuarterTests.java:377, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.SecondTests.java:212, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.SecondTests.java:265, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.WeekTests.java:334, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.WeekTests.java:394, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.YearTests.java:292, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetLastMillisecond()>
		<org.jfree.data.time.junit.YearTests.java:346, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetSerialIndex()>
		<org.jfree.data.time.junit.YearTests.java:395, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 10): 
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.DayTests.java:284, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testImmutability()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:137, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.HourTests.java:256, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MillisecondTests.java:235, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MinuteTests.java:213, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.MonthTests.java:304, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.QuarterTests.java:324, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.SecondTests.java:212, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.WeekTests.java:334, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecond()>
		<org.jfree.data.time.junit.YearTests.java:292, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[50] Set (editDistance: 0, isComplete: true, packages: 4, classes: 9): 
Assertions (1): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (16): 
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:88, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testFindDomainBounds()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:240, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:249, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testConstructor()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:91, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void test1Jan1900Previous()>
		<org.jfree.data.time.junit.DayTests.java:164, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void test31Dec9999Next()>
		<org.jfree.data.time.junit.DayTests.java:194, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testFirstHourPrevious()>
		<org.jfree.data.time.junit.HourTests.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testLastHourNext()>
		<org.jfree.data.time.junit.HourTests.java:191, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testJan1900Previous()>
		<org.jfree.data.time.junit.MonthTests.java:179, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDec9999Next()>
		<org.jfree.data.time.junit.MonthTests.java:206, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ1Y1900Previous()>
		<org.jfree.data.time.junit.QuarterTests.java:174, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ4Y9999Next()>
		<org.jfree.data.time.junit.QuarterTests.java:201, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW1Y1900Previous()>
		<org.jfree.data.time.junit.WeekTests.java:142, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW52Y9999Next()>
		<org.jfree.data.time.junit.WeekTests.java:166, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testMinuss9999Previous()>
		<org.jfree.data.time.junit.YearTests.java:168, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void test9999Next()>
		<org.jfree.data.time.junit.YearTests.java:196, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (3):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.DayTests: void test1Jan1900Previous()>
		<org.jfree.data.time.junit.DayTests.java:164, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testFirstHourPrevious()>
		<org.jfree.data.time.junit.HourTests.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testMinuss9999Previous()>
		<org.jfree.data.time.junit.YearTests.java:168, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.75, ccsize: 3, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.MonthTests: void testJan1900Previous()>
		<org.jfree.data.time.junit.MonthTests.java:179, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ1Y1900Previous()>
		<org.jfree.data.time.junit.QuarterTests.java:174, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW1Y1900Previous()>
		<org.jfree.data.time.junit.WeekTests.java:142, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.75, ccsize: 3, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.MonthTests: void testDec9999Next()>
		<org.jfree.data.time.junit.MonthTests.java:206, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ4Y9999Next()>
		<org.jfree.data.time.junit.QuarterTests.java:201, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW52Y9999Next()>
		<org.jfree.data.time.junit.WeekTests.java:166, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[51] Set (editDistance: 0, isComplete: true, packages: 10, classes: 23): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (47): 
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testHashCode()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:108, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoom()>
		<org.jfree.chart.junit.ChartPanelTests.java:187, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInBoth()>
		<org.jfree.chart.junit.ChartPanelTests.java:202, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutBoth()>
		<org.jfree.chart.junit.ChartPanelTests.java:217, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:232, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInDomain()>
		<org.jfree.chart.junit.ChartPanelTests.java:249, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInRange()>
		<org.jfree.chart.junit.ChartPanelTests.java:266, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutDomain()>
		<org.jfree.chart.junit.ChartPanelTests.java:283, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutRange()>
		<org.jfree.chart.junit.ChartPanelTests.java:300, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoDomainBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:317, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoRangeBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:334, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSubtitleCount()>
		<org.jfree.chart.junit.JFreeChartTests.java:246, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testRemoveSubplot()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:170, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:976, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCreateStackedValueList4()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:245, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:367, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetCategoryCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:378, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetSeriesIndex()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:389, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetRowIndex()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:400, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetCategoryIndex()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:429, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetColumnIndex()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:440, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetColumnKeys()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:470, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetRowKeys()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:482, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetColumnCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:493, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetRowCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:504, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testHashCode()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:136, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testHashCode()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:141, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testGetOrder()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:119, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testHashCode()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:171, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testHashCode()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:135, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetSeriesCount()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:187, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetRowCount()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:204, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetColumnCount()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:410, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void test697153()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:560, 12.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testConstructor()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:100, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void test1Jan1900Next()>
		<org.jfree.data.time.junit.DayTests.java:174, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void test31Dec9999Previous()>
		<org.jfree.data.time.junit.DayTests.java:184, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testParseHour()>
		<org.jfree.data.time.junit.HourTests.java:200, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testAddValue()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:195, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testAddValue()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:251, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void test1900Next()>
		<org.jfree.data.time.junit.YearTests.java:177, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void test9999Previous()>
		<org.jfree.data.time.junit.YearTests.java:187, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testPrune()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:239, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testIndexOf()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:194, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testIndexOf()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:195, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testIndexOf()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:195, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testIndexOf()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:194, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.40, ccsize: 4, packages: 1, classes: 1): 
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoom()>
		<org.jfree.chart.junit.ChartPanelTests.java:187, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInBoth()>
		<org.jfree.chart.junit.ChartPanelTests.java:202, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutBoth()>
		<org.jfree.chart.junit.ChartPanelTests.java:217, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:232, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInDomain()>
		<org.jfree.chart.junit.ChartPanelTests.java:249, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomInRange()>
		<org.jfree.chart.junit.ChartPanelTests.java:266, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutDomain()>
		<org.jfree.chart.junit.ChartPanelTests.java:283, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_zoomOutRange()>
		<org.jfree.chart.junit.ChartPanelTests.java:300, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoDomainBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:317, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void test2502355_restoreAutoRangeBounds()>
		<org.jfree.chart.junit.ChartPanelTests.java:334, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[52] Set (editDistance: 0, isComplete: true, packages: 10, classes: 39): 
Assertions (1): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (42): 
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testCloning()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:116, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testCloning()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:117, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testCloning()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:131, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testCloning()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:127, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testCloning()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:127, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testCloning()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:112, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testCloning()>
		<org.jfree.chart.block.junit.LineBorderTests.java:122, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testEquals2()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:122, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testEquals1481087()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:221, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testEquals1481087()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:199, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testRemoveDomainMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:990, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testRemoveRangeMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:999, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterIntervalTests: void testCloning()>
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:116, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PieLabelRecordTests: void testCloning()>
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:135, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testRemoveDomainMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1175, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testRemoveRangeMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1184, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.OutlierTests: void testCloning()>
		<org.jfree.chart.renderer.junit.OutlierTests.java:118, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.OutlierTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.OutlierTests.java:126, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:108, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:126, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:113, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:171, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testCloning()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:104, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testClone()>
		<org.jfree.data.time.junit.DateRangeTests.java:131, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testNotCloneable()>
		<org.jfree.data.time.junit.DayTests.java:262, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testNotCloneable()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:127, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testNotCloneable()>
		<org.jfree.data.time.junit.HourTests.java:244, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testNotCloneable()>
		<org.jfree.data.time.junit.MillisecondTests.java:223, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testNotCloneable()>
		<org.jfree.data.time.junit.MinuteTests.java:201, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testNotCloneable()>
		<org.jfree.data.time.junit.MonthTests.java:292, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testNotCloneable()>
		<org.jfree.data.time.junit.QuarterTests.java:288, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testNotCloneable()>
		<org.jfree.data.time.junit.SecondTests.java:200, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testClone()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:165, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testNotCloneable()>
		<org.jfree.data.time.junit.WeekTests.java:212, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testNotCloneable()>
		<org.jfree.data.time.junit.YearTests.java:267, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testCloning()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:114, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:101, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testCloning()>
		<org.jfree.data.xy.junit.VectorTests.java:117, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testCloning()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:117, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testCloning()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:118, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testCloning()>
		<org.jfree.data.xy.junit.YIntervalTests.java:108, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testCloning()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:107, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testRemoveDomainMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:990, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testRemoveDomainMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1175, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 2, packages: 1, classes: 2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testRemoveRangeMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:999, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testRemoveRangeMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1184, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[53] Set (editDistance: 0, isComplete: true, packages: 22, classes: 242): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (297): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:197, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:177, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:209, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:237, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:202, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:228, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:204, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:218, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:231, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testSerialization()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:165, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:118, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:250, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:216, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:193, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:153, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickTests.java:188, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:123, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:205, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testSerialization()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxis3DTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxis3DTests.java:101, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:219, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testSerialization()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:139, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void verifySerialization(org.jfree.chart.axis.SegmentedTimeline)>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:849, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testSerialization()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:110, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:104, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testSerialization()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testSerialization()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:135, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testSerialization()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:178, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:152, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:156, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:170, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testSerialization()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:153, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:145, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testSerialization()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:158, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void testConstructor1()>
		<org.jfree.chart.junit.ChartPanelTests.java:107, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void testSetChart()>
		<org.jfree.chart.junit.ChartPanelTests.java:117, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:164, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization2()>
		<org.jfree.chart.junit.JFreeChartTests.java:348, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization3()>
		<org.jfree.chart.junit.JFreeChartTests.java:430, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.JFreeChartTests: void testSerialization4()>
		<org.jfree.chart.junit.JFreeChartTests.java:465, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:137, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization2()>
		<org.jfree.chart.junit.LegendItemTests.java:386, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization1()>
		<org.jfree.chart.junit.PaintMapTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testSerialization2()>
		<org.jfree.chart.junit.PaintMapTests.java:224, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testKeysOfDifferentClasses()>
		<org.jfree.chart.junit.PaintMapTests.java:236, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization1()>
		<org.jfree.chart.junit.StrokeMapTests.java:193, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testSerialization2()>
		<org.jfree.chart.junit.StrokeMapTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:168, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:217, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:174, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testEquals()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:86, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelPositionTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelPositionTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:207, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:185, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardContourToolTipGeneratorTests.java:103, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:241, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:174, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:202, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:221, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:211, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testSerialization2()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testSerialization()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:172, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testConstructor()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:135, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:169, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testConstructor1()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:116, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:181, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:153, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:173, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:163, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ContourPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ContourPlotTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:232, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testSerialization()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization1()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:282, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.MeterPlotTests.java:305, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:212, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:608, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:164, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:317, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:179, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:344, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:162, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:170, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:205, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:150, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:88, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:151, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:176, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:92, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:155, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:196, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:175, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:185, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:132, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:157, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:86, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:171, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:171, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:192, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetPaint()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:661, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetOutlinePaint()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:670, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetStroke()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:680, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetOutlineStroke()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:690, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetShape()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:700, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetItemLabelFont()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:720, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetItemLabelPaint()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:731, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetPositiveItemLabelPosition()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:742, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetNegativeItemLabelPosition()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:755, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:149, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testSerialization()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:178, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:240, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:191, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:181, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:171, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:86, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:237, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:156, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:87, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:149, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:221, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:257, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:284, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:195, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:160, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:213, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:180, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:207, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testSerialization2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:232, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:172, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:158, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:167, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testSerialization()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:193, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.DateTitleTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testSerialization()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:218, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:144, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testSerialization()>
		<org.jfree.chart.title.junit.TextTitleTests.java:203, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:175, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:157, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:178, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:157, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.StandardXYURLGeneratorTests.java:103, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testSerialization()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:161, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:247, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:227, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:129, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:159, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testSerialization()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:125, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:527, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:153, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testSerialization()>
		<org.jfree.data.gantt.junit.TaskTests.java:154, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetGroupTests: void testSerialization()>
		<org.jfree.data.general.junit.DatasetGroupTests.java:102, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMinimumDomainValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:494, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMaximumDomainValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:503, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindStackedRangeBoundsForTableXYDataset2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:778, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1259, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:127, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:128, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testSerialization()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:210, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:156, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testSerialization()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:218, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:165, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:163, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testSerialization()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:533, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testSerialization()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:288, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:148, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSerialization()>
		<org.jfree.data.junit.KeyedObjectsTests.java:218, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testSerialization()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:127, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:138, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:186, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testSerialization()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:129, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:202, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:136, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testSerialization()>
		<org.jfree.data.time.junit.DateRangeTests.java:122, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testSerialization()>
		<org.jfree.data.time.junit.DayTests.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetStart()>
		<org.jfree.data.time.junit.DayTests.java:405, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetEnd()>
		<org.jfree.data.time.junit.DayTests.java:419, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:105, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testSerialization()>
		<org.jfree.data.time.junit.HourTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetStart()>
		<org.jfree.data.time.junit.HourTests.java:387, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetEnd()>
		<org.jfree.data.time.junit.HourTests.java:401, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testSerialization()>
		<org.jfree.data.time.junit.MillisecondTests.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetStart()>
		<org.jfree.data.time.junit.MillisecondTests.java:370, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetEnd()>
		<org.jfree.data.time.junit.MillisecondTests.java:384, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testSerialization()>
		<org.jfree.data.time.junit.MinuteTests.java:180, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetStart()>
		<org.jfree.data.time.junit.MinuteTests.java:347, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetEnd()>
		<org.jfree.data.time.junit.MinuteTests.java:364, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void test1611872()>
		<org.jfree.data.time.junit.MinuteTests.java:375, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testJan1900Next()>
		<org.jfree.data.time.junit.MonthTests.java:188, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testDec9999Previous()>
		<org.jfree.data.time.junit.MonthTests.java:197, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testSerialization()>
		<org.jfree.data.time.junit.MonthTests.java:271, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetStart()>
		<org.jfree.data.time.junit.MonthTests.java:433, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetEnd()>
		<org.jfree.data.time.junit.MonthTests.java:447, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ1Y1900Next()>
		<org.jfree.data.time.junit.QuarterTests.java:183, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ4Y9999Previous()>
		<org.jfree.data.time.junit.QuarterTests.java:192, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testSerialization()>
		<org.jfree.data.time.junit.QuarterTests.java:266, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetStart()>
		<org.jfree.data.time.junit.QuarterTests.java:453, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetEnd()>
		<org.jfree.data.time.junit.QuarterTests.java:467, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testSerialization()>
		<org.jfree.data.time.junit.SecondTests.java:179, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetStart()>
		<org.jfree.data.time.junit.SecondTests.java:345, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetEnd()>
		<org.jfree.data.time.junit.SecondTests.java:359, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testSerialization()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:142, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:128, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:165, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:266, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:143, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW1Y1900Next()>
		<org.jfree.data.time.junit.WeekTests.java:150, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW52Y9999Previous()>
		<org.jfree.data.time.junit.WeekTests.java:158, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testSerialization()>
		<org.jfree.data.time.junit.WeekTests.java:191, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetStart()>
		<org.jfree.data.time.junit.WeekTests.java:477, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetEnd()>
		<org.jfree.data.time.junit.WeekTests.java:491, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testSerialization()>
		<org.jfree.data.time.junit.YearTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetStart()>
		<org.jfree.data.time.junit.YearTests.java:419, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetEnd()>
		<org.jfree.data.time.junit.YearTests.java:433, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:172, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:166, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:186, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testSerialization()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:138, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:201, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:222, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:203, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:172, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testSerialization()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:160, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:155, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:128, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:158, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:159, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:161, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testSerialization()>
		<org.jfree.data.xy.junit.VectorTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:164, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:171, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:140, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:183, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:142, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:199, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testUpdate2()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:356, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:163, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YIntervalTests.java:132, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testSerialization()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:131, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (5):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testGetStart()>
		<org.jfree.data.time.junit.DayTests.java:405, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetStart()>
		<org.jfree.data.time.junit.HourTests.java:387, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetStart()>
		<org.jfree.data.time.junit.MillisecondTests.java:370, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetStart()>
		<org.jfree.data.time.junit.MinuteTests.java:347, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetStart()>
		<org.jfree.data.time.junit.MonthTests.java:433, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetStart()>
		<org.jfree.data.time.junit.QuarterTests.java:453, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetStart()>
		<org.jfree.data.time.junit.SecondTests.java:345, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetStart()>
		<org.jfree.data.time.junit.WeekTests.java:477, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetStart()>
		<org.jfree.data.time.junit.YearTests.java:419, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 2, packages: 1, classes: 9): 
	<org.jfree.data.time.junit.DayTests: void testGetEnd()>
		<org.jfree.data.time.junit.DayTests.java:419, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetEnd()>
		<org.jfree.data.time.junit.HourTests.java:401, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetEnd()>
		<org.jfree.data.time.junit.MillisecondTests.java:384, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetEnd()>
		<org.jfree.data.time.junit.MinuteTests.java:364, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetEnd()>
		<org.jfree.data.time.junit.MonthTests.java:447, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetEnd()>
		<org.jfree.data.time.junit.QuarterTests.java:467, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetEnd()>
		<org.jfree.data.time.junit.SecondTests.java:359, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetEnd()>
		<org.jfree.data.time.junit.WeekTests.java:491, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetEnd()>
		<org.jfree.data.time.junit.YearTests.java:433, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<org.jfree.chart.junit.ChartPanelTests: void testConstructor1()>
		<org.jfree.chart.junit.ChartPanelTests.java:107, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ChartPanelTests: void testSetChart()>
		<org.jfree.chart.junit.ChartPanelTests.java:117, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.MonthTests: void testJan1900Next()>
		<org.jfree.data.time.junit.MonthTests.java:188, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ1Y1900Next()>
		<org.jfree.data.time.junit.QuarterTests.java:183, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW1Y1900Next()>
		<org.jfree.data.time.junit.WeekTests.java:150, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.50, ccsize: 3, packages: 1, classes: 3): 
	<org.jfree.data.time.junit.MonthTests: void testDec9999Previous()>
		<org.jfree.data.time.junit.MonthTests.java:197, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testQ4Y9999Previous()>
		<org.jfree.data.time.junit.QuarterTests.java:192, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testW52Y9999Previous()>
		<org.jfree.data.time.junit.WeekTests.java:158, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[54] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (33): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.ValueAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.ValueAxisTests.java:119, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:123, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:125, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:129, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:131, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:135, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:137, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:149, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:151, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:156, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:158, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:162, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:164, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:168, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:170, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:174, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:176, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:180, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:182, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:185, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:187, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:191, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:193, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:197, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:199, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:203, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:205, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:209, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:211, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:215, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:217, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:221, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:223, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:91, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:95, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:97, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:101, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:103, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:107, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:109, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:113, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:115, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:119, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:121, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:125, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:127, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:131, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:133, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:138, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:141, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:145, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:147, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:151, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:153, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:157, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:159, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:163, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:165, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:169, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:171, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:176, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:179, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:182, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:184, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:188, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:190, 4.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[55] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (32): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.CrosshairTests: void testEquals()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:93, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:94, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:97, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:99, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:102, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:104, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:107, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:109, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:112, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:114, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:117, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:119, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:122, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:124, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:128, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:131, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:134, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:136, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:139, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:141, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:144, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:146, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:149, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:151, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:154, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:156, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:159, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:161, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:164, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:166, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:169, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:171, 4.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PolarPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:155, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:156, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:160, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:163, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:167, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:169, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:172, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:174, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:177, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:179, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:182, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:184, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:188, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:191, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:194, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:196, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:199, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:201, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:205, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:208, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:211, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:213, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:216, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:218, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:221, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:223, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:226, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:228, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:231, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:233, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:238, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:242, 4.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[56] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (23): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:93, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:96, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:98, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:101, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:103, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:106, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:108, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:112, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:114, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:118, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:120, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:124, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:126, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:130, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:132, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:136, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:138, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:143, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:145, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:149, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:151, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:155, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:157, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:96, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:99, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:101, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:104, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:106, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:109, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:111, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:115, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:117, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:121, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:123, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:127, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:129, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:133, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:135, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:139, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:141, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:146, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:148, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:152, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:154, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:158, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:160, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[57] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (22): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsLowerBound_Descending()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:221, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:226, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:228, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:233, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:235, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:237, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:239, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:241, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:246, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:248, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:250, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:252, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:258, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:260, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:262, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:264, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:266, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:268, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:274, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:276, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:278, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:280, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsUpperBound_Descending()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:428, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:433, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:435, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:440, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:442, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:444, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:446, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:448, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:453, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:455, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:457, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:459, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:465, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:467, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:469, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:471, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:473, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:475, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:481, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:483, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:485, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:487, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[58] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (21): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:92, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:96, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:98, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:102, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:104, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:108, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:110, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:114, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:116, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:120, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:122, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:126, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:128, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:132, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:134, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:138, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:140, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:144, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:146, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:151, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:154, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloneIndependence()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:642, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:645, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:647, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:650, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:652, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:655, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:657, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:660, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:662, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:665, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:667, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:670, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:672, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:675, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:677, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:680, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:682, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:685, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:687, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:690, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:692, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[59] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (21): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:116, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:121, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:124, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:129, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:132, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:136, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:138, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:142, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:144, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:148, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:150, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:154, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:156, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:160, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:162, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:166, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:168, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:171, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:173, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:176, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:178, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testEquals()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:126, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:129, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:131, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:134, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:136, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:139, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:141, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:144, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:146, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:149, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:151, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:154, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:156, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:159, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:161, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:164, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:166, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:169, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:171, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:174, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:176, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[60] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (20): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsLowerBound_Ascending()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:147, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:152, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:154, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:159, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:161, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:163, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:165, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:170, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:172, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:174, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:176, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:182, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:184, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:186, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:188, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:190, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:196, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:198, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:200, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:202, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsUpperBound_Ascending()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:354, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:359, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:361, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:366, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:368, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:370, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:372, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:377, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:379, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:381, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:383, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:389, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:391, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:393, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:395, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:397, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:403, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:405, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:407, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:409, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[61] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (20): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.block.junit.AbstractBlockTests: void testEquals()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:90, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:91, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:94, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:96, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:99, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:101, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:104, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:106, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:109, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:111, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:114, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:116, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:119, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:121, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:124, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:126, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:129, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:131, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:134, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:136, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:95, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:96, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:100, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:103, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:106, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:108, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:112, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:115, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:119, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:121, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:124, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:126, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:130, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:133, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:137, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:139, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:142, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:144, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:147, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:149, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[62] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (19): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetStartValue2()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:271, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:272, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:273, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:274, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:275, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:276, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:278, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:279, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:280, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:281, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:282, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:283, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:286, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:287, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:288, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:289, 4.65%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:290, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:291, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:292, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetEndValue2()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:336, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:337, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:338, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:339, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:340, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:341, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:343, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:344, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:345, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:346, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:347, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:348, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:351, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:352, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:353, 13.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:354, 4.65%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:355, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:356, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:357, 13.95%> (predicates:{(temp$32 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[63] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (18): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.block.junit.RectangleConstraintTests: void testCalculateConstrainedSize()>
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:86, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:87, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:95, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:96, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:104, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:105, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:113, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:114, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:122, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:123, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:131, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:132, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:137, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:138, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:146, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:147, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:155, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.RectangleConstraintTests.java:156, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:217, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:218, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:219, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:220, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:221, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:222, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:228, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:229, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:230, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:231, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:233, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:234, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:235, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:236, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:239, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:240, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:241, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:242, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testAddSeries()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:190, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:191, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:192, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:193, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:194, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:195, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:203, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:204, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:205, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:208, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:209, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:210, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:211, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:214, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:215, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:216, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:217, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[64] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (16): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsLowerBound_Unordered()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:86, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:91, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:93, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:98, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:100, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:102, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:104, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:109, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:111, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:113, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:115, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:121, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:123, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:125, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:127, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:129, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void testFindLiveItemsUpperBound_Unordered()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:293, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:298, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:300, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:305, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:307, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:309, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:311, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:316, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:318, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:322, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:328, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:330, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:332, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:334, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:336, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[65] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3): 
Assertions (16): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.block.junit.LabelBlockTests: void testEquals()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:94, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:95, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:99, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:102, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:106, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:109, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:113, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:116, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:119, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:121, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:124, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:126, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:129, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:131, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:134, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:136, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PieLabelRecordTests: void testEquals()>
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:89, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:90, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:93, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:95, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:98, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:100, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:103, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:105, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:108, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:110, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:113, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:115, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:118, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:120, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:123, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:125, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:92, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:93, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:98, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:102, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:107, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:111, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:116, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:120, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:126, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:131, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:137, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:142, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:148, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:153, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:159, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:164, 2.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[66] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3): 
Assertions (15): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:91, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:94, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:96, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:99, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:101, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:104, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:106, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:109, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:111, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:114, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:116, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:119, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:121, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:124, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:126, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.MeterNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:83, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:86, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:88, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:91, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:93, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:96, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:98, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:102, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:104, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:107, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:109, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:112, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:114, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:117, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MeterNeedleTests.java:119, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:107, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:111, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:113, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:116, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:118, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:124, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:128, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:131, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:133, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:140, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:145, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:149, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:151, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:155, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:157, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[67] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (14): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:10, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:11, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:12, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:13, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:14, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateYearA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:360, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:361, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:366, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:367, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:375, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:376, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:381, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:382, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:387, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:388, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:396, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:397, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:402, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:403, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateYearB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:433, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:434, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:439, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:440, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:448, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:449, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:454, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:455, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:460, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:461, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:469, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:470, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:475, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:476, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateMonthA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:506, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:507, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:512, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:513, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:521, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:522, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:527, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:528, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:533, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:534, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:542, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:543, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:548, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:549, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateMonthB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:579, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:580, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:585, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:586, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:594, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:595, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:600, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:601, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:606, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:607, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:615, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:616, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:621, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:622, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateDayA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:652, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:653, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:658, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:659, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:667, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:668, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:673, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:674, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:679, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:680, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:688, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:689, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:694, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:695, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateDayB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:725, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:726, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:731, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:732, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:740, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:741, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:746, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:747, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:752, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:753, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:761, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:762, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:767, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:768, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateHourA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:798, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:799, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:804, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:805, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:813, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:814, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:819, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:820, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:825, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:826, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:834, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:835, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:840, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:841, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateHourB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:871, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:872, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:877, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:878, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:886, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:887, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:892, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:893, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:898, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:899, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:907, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:908, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:913, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:914, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateSecondA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:944, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:945, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:950, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:951, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:959, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:960, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:965, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:966, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:971, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:972, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:980, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:981, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:986, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:987, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateSecondB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:1017, 1.89%> (predicates:{(temp$25 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1018, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1023, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1024, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1032, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1033, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1038, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1039, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1044, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1045, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1053, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1054, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1059, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1060, 1.89%> (predicates:{(temp$25 >= 0)=null, (temp$29 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null, (temp$46 >= 0)=null, (temp$50 < 0)=null, (temp$56 >= 0)=null, (temp$60 < 0)=null, (temp$66 >= 0)=null, (temp$70 < 0)=null, (temp$77 >= 0)=null, (temp$81 < 0)=null, (temp$87 >= 0)=null, (temp$91 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[68] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (14): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:106, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:107, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:110, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:112, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:115, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:117, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:120, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:122, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:131, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:132, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:135, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:137, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:140, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:142, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:103, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:104, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:107, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:109, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:112, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:114, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:117, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:119, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:128, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:129, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:132, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:134, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:137, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:139, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[69] Set (editDistance: 0, isComplete: true, packages: 6, classes: 10): 
Assertions (14): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:94, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:95, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:99, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:101, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:105, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:107, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:111, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:113, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:117, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:119, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:123, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:125, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:129, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:131, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:95, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:96, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:99, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:101, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:104, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:106, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:109, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:111, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:114, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:116, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:120, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:122, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:129, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:131, 5.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testEquals()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:96, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:97, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:102, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:106, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:111, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:115, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:120, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:124, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:129, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:133, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:138, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:142, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:147, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:151, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testEquals()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:102, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:103, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:107, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:109, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:114, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:117, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:122, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:125, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:131, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:135, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:141, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:145, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:151, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:155, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testEquals2()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:159, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:160, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:165, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:167, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:170, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:172, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:175, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:177, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:180, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:182, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:185, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:187, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:190, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:192, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:129, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:130, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:133, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:135, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:138, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:140, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:143, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:145, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:149, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:152, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:156, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:159, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:162, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:164, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:91, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:92, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:96, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:98, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:103, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:105, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:110, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:113, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:117, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:119, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:123, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:125, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:129, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:131, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:93, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:94, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:97, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:99, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:102, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:104, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:107, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:109, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:112, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:114, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:117, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:119, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:122, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYShapeRendererTests.java:124, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testEquals()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:139, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:140, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:144, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:146, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:150, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:152, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:156, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:158, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:162, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:164, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:168, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:170, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:174, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:176, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:102, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:103, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:107, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:109, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:113, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:115, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:119, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:121, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:125, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:127, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:131, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:133, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:137, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:139, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[70] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (13): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetStartValue()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:247, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:248, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:249, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:251, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:252, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:253, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:254, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:255, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:256, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:260, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:261, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:262, 7.14%> (predicates:{(temp$21 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:263, 21.43%> (predicates:{(temp$21 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetEndValue()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:312, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:313, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:314, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:316, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:317, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:318, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:319, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:320, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:321, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:325, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:326, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:327, 7.14%> (predicates:{(temp$21 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:328, 21.43%> (predicates:{(temp$21 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[71] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (13): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:94, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:102, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:107, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:109, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:112, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:114, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:117, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:119, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:122, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:124, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testEquals()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:95, 11.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:100, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:104, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:107, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:109, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:112, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:114, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:117, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:119, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:122, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:124, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:127, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:129, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[72] Set (editDistance: 0, isComplete: true, packages: 6, classes: 10): 
Assertions (13): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.annotations.junit.TextAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:87, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:91, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:93, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:97, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:99, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:104, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:107, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:111, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:113, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:117, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:119, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:123, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:125, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testEquals()>
		<org.jfree.chart.axis.junit.DateTickTests.java:96, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:99, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:101, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:104, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:106, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:109, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:111, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:114, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:116, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:119, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:121, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:125, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:127, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:94, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:97, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:99, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:102, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:104, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:107, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:109, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:112, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:114, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:117, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:119, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:124, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:90, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:93, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:95, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:98, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:100, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:103, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:105, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:108, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:110, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:113, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:115, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:118, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:120, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:88, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:92, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:94, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:98, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:100, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:105, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:107, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:111, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:113, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:117, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:119, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:123, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:125, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:90, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:94, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:96, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:100, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:102, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:106, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:108, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:113, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:116, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:121, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:124, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:129, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:132, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:103, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:107, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:109, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:113, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:115, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:119, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:121, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:125, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:127, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:131, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:133, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:137, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:139, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:102, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:106, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:108, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:112, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:114, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:118, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:120, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:124, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:126, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:130, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:132, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:136, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:138, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:102, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:106, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:108, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:112, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:114, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:118, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:120, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:124, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:126, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:130, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:132, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:136, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:138, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:101, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:105, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:107, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:111, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:113, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:117, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:119, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:123, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:125, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:129, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:131, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:135, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:137, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[73] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (12): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.junit.DomainOrderTests: void testEquals()>
		<org.jfree.data.junit.DomainOrderTests.java:83, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:84, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:85, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:86, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:87, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:88, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:89, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:90, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:91, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:92, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:93, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:94, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testEquals()>
		<org.jfree.data.junit.RangeTypeTests.java:83, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:84, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:85, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:86, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:87, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:88, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:89, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:90, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:91, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:92, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:93, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:94, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[74] Set (editDistance: 0, isComplete: true, packages: 5, classes: 6): 
Assertions (12): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testEquals()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:88, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:89, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:99, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:102, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:107, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:110, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:115, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:118, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:123, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:126, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:131, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:134, 4.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:131, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:132, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:135, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:137, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:140, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:142, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:145, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:147, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:150, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:152, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:155, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:157, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BorderArrangementTests: void testEquals()>
		<org.jfree.chart.block.junit.BorderArrangementTests.java:97, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:98, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:101, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:103, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:106, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:108, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:111, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:113, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:116, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:118, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:121, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BorderArrangementTests.java:123, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:95, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:96, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:101, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:105, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:110, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:114, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:118, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:121, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:125, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:128, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:132, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:134, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testEquals()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:129, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:130, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:133, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:135, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:138, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:140, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:143, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:145, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:148, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:150, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:153, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:155, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testEquals()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:101, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:102, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:106, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:108, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:112, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:114, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:118, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:120, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:124, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:126, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:130, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:132, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[75] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (11): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:292, 6.90%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:293, 6.90%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:294, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:298, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:300, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:304, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:306, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:310, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:312, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:316, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:318, 10.34%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:220, 8.70%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:221, 8.70%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:222, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:225, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:227, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:230, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:232, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:235, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:237, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:240, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:242, 13.04%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:204, 6.25%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:205, 6.25%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:206, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:210, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:212, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:215, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:217, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:221, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:224, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:228, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:231, 9.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[76] Set (editDistance: 0, isComplete: true, packages: 3, classes: 5): 
Assertions (11): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testEquals()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:90, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:93, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:95, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:98, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:100, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:103, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:105, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:108, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:110, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:113, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:115, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:97, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:101, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:103, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:107, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:109, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:113, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:115, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:119, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:121, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:125, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:127, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:91, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:95, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:97, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:101, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:103, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:107, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:109, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:114, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:117, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:121, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:123, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:95, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:98, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:100, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:103, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:105, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:108, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:110, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:113, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:115, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:118, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:120, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalTests: void testEquals()>
		<org.jfree.data.xy.junit.XYIntervalTests.java:85, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:88, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:90, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:93, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:95, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:98, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:100, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:103, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:105, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:108, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalTests.java:110, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[77] Set (editDistance: 0, isComplete: true, packages: 5, classes: 7): 
Assertions (11): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:135, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:139, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:142, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:146, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:149, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:153, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:156, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:160, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:163, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:167, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:170, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testEquals()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:102, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:105, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:107, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:110, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:112, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:115, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:117, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:120, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:122, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:125, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:127, 7.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:124, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:128, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:130, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:134, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:136, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:140, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:142, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:146, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:148, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:151, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:153, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:89, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:92, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:94, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:97, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:99, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:102, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:104, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:107, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:109, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:112, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:114, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:89, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:93, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:95, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:100, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:103, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:108, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:111, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:115, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:117, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:121, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:123, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:91, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:94, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:96, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:99, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:101, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:104, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:106, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:109, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:111, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:114, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:116, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:101, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:105, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:108, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:112, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:115, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:119, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:122, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:126, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:129, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:133, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:136, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[78] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (10): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.PaintMapTests: void testEquals()>
		<org.jfree.chart.junit.PaintMapTests.java:129, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:130, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:131, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:132, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:135, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:137, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:141, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:144, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:147, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:149, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testEquals()>
		<org.jfree.chart.junit.StrokeMapTests.java:127, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:128, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:129, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:130, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:133, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:135, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:138, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:140, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:143, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:145, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[79] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3): 
Assertions (10): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testHashCode()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:227, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:228, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:232, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:233, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:237, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:238, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:242, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:243, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:247, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:248, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testHashCode()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:967, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:968, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:972, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:973, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:977, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:978, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:982, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:983, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:987, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:988, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testHashCode()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:116, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:117, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:121, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:122, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:126, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:127, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:131, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:132, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:137, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[80] Set (editDistance: 0, isComplete: true, packages: 6, classes: 13): 
Assertions (10): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (13): 
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:100, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:101, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:106, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:109, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:114, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:117, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:131, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:134, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:139, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:142, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:95, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:96, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:100, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:103, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:107, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:110, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:118, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:121, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:129, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:132, 4.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:97, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:98, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:104, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:108, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:114, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:118, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:133, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:137, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:143, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:147, 4.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColumnArrangementTests: void testEquals()>
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:90, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:91, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:95, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:98, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:102, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:105, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:109, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:112, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:116, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColumnArrangementTests.java:119, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.FlowArrangementTests: void testEquals()>
		<org.jfree.chart.block.junit.FlowArrangementTests.java:89, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:90, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:94, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:97, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:101, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:104, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:108, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:111, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:115, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.FlowArrangementTests.java:118, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:95, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:96, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:101, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:105, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:110, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:114, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:118, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:121, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:125, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:128, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testEquals()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:88, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:89, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:92, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:94, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:97, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:99, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:102, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:104, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:107, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:109, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testEquals()>
		<org.jfree.data.gantt.junit.TaskTests.java:88, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:89, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:92, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:94, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:97, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:99, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:102, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:104, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:107, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:109, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:90, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:91, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:94, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:96, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:101, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:104, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:106, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:111, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:86, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:87, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:90, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:92, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:95, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:97, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:100, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:102, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:105, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:107, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:98, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:99, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:103, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:105, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:109, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:111, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:115, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:117, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:121, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:123, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:116, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:117, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:120, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:122, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:125, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:127, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:130, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:132, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:135, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:137, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:98, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:99, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:103, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:105, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:109, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:111, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:115, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:117, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:121, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:123, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[81] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (9): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testCloning1()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:190, 5.71%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:191, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:192, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:204, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:205, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:206, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:217, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:218, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null, (temp$25 == temp$26)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:219, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null, (temp$25 == temp$26)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testCloning2()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:235, 5.71%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:236, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:237, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:249, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:250, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:251, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:262, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:263, 5.71%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null, (temp$25 == temp$26)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:264, 8.57%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$15 == temp$16)=null, (temp$25 == temp$26)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[82] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (9): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testCloning2()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:203, 8.00%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:204, 8.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:205, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:209, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:211, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:215, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:217, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:221, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:223, 12.00%> (predicates:{(a1 != a2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testCloning2()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:159, 8.33%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:160, 8.33%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:161, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:165, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:167, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:171, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:173, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:177, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:179, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[83] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (9): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetValue()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:230, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:231, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:232, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:235, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:236, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:237, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:238, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:239, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testInsertValue()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:278, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:280, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:281, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:285, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:286, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:287, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:291, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:292, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:293, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[84] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (9): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testIndexOf()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:312, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:313, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:316, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:317, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:320, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:321, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:324, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:325, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:328, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testIndexOf()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:334, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:335, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:338, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:339, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:342, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:343, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:346, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:347, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:350, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[85] Set (editDistance: 0, isComplete: true, packages: 3, classes: 4): 
Assertions (9): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:88, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:92, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:95, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:98, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:100, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:103, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:105, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:108, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:110, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:90, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:93, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:95, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:98, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:100, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:103, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:105, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:108, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:110, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:87, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:91, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:93, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:97, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:99, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:104, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:107, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:111, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:113, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testEquals()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:104, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:108, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:110, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:114, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:116, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:120, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:126, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:128, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[86] Set (editDistance: 0, isComplete: true, packages: 4, classes: 6): 
Assertions (9): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.chart.axis.junit.AxisSpaceTests: void testEquals()>
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:79, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:82, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:84, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:87, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:89, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:92, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:94, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:97, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:99, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:90, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:95, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:98, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:100, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:103, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:105, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:110, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:97, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:101, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:103, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:107, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:113, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:115, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:119, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:121, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testEquals()>
		<org.jfree.chart.title.junit.DateTitleTests.java:87, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:90, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:92, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:96, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:98, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:101, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:103, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:106, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:108, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TitleTests: void testEquals()>
		<org.jfree.chart.title.junit.TitleTests.java:85, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:88, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:90, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:93, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:95, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:98, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:100, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:103, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:105, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testEquals()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:86, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:89, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:91, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:94, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:96, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:101, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:104, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:106, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[87] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (8): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.junit.KeyedObjects2DTests: void testGetValueByIndex()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:159, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:160, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:161, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:162, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:172, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:181, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:190, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:199, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testGetValueByKey()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:209, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:210, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:211, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:212, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:222, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:231, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:240, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:249, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[88] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (8): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testGetDomainBounds()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:359, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:361, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:366, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:368, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:372, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:374, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:378, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:380, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testGetRangeBounds()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:389, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:391, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:396, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:398, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:402, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:404, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:408, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:410, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[89] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.junit.KeyedObjectTests: void testCloning2()>
		<org.jfree.data.junit.KeyedObjectTests.java:133, 6.90%> (predicates:{(ko1 != ko2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:134, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:135, 10.34%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:138, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:150, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:151, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:152, 10.34%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:155, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null, (temp$21 != obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testCloning2()>
		<org.jfree.data.junit.KeyedObjectsTests.java:126, 6.90%> (predicates:{(ko1 != ko2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:127, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:128, 10.34%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:131, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:144, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:145, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:146, 10.34%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:149, 6.90%> (predicates:{(ko1 != ko2)=null, (temp$5 == temp$6)=null, (temp$9 == obj1)=null, (temp$17 == temp$18)=null, (temp$21 != obj1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[90] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.DateAxisTests: void testJava2DToValue()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:288, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:290, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:292, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:294, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:297, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:299, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:301, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:303, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:200, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:201, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:205, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:206, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:217, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:226, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:238, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:247, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[91] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (8): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testTranslateJava2DToValue()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:156, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:158, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:160, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:162, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:165, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:167, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:169, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:171, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testTranslateJava2DToValue()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:179, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:181, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:183, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:185, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:188, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:190, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:192, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:194, 17.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testValueToAngle()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:302, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:303, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:304, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:305, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:306, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:309, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:310, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:311, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testAngleToValue()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:319, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:320, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:321, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:322, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:323, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:326, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:327, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:328, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[92] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testCloning()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:318, 9.09%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:319, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:320, 13.64%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:331, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:332, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:333, 13.64%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:337, 13.64%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:339, 13.64%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:116, 5.88%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:117, 5.88%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:118, 8.82%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:131, 5.88%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:132, 5.88%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:133, 8.82%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:137, 8.82%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:139, 8.82%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:118, 5.56%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:119, 5.56%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:120, 8.33%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:134, 5.56%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:135, 5.56%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:136, 8.33%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:140, 8.33%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:142, 8.33%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$15 == temp$16)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[93] Set (editDistance: 0, isComplete: true, packages: 7, classes: 11): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testEquals()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:89, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:90, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:94, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:97, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:101, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:104, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:108, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:111, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:98, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:102, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:104, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:110, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:114, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:116, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testEquals()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:88, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:89, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:92, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:94, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:97, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:99, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:102, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:104, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LineBorderTests: void testEquals()>
		<org.jfree.chart.block.junit.LineBorderTests.java:91, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:92, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:96, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:99, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:103, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:106, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:110, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LineBorderTests.java:113, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:95, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:96, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:103, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:106, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:113, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:116, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:123, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:126, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:118, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:119, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:123, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:126, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:130, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:133, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:137, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:140, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:96, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:97, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:101, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:104, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:108, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:111, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:115, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:118, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testEquals()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:105, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:106, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:109, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:111, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:114, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:116, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:121, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:123, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.OutlierTests: void testEquals()>
		<org.jfree.chart.renderer.junit.OutlierTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:95, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:98, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:100, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:103, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:105, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:108, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:110, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:100, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:101, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:105, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:107, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:111, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:113, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:117, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:119, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testEquals()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:98, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:102, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:104, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:107, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:112, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:114, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[94] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (7): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.XYPlotTests: void testGetDomainAxisForDataset()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1196, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1206, 5.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1216, 5.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1222, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1225, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1230, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1235, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testGetRangeAxisForDataset()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1247, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1257, 5.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1267, 5.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1273, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1276, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1281, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1286, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[95] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (7): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.TimeSeriesTests: void testGetMinY()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1028, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1031, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1034, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1037, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1040, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1043, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1046, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testGetMaxY()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1054, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1057, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1060, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1063, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1066, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1069, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1072, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[96] Set (editDistance: 0, isComplete: true, packages: 1, classes: 5): 
Assertions (7): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.data.xy.junit.VectorSeriesTests: void testAdd()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:259, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:260, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:261, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:262, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:263, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:264, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:265, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testAdd()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:260, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:261, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:262, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:263, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:264, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:265, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:266, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testAdd()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:260, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:261, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:262, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:263, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:264, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:265, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:266, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testAdd()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:424, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:425, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:426, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:427, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:428, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:429, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:430, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testAdd()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:259, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:260, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:261, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:262, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:263, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:264, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:265, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[97] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (7): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testGetColumnCount()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:182, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:184, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:186, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:190, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:192, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:194, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testCompareTo()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:195, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:199, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:203, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:207, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:211, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:215, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:219, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[98] Set (editDistance: 0, isComplete: true, packages: 4, classes: 4): 
Assertions (7): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.junit.ChartRenderingInfoTests: void testCloning()>
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:123, 8.33%> (predicates:{(i1 != i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:124, 8.33%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:125, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:129, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:131, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:135, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.ChartRenderingInfoTests.java:138, 12.50%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PlotRenderingInfoTests: void testCloning()>
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:125, 9.09%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:126, 9.09%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:127, 13.64%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:131, 13.64%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:133, 13.64%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:136, 13.64%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PlotRenderingInfoTests.java:138, 13.64%> (predicates:{(p1 != p2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:193, 9.52%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:194, 9.52%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:195, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:199, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:201, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:204, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:206, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:120, 12.50%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:121, 12.50%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:122, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:125, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:127, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:130, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:132, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testCloning2()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:152, 12.50%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:153, 12.50%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:154, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:157, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:159, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:162, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:164, 18.75%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[99] Set (editDistance: 0, isComplete: true, packages: 4, classes: 10): 
Assertions (7): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:91, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:94, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:96, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:101, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:105, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:108, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:86, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:91, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:96, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:101, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:89, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:92, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:103, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:106, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:96, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:99, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:101, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:105, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:108, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:111, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:113, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:86, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:91, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:96, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:101, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:96, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:99, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:101, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:104, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:106, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:109, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:111, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:89, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:92, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:103, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:106, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testEquals()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:93, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:103, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:107, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:112, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:114, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalTests: void testEquals()>
		<org.jfree.data.xy.junit.YIntervalTests.java:85, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:88, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:90, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:93, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:95, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:98, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalTests.java:100, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YWithXIntervalTests: void testEquals()>
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:84, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:87, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:92, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YWithXIntervalTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[100] Set (editDistance: 0, isComplete: true, packages: 7, classes: 10): 
Assertions (7): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:92, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:96, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:98, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:102, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:104, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:108, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:110, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:94, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:97, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:99, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:102, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:104, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:108, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:110, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:89, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:92, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:94, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:97, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:99, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:102, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:104, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:116, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:119, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:121, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:124, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:126, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:129, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:131, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testEquals()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:88, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:91, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:93, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:96, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:98, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:101, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:103, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:89, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:94, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:97, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:102, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:105, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:109, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:111, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:117, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:120, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:122, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:125, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:127, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:130, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardCategoryURLGeneratorTests.java:132, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testEquals()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:95, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:98, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:100, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:103, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:105, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:108, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:110, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testEquals()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:103, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:106, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:108, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:111, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:113, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:116, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:118, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testEquals()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:101, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:104, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:106, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:109, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:111, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:114, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:116, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[101] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.data.xy.junit.XYSeriesTests: void testGetMinX()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:589, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:592, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:595, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:598, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:601, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:604, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testGetMaxX()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:612, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:615, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:618, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:621, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:624, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:627, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testGetMinY()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:635, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:638, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:641, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:644, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:647, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:650, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testGetMaxY()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:658, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:661, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:664, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:667, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:670, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:673, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[102] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateMillisecondA()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:1084, 4.00%> (predicates:{(temp$13 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1085, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1093, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1094, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1102, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1103, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testPreviousStandardDateMillisecondB()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:1127, 4.00%> (predicates:{(temp$13 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1128, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1136, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1137, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1145, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null, (temp$35 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:1146, 4.00%> (predicates:{(temp$13 >= 0)=null, (temp$17 < 0)=null, (temp$24 >= 0)=null, (temp$28 < 0)=null, (temp$35 >= 0)=null, (temp$39 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[103] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testGetDomainAxisForDataset()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1011, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1021, 6.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1027, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1030, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1035, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1040, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testGetRangeAxisForDataset()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1052, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1062, 6.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1068, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1071, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1076, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:1081, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[104] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testGetItemColumn()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:163, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:164, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:165, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:166, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:167, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:168, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testGetItemRow()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:176, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:177, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:178, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:179, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:180, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:181, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testAutoPrune()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:250, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:252, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:254, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:259, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:261, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:263, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[105] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:93, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:94, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:97, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:99, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:102, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:104, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:105, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:106, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:110, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:113, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:117, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:119, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[106] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:246, 9.52%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:247, 9.52%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:248, 14.29%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:258, 9.52%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:259, 9.52%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$12 == temp$13)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:260, 19.05%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$12 == temp$13)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:110, 9.09%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:111, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:112, 13.64%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:123, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:124, 9.09%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$13 == temp$14)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:125, 18.18%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null, (temp$13 == temp$14)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[107] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests: void testCalculateQ1()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:117, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:121, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:124, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:127, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:130, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:133, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests: void testCalculateQ3()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:148, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:152, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:155, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:158, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:161, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerCalculatorTests.java:164, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testUpdateXY()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:769, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:770, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:773, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:774, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:777, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:778, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[108] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetSeries()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:628, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:629, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:630, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:633, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:634, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:643, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testSetObject()>
		<org.jfree.data.junit.KeyedObjectsTests.java:322, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:323, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:324, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:329, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:330, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:340, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[109] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (6): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.block.junit.AbstractBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.AbstractBlockTests.java:152, 16.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:154, 11.11%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:155, 11.11%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:156, 16.67%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:159, 16.67%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.AbstractBlockTests.java:161, 16.67%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.ColorBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.ColorBlockTests.java:122, 13.64%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:124, 9.09%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:125, 9.09%> (predicates:{(b1 != b2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:126, 13.64%> (predicates:{(b1 != b2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:130, 13.64%> (predicates:{(b1 != b2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.ColorBlockTests.java:132, 13.64%> (predicates:{(b1 != b2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testCloning3()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:606, 3.03%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:609, 6.06%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:610, 6.06%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:611, 9.09%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:618, 9.09%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:624, 9.09%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[110] Set (editDistance: 0, isComplete: true, packages: 6, classes: 9): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (17): 
	<org.jfree.chart.plot.junit.PolarPlotTests: void testTranslateToJava2D_LogAxis()>
		<org.jfree.chart.plot.junit.PolarPlotTests.java:419, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:420, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:423, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:424, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:427, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PolarPlotTests.java:428, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ImageTitleTests: void testArrangeNN()>
		<org.jfree.chart.title.junit.ImageTitleTests.java:150, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:151, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:155, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:156, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:160, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:161, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1272, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1273, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1277, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1278, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1282, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1283, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testBug2849731_3()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1294, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1295, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1299, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1300, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1304, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testAddSeries()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:196, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:197, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:198, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:200, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:201, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:202, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void test1553088()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:254, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:255, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:256, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:258, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:259, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:260, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testCreateCopy3()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:611, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:612, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:615, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:616, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:619, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:620, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetXValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:146, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:147, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:148, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:149, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:150, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:151, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetYValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:159, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:160, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:161, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:162, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:163, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:164, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetStartXValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:172, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:173, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:174, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:175, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:176, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:177, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetEndXValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:185, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:186, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:187, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:188, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:189, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:190, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetStartYValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:198, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:199, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:200, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:201, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:202, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:203, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetEndYValue()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:211, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:212, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:213, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:214, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:215, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:216, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testGetItem()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:195, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:196, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:197, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:198, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:199, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:200, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testValues()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:303, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:304, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:305, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:306, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:307, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:308, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSetMaximumItemCount3()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:474, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:475, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:476, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:477, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:478, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:479, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testSetMaximumItemCount4()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:492, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:493, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:494, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:495, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:496, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:497, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[111] Set (editDistance: 0, isComplete: true, packages: 11, classes: 22): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (22): 
	<org.jfree.chart.axis.junit.NumberTickUnitTests: void testEquals()>
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:86, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:87, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:90, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:92, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:95, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberTickUnitTests.java:97, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockBorderTests: void testEquals()>
		<org.jfree.chart.block.junit.BlockBorderTests.java:92, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:93, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:98, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:101, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:106, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockBorderTests.java:109, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testEquals()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:88, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:89, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:92, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:94, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:97, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:99, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.EmptyBlockTests: void testEquals()>
		<org.jfree.chart.block.junit.EmptyBlockTests.java:85, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:86, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:89, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:91, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:94, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.EmptyBlockTests.java:96, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.GridArrangementTests: void testEquals()>
		<org.jfree.chart.block.junit.GridArrangementTests.java:93, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:94, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:97, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:99, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:102, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.GridArrangementTests.java:104, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:90, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:91, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:95, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:98, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:102, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:105, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:93, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:94, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:98, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:101, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:105, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:108, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:94, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:95, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:99, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:102, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:106, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:109, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:89, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:90, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:93, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:95, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:98, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:100, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testEquals()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:93, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:94, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:97, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:99, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:102, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:104, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:93, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:94, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:97, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:99, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:102, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:104, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testEquals()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:90, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:91, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:94, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:96, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:100, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:103, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testEquals()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:210, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:211, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:214, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:216, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:219, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:221, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testEquals()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:103, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:104, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:107, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:112, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:114, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests: void testEquals()>
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:85, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:86, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:89, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:91, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:94, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.MeanAndStandardDeviationTests.java:96, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DateRangeTests: void testEquals()>
		<org.jfree.data.time.junit.DateRangeTests.java:87, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:88, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:91, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:93, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:96, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DateRangeTests.java:98, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testEquals()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:108, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:109, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:112, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:114, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:117, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:119, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testEquals()>
		<org.jfree.data.time.junit.WeekTests.java:123, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:124, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:127, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:129, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:132, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:134, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:110, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:111, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:114, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:116, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:120, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:123, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testEquals()>
		<org.jfree.data.xy.junit.VectorTests.java:86, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:87, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:90, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:92, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:97, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testEquals()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:86, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:87, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:90, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:92, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:97, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testEquals()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:96, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:97, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:100, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:102, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:105, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:107, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[112] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testPaintLookup()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:965, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:969, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:970, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:976, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:978, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testFillPaintLookup()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:986, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:990, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:991, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:997, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:999, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testOutlinePaintLookup()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:1007, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:1011, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:1012, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:1018, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:1020, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[113] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testGetDomainAxisIndex()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:945, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:946, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:948, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:949, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:957, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testGetRangeAxisIndex()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:969, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:970, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:972, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:973, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:981, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[114] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (2): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetValue()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:105, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:106, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:111, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:120, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:131, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testGetKey()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:147, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:148, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:153, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:162, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:173, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])

Relevant Assertion clone sets (0):
==============================================

[115] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (5): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testGetRowCount()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:165, 15.38%> (predicates:{(temp$1 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:168, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:171, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:174, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null, (temp$7 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:178, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null, (temp$7 == 2)=null, (temp$9 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testGetColumnCount()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:186, 15.38%> (predicates:{(temp$1 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:189, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:192, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:195, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null, (temp$7 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:199, 15.38%> (predicates:{(temp$1 == 0)=null, (temp$3 == 1)=null, (temp$5 == 2)=null, (temp$7 == 2)=null, (temp$9 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[116] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (5): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMinimumStackedRangeValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:869, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:873, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:877, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:881, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:885, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testFindMaximumStackedRangeValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:910, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:914, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:918, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:922, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:926, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testGetDomainBoundsWithoutInterval()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:206, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:213, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:214, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:219, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:220, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[117] Set (editDistance: 0, isComplete: true, packages: 2, classes: 6): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testBins()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:95, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:96, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:97, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:98, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:99, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testAdditionOfDuplicateXValues()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:240, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:241, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:242, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:243, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:244, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testAdditionOfDuplicateXValues()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:241, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:242, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:243, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:244, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:245, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testAdditionOfDuplicateXValues()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:241, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:242, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:243, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:244, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:245, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testAdditionOfDuplicateXValues()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:322, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:323, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:324, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:325, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:326, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testAdditionOfDuplicateXValues()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:240, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:241, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:242, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:243, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:244, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[118] Set (editDistance: 0, isComplete: true, packages: 3, classes: 4): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.data.gantt.junit.TaskTests: void testGetSubTaskCount()>
		<org.jfree.data.gantt.junit.TaskTests.java:163, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:165, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:168, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:170, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:172, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testGroupCount()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:117, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:122, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:127, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:134, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:139, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testGetGroupIndex()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:184, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:187, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:193, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:194, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:195, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testGetMaxMiddleIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:368, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:370, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:372, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:374, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:376, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testConstructor()>
		<org.jfree.data.time.junit.WeekTests.java:507, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:512, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:518, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:524, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:527, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[119] Set (editDistance: 0, isComplete: true, packages: 4, classes: 6): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testEqualsPin()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:109, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:112, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:114, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:118, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:120, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testEqualsPointer()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:129, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:132, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:134, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:137, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:139, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:99, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:102, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:104, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:107, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:109, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:93, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:96, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:98, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:104, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:89, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:99, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:103, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:105, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:90, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:96, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:100, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:104, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:106, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:89, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:99, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:103, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:105, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[120] Set (editDistance: 0, isComplete: true, packages: 16, classes: 24): 
Assertions (5): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (24): 
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:131, 14.29%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:132, 14.29%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:133, 21.43%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:137, 21.43%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:139, 21.43%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testCloning()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:118, 11.11%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:119, 11.11%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:120, 16.67%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:124, 16.67%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:126, 16.67%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:128, 14.29%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:129, 14.29%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:130, 21.43%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:134, 21.43%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:136, 21.43%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning_QuadrantPaint()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:588, 10.53%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:589, 10.53%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:590, 15.79%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:594, 15.79%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:596, 15.79%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:149, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:150, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:151, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:155, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:157, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testCloning()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:119, 14.29%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:120, 14.29%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:121, 21.43%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:124, 21.43%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:126, 21.43%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:180, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:181, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:182, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:186, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:188, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:216, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:217, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:218, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:222, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:224, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:149, 10.00%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:150, 10.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:151, 15.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:155, 15.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:158, 15.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:162, 9.09%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:163, 9.09%> (predicates:{(t1 != t2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:164, 13.64%> (predicates:{(t1 != t2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:168, 13.64%> (predicates:{(t1 != t2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:170, 13.64%> (predicates:{(t1 != t2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testCloning()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:119, 8.70%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:120, 8.70%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:121, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:127, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:129, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testCloning()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:122, 8.70%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:123, 8.70%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:124, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:130, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:132, 13.04%> (predicates:{(g1 != g2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testCloning()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:253, 6.25%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:254, 6.25%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:255, 9.38%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:259, 9.38%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:261, 9.38%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testCloning()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:128, 11.11%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:129, 11.11%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:130, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:134, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:138, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testCloning()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:138, 6.45%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:139, 6.45%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:140, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:144, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:149, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testCloning()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:484, 5.26%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:485, 5.26%> (predicates:{(c1 != c2)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:486, 7.89%> (predicates:{(c1 != c2)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:490, 7.89%> (predicates:{(c1 != c2)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:493, 7.89%> (predicates:{(c1 != c2)=null, (temp$18 == temp$19)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testCloning()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:117, 7.41%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:118, 7.41%> (predicates:{(s1 != s2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:119, 11.11%> (predicates:{(s1 != s2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:123, 11.11%> (predicates:{(s1 != s2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:125, 11.11%> (predicates:{(s1 != s2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testCloning()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:135, 6.45%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:136, 6.45%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:137, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:141, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:145, 9.68%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultHeatMapDatasetTests: void testCloning()>
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:196, 14.29%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:197, 14.29%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:198, 21.43%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:202, 21.43%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultHeatMapDatasetTests.java:204, 21.43%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testCloning()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:254, 13.33%> (predicates:{(m1 != m2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:255, 13.33%> (predicates:{(m1 != m2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:256, 20.00%> (predicates:{(m1 != m2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:260, 20.00%> (predicates:{(m1 != m2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:262, 20.00%> (predicates:{(m1 != m2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:135, 11.11%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:136, 11.11%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:137, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:141, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:143, 16.67%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testCloning()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:392, 11.11%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:393, 11.11%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:394, 16.67%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:398, 16.67%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:400, 16.67%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:120, 6.25%> (predicates:{(bd1 != bd2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:121, 6.25%> (predicates:{(bd1 != bd2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:122, 9.38%> (predicates:{(bd1 != bd2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:127, 9.38%> (predicates:{(bd1 != bd2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:130, 9.38%> (predicates:{(bd1 != bd2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testCloning()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:123, 11.11%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:124, 11.11%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:125, 16.67%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:129, 16.67%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:131, 16.67%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[121] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testEquals2()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:184, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:185, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:190, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:89, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:90, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:93, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:95, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[122] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.JFreeChartTests: void testGetSubtitle()>
		<org.jfree.chart.junit.JFreeChartTests.java:257, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:266, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:275, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:284, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testGetPaint()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:101, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:103, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:108, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:110, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[123] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.JFreeChartTests: void testTitleChangeEvent()>
		<org.jfree.chart.junit.JFreeChartTests.java:554, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:565, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:569, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:573, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testLayerListener()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:308, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:314, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:316, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:321, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[124] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:243, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:247, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:248, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:249, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testAddOrUpdate3()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:406, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:407, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:408, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:409, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[125] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.junit.PaintMapTests: void testGetPaint()>
		<org.jfree.chart.junit.PaintMapTests.java:87, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:89, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:91, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:101, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testGetStroke()>
		<org.jfree.chart.junit.StrokeMapTests.java:85, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:87, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:89, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:99, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testMapKeyToGroup()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:87, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:91, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:95, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:106, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[126] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testEquals()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:88, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:89, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:93, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:97, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testEquals()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:109, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:110, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:114, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:118, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testEquals()>
		<org.jfree.data.junit.KeyedObjectTests.java:89, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:90, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:94, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:98, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[127] Set (editDistance: 0, isComplete: true, packages: 2, classes: 5): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning4()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:545, 10.53%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:546, 10.53%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:547, 15.79%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:551, 26.32%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:134, 14.29%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:135, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:136, 21.43%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:138, 21.43%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:186, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:187, 15.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:188, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:190, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:133, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:134, 15.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:135, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:137, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:152, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:153, 15.38%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:154, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:156, 23.08%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[128] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.axis.junit.AxisLocationTests: void testEquals()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:84, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisLocationTests.java:85, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisLocationTests.java:87, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisLocationTests.java:88, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetOutlinePaint()>
		<org.jfree.chart.plot.junit.MarkerTests.java:147, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:149, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:150, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MarkerTests: void testGetSetOutlineStroke()>
		<org.jfree.chart.plot.junit.MarkerTests.java:166, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:168, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:169, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MarkerTests.java:173, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testGetRangeBounds2()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:264, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:265, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:268, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:269, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[129] Set (editDistance: 0, isComplete: true, packages: 3, classes: 7): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testIncrementValue()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:132, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:137, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:147, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:157, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testGetValue()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:257, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:258, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:266, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:275, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testGetKey()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:119, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:120, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:129, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:138, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:97, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:98, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:108, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:117, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:183, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:184, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:194, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:203, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:204, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:205, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:215, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:224, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testGetSeriesKey()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:207, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:208, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:218, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:227, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[130] Set (editDistance: 0, isComplete: true, packages: 4, classes: 5): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<org.jfree.chart.junit.LegendItemTests: void testCloning()>
		<org.jfree.chart.junit.LegendItemTests.java:401, 13.33%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemTests.java:402, 13.33%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemTests.java:403, 20.00%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemTests.java:406, 13.33%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning_URLGenerator()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:486, 11.76%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:487, 11.76%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:488, 17.65%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:491, 11.76%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning_LegendLabelURLGenerator()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:579, 11.76%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:580, 11.76%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:581, 17.65%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:584, 11.76%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning_QuadrantOrigin()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:568, 12.50%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:569, 12.50%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:570, 18.75%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:571, 12.50%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null, (temp$9 != p)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testBug2817504()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:614, 11.11%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:615, 11.11%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:616, 16.67%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:620, 11.11%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null, (temp$10 == p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testCloning_LegendItemLabelGenerator()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:282, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:283, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:284, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:287, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testCloning_LegendItemToolTipGenerator()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:306, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:307, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:308, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:311, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests: void testCloning_LegendItemURLGenerator()>
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:330, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:331, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:332, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.java:335, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests: void testCloning_LegendItemLabelGenerator()>
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:137, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:138, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:139, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:142, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests: void testCloning_LegendItemToolTipGenerator()>
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:161, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:162, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:163, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:166, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests: void testCloning_LegendItemURLGenerator()>
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:185, 11.76%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:186, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:187, 17.65%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:190, 11.76%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null, (temp$9 != temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[131] Set (editDistance: 0, isComplete: true, packages: 4, classes: 5): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testRemoveColumn()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:371, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:373, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:382, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:391, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testRemoveRow()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:401, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:403, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:412, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:421, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testRemoveValueInt()>
		<org.jfree.data.junit.KeyedObjectsTests.java:391, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:392, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:403, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:413, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testConstructor()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:262, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:263, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:264, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:265, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testConstructor()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:191, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:192, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:193, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:194, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testClear()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1083, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1086, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1087, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1088, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[132] Set (editDistance: 0, isComplete: true, packages: 7, classes: 12): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (17): 
	<org.jfree.chart.plot.junit.PiePlotTests: void testGetLegendItems()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:625, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:630, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:635, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:640, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.RendererUtilitiesTests: void test3561093()>
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:504, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:506, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:510, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.RendererUtilitiesTests.java:511, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testGetColumnIndex()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:223, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:224, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:225, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:226, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testGetRowIndex()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:240, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:241, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:242, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:243, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetSubIntervalCount()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:613, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:614, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:615, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:616, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testGetItemCount()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:108, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:110, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:112, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:114, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testGetMinStartIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:326, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:328, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:330, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:332, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testGetMaxStartIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:340, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:342, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:344, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:346, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testGetMinMiddleIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:354, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:356, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:358, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:360, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void getMinEndIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:384, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:386, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:388, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:390, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void getMaxEndIndex()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:398, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:400, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:402, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:404, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testClear()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:194, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:195, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:200, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:201, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testIndexOf()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:350, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:351, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:352, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:353, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testIndexOf()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:211, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:212, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:213, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:214, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testIndexOf()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:232, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:233, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:234, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:235, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testIndexOf()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:235, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:236, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:237, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:238, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testIndexOf()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:235, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:236, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:237, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:238, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[133] Set (editDistance: 0, isComplete: true, packages: 10, classes: 24): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (27): 
	<org.jfree.chart.junit.LegendItemCollectionTests: void testCloning()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:154, 11.76%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:155, 11.76%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:156, 17.65%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:160, 17.65%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MultiplePiePlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:181, 13.33%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:182, 13.33%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:183, 20.00%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MultiplePiePlotTests.java:187, 20.00%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning_LegendItemShape()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:508, 13.33%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:509, 13.33%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:510, 20.00%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:514, 20.00%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning_LegendLabelGenerator()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:532, 12.50%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:533, 12.50%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:534, 18.75%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:538, 18.75%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning_LegendLabelToolTipGenerator()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:556, 12.50%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:557, 12.50%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:558, 18.75%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:562, 18.75%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning3()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:521, 10.53%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:522, 10.53%> (predicates:{(p1 != p2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:523, 15.79%> (predicates:{(p1 != p2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:527, 15.79%> (predicates:{(p1 != p2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:136, 13.33%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:137, 13.33%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:138, 20.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:142, 20.00%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendGraphicTests: void testCloning()>
		<org.jfree.chart.title.junit.LegendGraphicTests.java:214, 12.50%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:215, 12.50%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:216, 18.75%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:220, 18.75%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendGraphicTests: void testCloning2()>
		<org.jfree.chart.title.junit.LegendGraphicTests.java:238, 11.11%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:239, 11.11%> (predicates:{(g1 != g2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:240, 16.67%> (predicates:{(g1 != g2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:244, 16.67%> (predicates:{(g1 != g2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testCloning()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:114, 10.53%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:115, 10.53%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:116, 15.79%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:122, 15.79%> (predicates:{(g1 != g2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValueTests: void testCloning()>
		<org.jfree.data.junit.DefaultKeyedValueTests.java:134, 12.50%> (predicates:{(v1 != v2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:135, 12.50%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:136, 18.75%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValueTests.java:140, 18.75%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testCloning()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:127, 12.50%> (predicates:{(v1 != v2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:128, 12.50%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:129, 18.75%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:133, 18.75%> (predicates:{(v1 != v2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testCloning()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:311, 11.76%> (predicates:{(v1 != v2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:312, 11.76%> (predicates:{(v1 != v2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:313, 17.65%> (predicates:{(v1 != v2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:317, 17.65%> (predicates:{(v1 != v2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testCloning()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:112, 13.33%> (predicates:{(o1 != o2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:113, 13.33%> (predicates:{(o1 != o2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:114, 20.00%> (predicates:{(o1 != o2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:118, 20.00%> (predicates:{(o1 != o2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:155, 6.06%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:156, 6.06%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:157, 9.09%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:164, 9.09%> (predicates:{(d1 != d2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:149, 10.53%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:150, 10.53%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:151, 15.79%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:156, 15.79%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramBinTests: void testCloning()>
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:171, 14.29%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:172, 14.29%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:173, 21.43%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramBinTests.java:177, 21.43%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testCloning()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:107, 14.29%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:108, 14.29%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:109, 21.43%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:114, 21.43%> (predicates:{(d1 != d2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testBug1832432()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:747, 14.29%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:748, 14.29%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:749, 21.43%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:753, 21.43%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testCloning()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:133, 12.50%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:134, 12.50%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:135, 18.75%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:139, 18.75%> (predicates:{(c1 != c2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testCloning2()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:284, 6.67%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:285, 6.67%> (predicates:{(d1 != d2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:286, 10.00%> (predicates:{(d1 != d2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:290, 10.00%> (predicates:{(d1 != d2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testCloning2()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:163, 9.52%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:164, 9.52%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:165, 14.29%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:168, 14.29%> (predicates:{(d1 != d2)=null, (temp$9 == temp$10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:129, 13.33%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:130, 13.33%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:131, 20.00%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:134, 20.00%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testCloning()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:119, 13.33%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:120, 13.33%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:121, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:125, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testCloning()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:120, 13.33%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:121, 13.33%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:122, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:126, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testCloning()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:123, 13.33%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:124, 13.33%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:125, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:129, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testCloning()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:123, 13.33%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:124, 13.33%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:125, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:129, 20.00%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[134] Set (editDistance: 0, isComplete: true, packages: 12, classes: 28): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (28): 
	<org.jfree.chart.axis.junit.PeriodAxisTests: void testEqualsWithLocale()>
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:190, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:191, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:195, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:198, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemCollectionTests: void testEquals()>
		<org.jfree.chart.junit.LegendItemCollectionTests.java:92, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:93, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:108, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.LegendItemCollectionTests.java:110, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:105, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:106, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:109, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:111, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:104, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:105, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:108, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:110, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ArrowNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:84, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:85, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:88, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:90, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterIntervalTests: void testEquals()>
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:95, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:96, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:102, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:107, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:94, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:95, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:101, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:105, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:89, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:90, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:93, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:95, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:98, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:99, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:102, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:104, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:89, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:90, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:93, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:95, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:98, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:99, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:104, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:89, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:90, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:94, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:96, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesTests: void testEquals()>
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:93, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:94, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:97, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesTests.java:99, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testEquals()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:173, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:174, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:177, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:179, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyToGroupMapTests: void testEquals()>
		<org.jfree.data.junit.KeyToGroupMapTests.java:232, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:233, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:236, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyToGroupMapTests.java:238, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testEquals()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:88, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:89, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:92, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:94, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testEquals()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:112, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:113, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:116, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:118, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testEquals()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:109, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:110, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:113, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:115, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:94, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:95, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:98, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:101, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:225, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:226, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:229, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:231, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:101, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:102, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:105, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:108, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:89, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:90, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:93, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:95, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:89, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:90, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:99, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:101, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:89, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:90, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:101, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:103, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:94, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:98, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:101, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:97, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:98, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:101, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:104, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testEquals()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:95, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:96, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:99, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:102, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:86, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYDataItemTests.java:87, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYDataItemTests.java:90, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYDataItemTests.java:93, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[135] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (3): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testBackgroundListener()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:224, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:230, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:232, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testCapListener()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:245, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:251, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:253, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testFrameListener()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:266, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:272, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:274, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testScaleListener()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:287, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:293, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:295, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[136] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void checkPointsToJava2D(org.jfree.ui.RectangleEdge,java.awt.geom.Rectangle2D)>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:249, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:252, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:257, 40.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void checkPointsToValue(org.jfree.ui.RectangleEdge,java.awt.geom.Rectangle2D)>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:268, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:274, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:279, 46.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[137] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (3): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateToFindRangeBounds_BoxAndWhiskerXYDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1138, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1143, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1146, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateToFindRangeBounds_StatisticalCategoryDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1159, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1163, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1166, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[138] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (3): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:113, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:116, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:121, 15.38%> (predicates:{(h1 == h2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:157, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:160, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:163, 15.38%> (predicates:{(temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[139] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testGetIndex()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:216, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:222, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:232, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testRemoveValue()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:360, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:362, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:371, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetItemCount()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:125, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:126, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:136, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[140] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.data.time.junit.TimeSeriesTests: void testAddOrUpdate2()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:669, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:670, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:671, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testRemoveAgedItems4()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:939, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:940, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:941, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testRemoveAgedItems5()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:956, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:957, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:958, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testAdd()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1101, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1102, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1103, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testRemove()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:218, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:221, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:224, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testConstructor()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:99, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:100, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:101, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[141] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testGetSetStartValue()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:179, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:181, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:182, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testGetSetEndValue()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:192, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:194, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:195, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ValueMarkerTests: void testGetSetValue()>
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:239, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:241, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:242, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.LookupPaintScaleTests: void testConstructor2()>
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:205, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:206, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.LookupPaintScaleTests.java:207, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[142] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testRemoveValue()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:307, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:308, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:313, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjects2DTests: void testRemoveValue()>
		<org.jfree.data.junit.KeyedObjects2DTests.java:424, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:425, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjects2DTests.java:426, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testRemove_int()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:228, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:231, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:232, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[143] Set (editDistance: 0, isComplete: true, packages: 3, classes: 4): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests: void testEquals()>
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:83, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:84, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AreaRendererEndTypeTests.java:85, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetColumnKey()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:418, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:419, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:420, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testImmutable()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:176, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:178, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:184, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testGetTimePeriod()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:109, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:110, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:111, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[144] Set (editDistance: 0, isComplete: true, packages: 4, classes: 4): 
Assertions (3): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testEquals()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:185, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:186, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:195, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testIterateToFindRangeBounds1_XYDataset()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1029, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1040, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:1051, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testGetStdDev()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:456, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:466, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.StatisticsTests.java:470, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodAnchorTests: void testEquals()>
		<org.jfree.data.time.junit.TimePeriodAnchorTests.java:83, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodAnchorTests.java:84, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodAnchorTests.java:85, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[145] Set (editDistance: 0, isComplete: true, packages: 4, classes: 5): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (6): 
	<org.jfree.chart.axis.junit.LogAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:315, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:317, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:318, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testSetLowerBound()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:449, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:451, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:452, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.OutlierTests: void testConstructor()>
		<org.jfree.chart.renderer.junit.OutlierTests.java:83, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:84, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.OutlierTests.java:85, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCalculatePieDatasetTotal()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:129, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:132, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:135, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DataUtilitiesTests: void testCalculateColumnTotal()>
		<org.jfree.data.junit.DataUtilitiesTests.java:91, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:92, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:94, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DataUtilitiesTests: void testCalculateRowTotal()>
		<org.jfree.data.junit.DataUtilitiesTests.java:138, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:139, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:141, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[146] Set (editDistance: 0, isComplete: true, packages: 4, classes: 6): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testGetValue()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:90, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:98, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:107, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSetStartValue()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:299, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:309, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:318, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSetEndValue()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:337, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:347, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:356, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testGetValue()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:92, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:100, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:109, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void testGetSeries()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:175, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:184, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:193, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testGetSeries()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:227, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:236, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:245, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testGetSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:227, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:236, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:245, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testGetSeriesByKey()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:255, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:264, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:273, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[147] Set (editDistance: 0, isComplete: true, packages: 7, classes: 13): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (14): 
	<org.jfree.chart.plot.junit.ThermometerPlotTests: void testSetUnits()>
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:272, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:274, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:276, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testGetRowCount()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:204, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:206, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:209, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetColumnIndex()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:428, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:429, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:430, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DataUtilitiesTests: void testCreateNumberArray2D()>
		<org.jfree.data.junit.DataUtilitiesTests.java:75, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:76, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DataUtilitiesTests.java:77, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testRowCount()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:202, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:204, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:206, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testColumnCount()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:214, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:216, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:218, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testGetIndex2()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:240, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:242, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:244, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesCollectionTests: void test1161340()>
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:106, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:108, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesCollectionTests.java:114, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testIndexOf()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:198, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:199, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:200, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testIndexOf2()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:205, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:206, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:207, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testIndexOf2()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:206, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:207, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:208, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testIndexOf2()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:206, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:207, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:208, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testIndexOf2()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:249, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:250, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:251, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testIndexOf2()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:205, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:206, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:207, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[148] Set (editDistance: 0, isComplete: true, packages: 8, classes: 11): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:97, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:100, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:95, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:98, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:100, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:117, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:120, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:122, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testEquals()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:86, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:89, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:91, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testEquals()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:94, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:97, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:99, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testEquals()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:85, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:88, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:90, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.SlidingCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:164, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:168, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.SlidingCategoryDatasetTests.java:172, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:181, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.SlidingGanttCategoryDatasetTests.java:186, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.XYTaskDatasetTests: void testSerialization()>
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:172, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:176, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.XYTaskDatasetTests.java:180, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:169, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:173, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:175, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testSerialization()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:165, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:169, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:171, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[149] Set (editDistance: 0, isComplete: true, packages: 11, classes: 18): 
Assertions (3): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (19): 
	<org.jfree.chart.annotations.junit.XYImageAnnotationTests: void testEquals()>
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:87, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:90, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:92, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void test1472942()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:172, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:176, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:178, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testEquals()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:103, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:106, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:108, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.StandardEntityCollectionTests: void testEquals()>
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:88, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:94, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.StandardEntityCollectionTests.java:99, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests: void testEquals()>
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:86, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:90, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.AbstractDialLayerTests.java:92, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testEquals2()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:464, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:466, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:468, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:87, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:93, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:99, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:89, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:94, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:96, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testEquals()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:90, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:96, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:102, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.LineFunction2DTests: void testEquals()>
		<org.jfree.data.function.junit.LineFunction2DTests.java:98, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.LineFunction2DTests.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.LineFunction2DTests.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.NormalDistributionFunction2DTests: void testEquals()>
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.NormalDistributionFunction2DTests.java:104, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testEquals()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:130, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:132, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:134, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PowerFunction2DTests: void testEquals()>
		<org.jfree.data.function.junit.PowerFunction2DTests.java:97, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PowerFunction2DTests.java:99, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PowerFunction2DTests.java:101, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testCloneIndependence()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:132, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:134, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:136, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testEquals()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:91, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:95, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:98, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testEquals()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:87, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:90, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:92, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testEquals()>
		<org.jfree.data.time.junit.YearTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:118, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:120, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testCloning2()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:173, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:177, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:179, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testCloning3()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:194, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:198, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:200, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[150] Set (editDistance: 0, isComplete: true, packages: 20, classes: 149): 
Assertions (3): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (151): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:161, 14.29%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:162, 14.29%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:163, 21.43%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:188, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:189, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:190, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:141, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:142, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:143, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:172, 13.33%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:173, 13.33%> (predicates:{(a1 != a2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:174, 20.00%> (predicates:{(a1 != a2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:200, 14.29%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:201, 14.29%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:202, 21.43%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYImageAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:121, 14.29%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:122, 14.29%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:123, 21.43%> (predicates:{(a1 != a2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:163, 12.50%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:164, 12.50%> (predicates:{(a1 != a2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:165, 18.75%> (predicates:{(a1 != a2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:191, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:192, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:193, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:164, 11.76%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:165, 11.76%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:166, 17.65%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:180, 12.50%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:181, 12.50%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:182, 18.75%> (predicates:{(a1 != a2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:195, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:196, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:197, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testCloning()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:139, 14.29%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:140, 14.29%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:141, 21.43%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisSpaceTests: void testCloning()>
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:126, 15.38%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:127, 15.38%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:128, 23.08%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.AxisTests.java:95, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisTests.java:96, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisTests.java:97, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxis3DTests: void testCloning()>
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:91, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:92, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxis3DTests.java:93, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:182, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:183, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:184, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testCloning()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:165, 12.50%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:166, 12.50%> (predicates:{(t1 != t2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:167, 18.75%> (predicates:{(t1 != t2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testCloning()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:125, 15.38%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ColorBarTests.java:126, 15.38%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ColorBarTests.java:127, 23.08%> (predicates:{(c1 != c2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:98, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:99, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:100, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:205, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:206, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:207, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testCloning()>
		<org.jfree.chart.axis.junit.DateTickTests.java:160, 13.33%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:161, 13.33%> (predicates:{(t1 != t2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:162, 20.00%> (predicates:{(t1 != t2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:105, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:106, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:107, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:92, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:93, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:94, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testCloning()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:157, 18.18%> (predicates:{(mf1 != mf2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:158, 18.18%> (predicates:{(mf1 != mf2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:159, 27.27%> (predicates:{(mf1 != mf2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:112, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:113, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:114, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testCloning()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:136, 15.38%> (predicates:{(qf1 != qf2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:137, 15.38%> (predicates:{(qf1 != qf2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:138, 23.08%> (predicates:{(qf1 != qf2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testCloning()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:990, 16.67%> (predicates:{(l1 != l2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:991, 16.67%> (predicates:{(l1 != l2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:992, 25.00%> (predicates:{(l1 != l2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:145, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:146, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:147, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SymbolAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:120, 15.38%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:121, 15.38%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SymbolAxisTests.java:122, 23.08%> (predicates:{(a1 != a2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.TickUnitsTests: void testCloning()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:118, 16.67%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.TickUnitsTests.java:119, 16.67%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.TickUnitsTests.java:120, 25.00%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ValueAxisTests: void testCloning()>
		<org.jfree.chart.axis.junit.ValueAxisTests.java:107, 16.67%> (predicates:{(a1 != a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:108, 16.67%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ValueAxisTests.java:109, 25.00%> (predicates:{(a1 != a2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.BlockContainerTests: void testCloning()>
		<org.jfree.chart.block.junit.BlockContainerTests.java:117, 13.33%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:118, 13.33%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.BlockContainerTests.java:119, 20.00%> (predicates:{(c1 != c2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.block.junit.LabelBlockTests: void testCloning()>
		<org.jfree.chart.block.junit.LabelBlockTests.java:153, 14.29%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:154, 14.29%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.block.junit.LabelBlockTests.java:155, 21.43%> (predicates:{(b1 != b2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryItemEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:147, 13.33%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:148, 13.33%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryItemEntityTests.java:149, 20.00%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.CategoryLabelEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:126, 15.38%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:127, 15.38%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.CategoryLabelEntityTests.java:128, 23.08%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.ContourEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.ContourEntityTests.java:128, 14.29%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:129, 14.29%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.ContourEntityTests.java:130, 21.43%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.LegendItemEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:138, 15.38%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:139, 15.38%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.LegendItemEntityTests.java:140, 23.08%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.PieSectionEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:143, 14.29%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:144, 14.29%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.PieSectionEntityTests.java:145, 21.43%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.TickLabelEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:119, 15.38%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:120, 15.38%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.TickLabelEntityTests.java:121, 23.08%> (predicates:{(e1 != e2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.entity.junit.XYItemEntityTests: void testCloning()>
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:132, 14.29%> (predicates:{(e1 != e2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:133, 14.29%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.entity.junit.XYItemEntityTests.java:134, 21.43%> (predicates:{(e1 != e2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StandardChartThemeTests: void testCloning()>
		<org.jfree.chart.junit.StandardChartThemeTests.java:323, 16.67%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StandardChartThemeTests.java:324, 16.67%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StandardChartThemeTests.java:325, 25.00%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:133, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:134, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:135, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:154, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:155, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:156, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:182, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:183, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:184, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:95, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:96, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:97, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:130, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:131, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:132, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:136, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:137, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:138, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:150, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:151, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:152, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:169, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:170, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:171, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:139, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:140, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:141, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:147, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:148, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:149, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:162, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:163, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:164, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:138, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:139, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:140, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:167, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:168, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:169, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:186, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:187, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:188, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testCloning()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:115, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:116, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:117, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ArrowNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:106, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:107, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:108, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LineNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.LineNeedleTests.java:101, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LineNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LineNeedleTests.java:103, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LongNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.LongNeedleTests.java:101, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LongNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LongNeedleTests.java:103, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.MiddlePinNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:103, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:104, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PinNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.PinNeedleTests.java:101, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PinNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PinNeedleTests.java:103, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PlumNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:103, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:104, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PointerNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:101, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:103, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ShipNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:103, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:104, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.WindNeedleTests: void testCloning()>
		<org.jfree.chart.needle.junit.WindNeedleTests.java:102, 15.38%> (predicates:{(n1 != n2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.WindNeedleTests.java:103, 15.38%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.WindNeedleTests.java:104, 23.08%> (predicates:{(n1 != n2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testCloning()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:184, 16.67%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:185, 16.67%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:186, 25.00%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryMarkerTests: void testCloning()>
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:173, 12.50%> (predicates:{(m1 != m2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:174, 12.50%> (predicates:{(m1 != m2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryMarkerTests.java:175, 18.75%> (predicates:{(m1 != m2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ColorPaletteTests: void testCloning()>
		<org.jfree.chart.plot.junit.ColorPaletteTests.java:85, 15.38%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ColorPaletteTests.java:86, 15.38%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ColorPaletteTests.java:87, 23.08%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:145, 15.38%> (predicates:{(plot1 != plot2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:146, 15.38%> (predicates:{(plot1 != plot2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:147, 30.77%> (predicates:{(plot1 != plot2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:156, 16.67%> (predicates:{(plot1 != plot2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:157, 16.67%> (predicates:{(plot1 != plot2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:158, 33.33%> (predicates:{(plot1 != plot2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:129, 15.38%> (predicates:{(plot1 != plot2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:130, 15.38%> (predicates:{(plot1 != plot2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:131, 30.77%> (predicates:{(plot1 != plot2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:148, 16.67%> (predicates:{(plot1 != plot2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:149, 16.67%> (predicates:{(plot1 != plot2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:150, 33.33%> (predicates:{(plot1 != plot2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CompassPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.CompassPlotTests.java:179, 15.38%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:180, 15.38%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CompassPlotTests.java:181, 23.08%> (predicates:{(p1 != p2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testCloning()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:198, 12.50%> (predicates:{(c1 != c2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:199, 12.50%> (predicates:{(c1 != c2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:200, 18.75%> (predicates:{(c1 != c2)=null, (temp$8 == temp$9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests: void testCloning()>
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:204, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:205, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.DefaultDrawingSupplierTests.java:206, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:207, 16.67%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:208, 16.67%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:209, 25.00%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testCloning()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:139, 16.67%> (predicates:{(m1 != m2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:140, 16.67%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:141, 25.00%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:467, 16.67%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:468, 16.67%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.PiePlotTests.java:469, 25.00%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.RingPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.RingPlotTests.java:150, 12.50%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:151, 12.50%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.RingPlotTests.java:152, 18.75%> (predicates:{(p1 != p2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ThermometerPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:210, 16.67%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:211, 16.67%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:212, 25.00%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ValueMarkerTests: void testCloning()>
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:198, 16.67%> (predicates:{(m1 != m2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:199, 16.67%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:200, 25.00%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:476, 16.67%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:477, 16.67%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:478, 25.00%> (predicates:{(p1 != p2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testCloning2()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:500, 8.70%> (predicates:{(p1 != p2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:501, 8.70%> (predicates:{(p1 != p2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:502, 13.04%> (predicates:{(p1 != p2)=null, (temp$14 == temp$15)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:129, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:130, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:131, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:135, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:136, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:137, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:224, 14.29%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:225, 14.29%> (predicates:{(r1 != r2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:226, 21.43%> (predicates:{(r1 != r2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:170, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:171, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:172, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:115, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:116, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:117, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:115, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:116, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:117, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:137, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:138, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:139, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:120, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:121, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:122, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:127, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:128, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:129, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:119, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:120, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:121, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:140, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:141, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:142, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:149, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:150, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:151, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:159, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:160, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:161, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:122, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:123, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:124, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:136, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:137, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:138, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testCloning()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:134, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:135, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:136, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.GrayPaintScaleTests: void testCloning()>
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:153, 16.67%> (predicates:{(g1 != g2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:154, 16.67%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.GrayPaintScaleTests.java:155, 25.00%> (predicates:{(g1 != g2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:205, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:206, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:207, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:131, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:132, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:133, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:123, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:124, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:125, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:155, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:156, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:157, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:158, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:159, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:160, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:146, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:147, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:148, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:136, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:137, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:138, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:123, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:124, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:125, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:114, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:115, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:116, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:163, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:164, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:165, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:126, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:127, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:128, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:145, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:146, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:147, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:153, 13.33%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:154, 13.33%> (predicates:{(r1 != r2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:155, 20.00%> (predicates:{(r1 != r2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testCloning2()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:171, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:172, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:173, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:135, 13.33%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:136, 13.33%> (predicates:{(r1 != r2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:137, 20.00%> (predicates:{(r1 != r2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:124, 14.29%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:125, 14.29%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:126, 21.43%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:147, 16.67%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:148, 16.67%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:149, 25.00%> (predicates:{(r1 != r2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testCloning()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:133, 15.38%> (predicates:{(r1 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:134, 15.38%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:135, 23.08%> (predicates:{(r1 != r2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.DateTitleTests.java:136, 15.38%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:137, 15.38%> (predicates:{(t1 != t2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:138, 23.08%> (predicates:{(t1 != t2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ImageTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.ImageTitleTests.java:118, 14.29%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:119, 14.29%> (predicates:{(t1 != t2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:120, 21.43%> (predicates:{(t1 != t2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testCloning()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:192, 14.29%> (predicates:{(l1 != l2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:193, 14.29%> (predicates:{(l1 != l2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:194, 21.43%> (predicates:{(l1 != l2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:117, 16.67%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:118, 16.67%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:119, 25.00%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testCloning()>
		<org.jfree.chart.title.junit.TextTitleTests.java:176, 16.67%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TextTitleTests.java:177, 16.67%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TextTitleTests.java:178, 25.00%> (predicates:{(t1 != t2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testCloning2()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:278, 14.29%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:279, 14.29%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:280, 21.43%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskTests: void testCloning()>
		<org.jfree.data.gantt.junit.TaskTests.java:126, 13.33%> (predicates:{(t1 != t2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:127, 13.33%> (predicates:{(t1 != t2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskTests.java:128, 20.00%> (predicates:{(t1 != t2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests: void testCloning()>
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:114, 14.29%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:115, 14.29%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValueDatasetTests.java:116, 21.43%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests: void testCloning()>
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:94, 13.33%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:95, 13.33%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValues2DDatasetTests.java:96, 20.00%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests: void testCloning()>
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:95, 13.33%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:96, 13.33%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultKeyedValuesDatasetTests.java:97, 20.00%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DefaultPieDatasetTests: void testCloning()>
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:177, 13.33%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:178, 13.33%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DefaultPieDatasetTests.java:179, 20.00%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testCloning()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:130, 15.38%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:131, 15.38%> (predicates:{(item1 != item2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectItemTests.java:132, 23.08%> (predicates:{(item1 != item2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectSeriesTests: void testCloning()>
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:192, 15.38%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:193, 15.38%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.ComparableObjectSeriesTests.java:194, 23.08%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectTests: void testCloning()>
		<org.jfree.data.junit.KeyedObjectTests.java:114, 16.67%> (predicates:{(ko1 != ko2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:115, 16.67%> (predicates:{(ko1 != ko2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectTests.java:116, 25.00%> (predicates:{(ko1 != ko2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.KeyedObjectsTests: void testCloning()>
		<org.jfree.data.junit.KeyedObjectsTests.java:106, 13.33%> (predicates:{(ko1 != ko2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:107, 13.33%> (predicates:{(ko1 != ko2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.KeyedObjectsTests.java:108, 20.00%> (predicates:{(ko1 != ko2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testCloning()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:108, 13.33%> (predicates:{(b1 != b2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramBinTests.java:109, 13.33%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramBinTests.java:110, 20.00%> (predicates:{(b1 != b2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testCloning()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:147, 15.38%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:148, 15.38%> (predicates:{(item1 != item2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:149, 23.08%> (predicates:{(item1 != item2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testCloning()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:158, 15.38%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:159, 15.38%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:160, 23.08%> (predicates:{(s1 != s2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:183, 10.53%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:184, 10.53%> (predicates:{(d1 != d2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:185, 15.79%> (predicates:{(d1 != d2)=null, (temp$11 == temp$12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:140, 15.38%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:141, 15.38%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:142, 23.08%> (predicates:{(d1 != d2)=null, (temp$5 == temp$6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.IntervalXYDelegateTests: void testCloning()>
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:134, 11.76%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:135, 11.76%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.IntervalXYDelegateTests.java:136, 17.65%> (predicates:{(d1 != d2)=null, (temp$7 == temp$8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:128, 16.67%> (predicates:{(m1 != m2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:129, 16.67%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.MatrixSeriesTests.java:130, 25.00%> (predicates:{(m1 != m2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testCloning()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:121, 14.29%> (predicates:{(d1 != d2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:122, 14.29%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:123, 21.43%> (predicates:{(d1 != d2)=null, (temp$6 == temp$7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:134, 16.67%> (predicates:{(v1 != v2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:135, 16.67%> (predicates:{(v1 != v2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:136, 25.00%> (predicates:{(v1 != v2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.VectorSeriesTests.java:156, 16.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:157, 16.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorSeriesTests.java:158, 25.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:139, 16.67%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:140, 16.67%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalDataItemTests.java:141, 25.00%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:155, 16.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:156, 16.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XIntervalSeriesTests.java:157, 25.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.XYDataItemTests.java:104, 18.18%> (predicates:{(i1 != i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYDataItemTests.java:105, 18.18%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYDataItemTests.java:106, 27.27%> (predicates:{(i1 != i2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:155, 16.67%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:156, 16.67%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalDataItemTests.java:157, 25.00%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:155, 16.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:156, 16.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYIntervalSeriesTests.java:157, 25.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:153, 16.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:154, 16.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:155, 25.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalDataItemTests: void testCloning()>
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:138, 16.67%> (predicates:{(item1 != item2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:139, 16.67%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalDataItemTests.java:140, 25.00%> (predicates:{(item1 != item2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesTests: void testCloning()>
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:154, 16.67%> (predicates:{(s1 != s2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:155, 16.67%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.YIntervalSeriesTests.java:156, 25.00%> (predicates:{(s1 != s2)=null, (temp$4 == temp$5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[151] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<org.jfree.data.statistics.junit.RegressionTests: void testOLSRegression1b()>
		<org.jfree.data.statistics.junit.RegressionTests.java:103, 14.29%> (predicates:{(i < 11)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:104, 14.29%> (predicates:{(i < 11)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testPowerRegression1b()>
		<org.jfree.data.statistics.junit.RegressionTests.java:135, 14.29%> (predicates:{(i < 11)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:136, 14.29%> (predicates:{(i < 11)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testOLSRegression2b()>
		<org.jfree.data.statistics.junit.RegressionTests.java:167, 14.29%> (predicates:{(i < 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:168, 14.29%> (predicates:{(i < 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.RegressionTests: void testPowerRegression2b()>
		<org.jfree.data.statistics.junit.RegressionTests.java:199, 14.29%> (predicates:{(i < 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.RegressionTests.java:200, 14.29%> (predicates:{(i < 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[152] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void checkLogPowRoundTrip(double)>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:165, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:167, 91.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogarithmicAxisTests: void checkSwitchedLogPowRoundTrip(double)>
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:192, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogarithmicAxisTests.java:194, 91.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[153] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testBug1766646A()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:198, 20.00%> (predicates:{(range == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:201, 20.00%> (predicates:{(range == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testBug1766646B()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:210, 20.00%> (predicates:{(range == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:213, 20.00%> (predicates:{(range == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[154] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testMinMaxRange()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:540, 15.38%> (predicates:{(temp$3 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:542, 15.38%> (predicates:{(temp$3 >= 0)=null, (temp$7 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCreateCategoryDataset1()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:632, 9.52%> (predicates:{(temp$12 == 3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:633, 9.52%> (predicates:{(temp$12 == 3)=null, (temp$14 == 2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[155] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.WeekTests.java:348, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.WeekTests.java:362, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.WeekTests.java:408, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[nop])
		<org.jfree.data.time.junit.WeekTests.java:422, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[156] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.PaintMapTests: void testPut()>
		<org.jfree.chart.junit.PaintMapTests.java:110, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:120, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testPut()>
		<org.jfree.chart.junit.StrokeMapTests.java:108, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:118, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[157] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.data.time.junit.TimeSeriesTests: void testDelete()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:272, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:274, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testNext()>
		<org.jfree.data.time.junit.YearTests.java:404, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:406, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[158] Set (editDistance: 0, isComplete: true, packages: 1, classes: 9): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (34): 
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.DayTests.java:295, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:305, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.DayTests.java:315, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:325, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.DayTests.java:348, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:358, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.DayTests.java:369, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:379, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.HourTests.java:267, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:277, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.HourTests.java:287, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:297, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.HourTests.java:320, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:330, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.HourTests.java:340, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:350, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MillisecondTests.java:246, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:256, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MillisecondTests.java:266, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:276, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MillisecondTests.java:299, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:309, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MillisecondTests.java:319, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:329, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MinuteTests.java:224, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:234, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MinuteTests.java:244, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:254, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MinuteTests.java:277, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:287, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MinuteTests.java:297, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:307, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MonthTests.java:315, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:325, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MonthTests.java:335, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:345, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.MonthTests.java:368, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:378, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.MonthTests.java:388, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:398, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.QuarterTests.java:335, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:345, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.QuarterTests.java:355, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:365, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.QuarterTests.java:388, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:398, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.QuarterTests.java:408, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:418, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.SecondTests.java:223, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:233, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.SecondTests.java:243, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:253, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.SecondTests.java:276, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:286, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.SecondTests.java:296, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:306, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.WeekTests.java:372, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:382, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.WeekTests.java:432, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:442, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.YearTests.java:303, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:313, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetFirstMillisecondWithCalendar()>
		<org.jfree.data.time.junit.YearTests.java:323, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:333, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetLastMillisecondWithTimeZone()>
		<org.jfree.data.time.junit.YearTests.java:357, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:367, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testGetLastMillisecondWithCalendar()>
		<org.jfree.data.time.junit.YearTests.java:377, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:387, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[159] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.labels.junit.ItemLabelAnchorTests: void testEquals()>
		<org.jfree.chart.labels.junit.ItemLabelAnchorTests.java:83, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.ItemLabelAnchorTests.java:84, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testAdd_TimeSeriesDataItem()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1132, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimeSeriesTests.java:1134, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[160] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testEquals()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:96, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:100, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests: void testSerialization()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:126, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerXYDatasetTests.java:131, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[161] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<org.jfree.chart.junit.HashUtilitiesTests: void testHashCodeForDoubleArray()>
		<org.jfree.chart.junit.HashUtilitiesTests.java:80, 13.33%> (predicates:{(h1 == h2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.HashUtilitiesTests.java:84, 13.33%> (predicates:{(h1 == h2)=null, (h1 == h3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testAddDomainMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:889, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:892, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testAddRangeMarker()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:904, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:907, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testAddDomainMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1070, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1073, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testAddRangeMarker()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1085, 15.00%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.XYPlotTests.java:1088, 15.00%> (predicates:{(temp$3 != null)=null, (temp$10 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[162] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testGenerateLabel()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:232, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:233, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testGenerateLabel()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:92, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:93, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests: void testURL()>
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:166, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.urls.junit.StandardPieURLGeneratorTests.java:168, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[163] Set (editDistance: 0, isComplete: true, packages: 3, classes: 19): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (19): 
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:117, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:118, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:137, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:138, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:166, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:167, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:114, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:115, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:119, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:120, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:133, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:134, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:111, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:112, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:152, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:153, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:122, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:123, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:130, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:131, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:145, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:146, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:139, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:140, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:154, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:155, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:121, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:122, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:151, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:152, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:170, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:171, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testHashCode()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:99, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:100, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testHashCode()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:181, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CrosshairTests.java:182, 22.22%> (predicates:{(temp$3 == temp$4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testCreateCategoryDataset2()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:655, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:656, 11.11%> (predicates:{(dataset == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[164] Set (editDistance: 0, isComplete: true, packages: 7, classes: 11): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (12): 
	<org.jfree.chart.junit.JFreeChartTests: void testGetSubtitles()>
		<org.jfree.chart.junit.JFreeChartTests.java:522, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.JFreeChartTests.java:526, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testGetRowAndColumnCount()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:159, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:160, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetRowIndex()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:221, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:222, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValuesTests: void testClear()>
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:145, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DefaultKeyedValuesTests.java:147, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTests: void testHashCode()>
		<org.jfree.data.junit.RangeTests.java:126, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTests.java:130, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests: void testRemoveAllBins()>
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:161, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.SimpleHistogramDatasetTests.java:163, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testFirstHourNext()>
		<org.jfree.data.time.junit.HourTests.java:169, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:170, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testLastHourPrevious()>
		<org.jfree.data.time.junit.HourTests.java:180, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:181, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void test1161329()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:291, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:293, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testGetSeriesCount()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:87, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:89, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void test788597()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:209, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:211, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesTests: void testIndexOf3()>
		<org.jfree.data.xy.junit.XYSeriesTests.java:263, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesTests.java:264, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[165] Set (editDistance: 0, isComplete: true, packages: 11, classes: 124): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (124): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testHashcode()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:142, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:145, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:169, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:172, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testHashcode()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:122, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:125, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.TextAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:135, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.TextAnnotationTests.java:138, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:153, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:156, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:184, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYImageAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:102, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:105, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:143, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:146, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:172, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:175, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:144, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:147, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:160, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:163, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:177, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:180, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testHashCode()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:120, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:123, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisLocationTests: void testHashCode()>
		<org.jfree.chart.axis.junit.AxisLocationTests.java:97, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisLocationTests.java:100, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisSpaceTests: void testHashCode()>
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:108, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisSpaceTests.java:111, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.AxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.AxisTests.java:255, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.AxisTests.java:258, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAnchorTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:97, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAnchorTests.java:100, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:164, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryAxisTests.java:167, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:160, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionTests.java:163, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelPositionsTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:188, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelPositionsTests.java:191, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:95, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryLabelWidthTypeTests.java:98, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CategoryTickTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CategoryTickTests.java:144, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CategoryTickTests.java:147, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ColorBarTests: void testHashCode()>
		<org.jfree.chart.axis.junit.ColorBarTests.java:107, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ColorBarTests.java:110, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.CyclicNumberAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:159, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.CyclicNumberAxisTests.java:162, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:187, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateAxisTests.java:190, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickMarkPositionTests: void testHashCode()>
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:99, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickMarkPositionTests.java:102, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickTests: void testHashCode()>
		<org.jfree.chart.axis.junit.DateTickTests.java:141, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickTests.java:144, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testHashCode()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:95, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:98, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:113, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ExtendedCategoryAxisTests.java:116, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:140, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.LogAxisTests.java:143, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MarkerAxisBandTests: void testHashCode()>
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:126, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MarkerAxisBandTests.java:129, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.ModuloAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:117, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.ModuloAxisTests.java:120, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.MonthDateFormatTests: void testHashCode()>
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:144, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.MonthDateFormatTests.java:147, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.NumberAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.NumberAxisTests.java:163, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.NumberAxisTests.java:166, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.PeriodAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:207, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:210, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.QuarterDateFormatTests: void testHashCode()>
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:122, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.QuarterDateFormatTests.java:125, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testHashCode()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:1033, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:1036, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void testHashCode()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:126, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:129, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.ArcDialFrameTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:150, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.ArcDialFrameTests.java:153, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialBackgroundTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:121, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialBackgroundTests.java:124, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialCapTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:131, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialCapTests.java:134, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPlotTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:166, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPlotTests.java:169, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialPointerTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:148, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialPointerTests.java:151, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:134, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialTextAnnotationTests.java:137, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:192, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.DialValueIndicatorTests.java:195, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialFrameTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:132, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialFrameTests.java:135, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialRangeTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:122, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialRangeTests.java:125, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.dial.junit.StandardDialScaleTests: void testHashCode()>
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:199, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.dial.junit.StandardDialScaleTests.java:202, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:111, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:114, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:117, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:120, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:204, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:207, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:152, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:155, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:97, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:100, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:119, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:122, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GradientBarPainterTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:110, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.GradientBarPainterTests.java:113, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:109, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:112, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:101, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:104, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:114, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:117, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:168, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:171, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:122, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:125, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:134, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:137, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:131, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:134, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:141, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:144, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testHashCode()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:104, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:107, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StandardBarPainterTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:95, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StandardBarPainterTests.java:98, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:118, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:121, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:131, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:134, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:101, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.junit.DefaultPolarItemRendererTests.java:104, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:187, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:190, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:113, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:116, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:105, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:108, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:110, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.GradientXYBarPainterTests.java:113, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:136, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:139, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:140, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:143, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:128, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:131, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:95, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYBarPainterTests.java:98, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:173, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:176, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:105, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:108, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:96, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:99, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:116, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:119, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:196, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:199, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:129, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:132, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:145, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:148, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:108, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:111, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:150, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:153, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:133, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:136, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:200, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:203, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:104, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:107, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:129, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:132, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testHashcode()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:186, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:189, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.CompositeTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.CompositeTitleTests.java:144, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.CompositeTitleTests.java:147, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.DateTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.DateTitleTests.java:118, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.DateTitleTests.java:121, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ImageTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.ImageTitleTests.java:100, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ImageTitleTests.java:103, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendGraphicTests: void testHashcode()>
		<org.jfree.chart.title.junit.LegendGraphicTests.java:195, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendGraphicTests.java:198, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.LegendTitleTests.java:139, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.LegendTitleTests.java:142, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.PaintScaleLegendTests: void testHashcode()>
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:173, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.PaintScaleLegendTests.java:176, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.ShortTextTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:99, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.ShortTextTitleTests.java:102, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TextTitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.TextTitleTests.java:158, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TextTitleTests.java:161, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.TitleTests: void testHashcode()>
		<org.jfree.chart.title.junit.TitleTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.title.junit.TitleTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DomainOrderTests: void testHashCode()>
		<org.jfree.data.junit.DomainOrderTests.java:103, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.DomainOrderTests.java:106, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.RangeTypeTests: void testHashCode()>
		<org.jfree.data.junit.RangeTypeTests.java:103, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.junit.RangeTypeTests.java:106, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testHashcode()>
		<org.jfree.data.time.junit.DayTests.java:251, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.DayTests.java:254, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.FixedMillisecondTests: void testHashcode()>
		<org.jfree.data.time.junit.FixedMillisecondTests.java:115, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.FixedMillisecondTests.java:118, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testHashcode()>
		<org.jfree.data.time.junit.HourTests.java:233, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.HourTests.java:236, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testHashcode()>
		<org.jfree.data.time.junit.MillisecondTests.java:198, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MillisecondTests.java:201, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testHashcode()>
		<org.jfree.data.time.junit.MinuteTests.java:189, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MinuteTests.java:192, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testHashcode()>
		<org.jfree.data.time.junit.MonthTests.java:281, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.MonthTests.java:284, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testHashcode()>
		<org.jfree.data.time.junit.QuarterTests.java:276, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:279, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testHashcode()>
		<org.jfree.data.time.junit.SecondTests.java:188, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SecondTests.java:191, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testHashcode()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:153, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:156, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.WeekTests: void testHashcode()>
		<org.jfree.data.time.junit.WeekTests.java:201, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.WeekTests.java:204, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testHashcode()>
		<org.jfree.data.time.junit.YearTests.java:276, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.YearTests.java:279, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCItemTests: void testHashcode()>
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:181, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCItemTests.java:184, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void testHashcode()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:200, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:203, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testHashcode()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:139, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:142, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCTests: void testHashcode()>
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:147, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.ohlc.junit.OHLCTests.java:150, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorDataItemTests: void testHashcode()>
		<org.jfree.data.xy.junit.VectorDataItemTests.java:116, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorDataItemTests.java:119, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorTests: void testHashcode()>
		<org.jfree.data.xy.junit.VectorTests.java:106, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.VectorTests.java:109, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYCoordinateTests: void testHashcode()>
		<org.jfree.data.xy.junit.XYCoordinateTests.java:106, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYCoordinateTests.java:109, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testAddSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:293, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:294, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[166] Set (editDistance: 0, isComplete: true, packages: 12, classes: 28): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (29): 
	<org.jfree.chart.axis.junit.TickUnitsTests: void testEquals()>
		<org.jfree.chart.axis.junit.TickUnitsTests.java:129, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.axis.junit.TickUnitsTests.java:130, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PaintMapTests: void testCloning()>
		<org.jfree.chart.junit.PaintMapTests.java:164, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.PaintMapTests.java:175, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StrokeMapTests: void testCloning()>
		<org.jfree.chart.junit.StrokeMapTests.java:160, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.junit.StrokeMapTests.java:170, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testEquals()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:87, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:88, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LineNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.LineNeedleTests.java:84, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LineNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LongNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.LongNeedleTests.java:84, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.LongNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.MiddlePinNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:86, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PinNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.PinNeedleTests.java:84, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PinNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PlumNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:86, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PointerNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:84, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ShipNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:86, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.WindNeedleTests: void testEquals()>
		<org.jfree.chart.needle.junit.WindNeedleTests.java:85, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.needle.junit.WindNeedleTests.java:86, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:140, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:141, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:117, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:118, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ValueMarkerTests: void test1802195()>
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:277, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:286, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:196, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:197, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:207, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:208, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testConstructor()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:86, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:95, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.function.junit.PolynomialFunction2DTests: void testGetCoefficients()>
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:105, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.function.junit.PolynomialFunction2DTests.java:110, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testEquals()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:458, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:459, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testJava()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:120, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:121, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests: void testEquals()>
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:95, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.BoxAndWhiskerItemTests.java:96, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void testEquals()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:103, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:104, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests: void testEquals()>
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:133, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.DefaultStatisticalCategoryDatasetTests.java:134, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramBinTests: void testEquals()>
		<org.jfree.data.statistics.junit.HistogramBinTests.java:89, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.statistics.junit.HistogramBinTests.java:90, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testConstructor()>
		<org.jfree.data.time.junit.QuarterTests.java:303, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.QuarterTests.java:312, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testEquals()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:101, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.time.junit.TimePeriodValueTests.java:102, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.OHLCDataItemTests: void testEquals()>
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:90, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.OHLCDataItemTests.java:91, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testEquals()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:99, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:100, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[167] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test1()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:91, 10.34%> (predicates:{(temp$14 != 0)=null, (temp$17 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test2()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:122, 11.54%> (predicates:{(temp$12 != 0)=null, (temp$15 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test3()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:153, 11.54%> (predicates:{(temp$12 != 0)=null, (temp$15 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test4()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:184, 11.54%> (predicates:{(temp$12 != 0)=null, (temp$15 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test5()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:225, 10.00%> (predicates:{(temp$14 != 0)=null, (temp$18 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test6()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:267, 10.00%> (predicates:{(temp$14 != 0)=null, (temp$18 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test7()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:308, 10.34%> (predicates:{(temp$13 != 0)=null, (temp$17 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests2: void test8()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests2.java:359, 10.00%> (predicates:{(temp$14 != 0)=null, (temp$18 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[168] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2): 
Assertions (1): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<org.jfree.chart.junit.JFreeChartTests: void testLegendEvents()>
		<org.jfree.chart.junit.JFreeChartTests.java:540, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.HistogramDatasetTests: void test2902842()>
		<org.jfree.data.statistics.junit.HistogramDatasetTests.java:272, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[169] Set (editDistance: 0, isComplete: true, packages: 4, classes: 4): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (10): 
	<org.jfree.chart.axis.junit.ValueAxisTests: void test3555275()>
		<org.jfree.chart.axis.junit.ValueAxisTests.java:276, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testAxisRange()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:151, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testBug1835955()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:361, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian1()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:258, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian2()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:269, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian3()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:284, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian4()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:300, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCalculateMedian6()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:372, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCorrelation1()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:388, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.statistics.junit.StatisticsTests: void testCorrelation2()>
		<org.jfree.data.statistics.junit.StatisticsTests.java:440, 3.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[170] Set (editDistance: 0, isComplete: true, packages: 4, classes: 7): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

Methods (7): 
	<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests: void test1701822()>
		<org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.java:184, 4.55%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void test1170825()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:301, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests: void test1170825()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesCollectionTests.java:184, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void test1170825()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:211, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void test1170825()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:219, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void test1170825()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:216, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void test1170825()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:211, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[171] Set (editDistance: 0, isComplete: true, packages: 8, classes: 28): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (40): 
	<org.jfree.chart.axis.junit.PeriodAxisLabelInfoTests: void testSerialization()>
		<org.jfree.chart.axis.junit.PeriodAxisLabelInfoTests.java:218, 14.29%> (predicates:{(temp$2 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.PeriodAxisTests: void test1932146()>
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:298, 28.57%> (predicates:{(temp$3 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.AreaChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.AreaChartTests.java:111, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.AreaChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.AreaChartTests.java:125, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChart3DTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.BarChart3DTests.java:163, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChart3DTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.BarChart3DTests.java:177, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.BarChartTests.java:167, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.BarChartTests.java:181, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.GanttChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.GanttChartTests.java:165, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.GanttChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.GanttChartTests.java:179, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChart3DTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.LineChart3DTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChart3DTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.LineChart3DTests.java:176, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.LineChartTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.LineChartTests.java:176, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ScatterPlotTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.ScatterPlotTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedAreaChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.StackedAreaChartTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedAreaChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.StackedAreaChartTests.java:176, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChart3DTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.StackedBarChart3DTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChart3DTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.StackedBarChart3DTests.java:176, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.StackedBarChartTests.java:168, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.StackedBarChartTests.java:182, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.TimeSeriesChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.TimeSeriesChartTests.java:158, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.WaterfallChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.WaterfallChartTests.java:132, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.WaterfallChartTests: void testSetSeriesURLGenerator()>
		<org.jfree.chart.junit.WaterfallChartTests.java:146, 18.18%> (predicates:{(url2 == url1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYAreaChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.XYAreaChartTests.java:159, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYBarChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.XYBarChartTests.java:162, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYLineChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.XYLineChartTests.java:159, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepAreaChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.XYStepAreaChartTests.java:159, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepChartTests: void testSetSeriesToolTipGenerator()>
		<org.jfree.chart.junit.XYStepChartTests.java:159, 18.18%> (predicates:{(tt2 == tt)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.ItemLabelAnchorTests: void testSerialization()>
		<org.jfree.chart.labels.junit.ItemLabelAnchorTests.java:109, 13.33%> (predicates:{(a1 == a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSetRenderer()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:865, 20.00%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests: void testRemoveSubplot()>
		<org.jfree.chart.plot.junit.CombinedDomainXYPlotTests.java:131, 18.18%> (predicates:{(temp$4 == plot1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests: void testRemoveSubplot()>
		<org.jfree.chart.plot.junit.CombinedRangeXYPlotTests.java:133, 18.18%> (predicates:{(temp$4 == plot1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSetNullRenderer()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:710, 22.22%> (predicates:{(failed == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testSetRenderer()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1035, 20.00%> (predicates:{(temp$4 != null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests: void testFindRangeBounds()>
		<org.jfree.chart.renderer.xy.junit.AbstractXYItemRendererTests.java:119, 40.00%> (predicates:{(temp$1 == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetStartValue3()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:304, 22.22%> (predicates:{(millis == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.gantt.junit.TaskSeriesCollectionTests: void testGetEndValue3()>
		<org.jfree.data.gantt.junit.TaskSeriesCollectionTests.java:369, 22.22%> (predicates:{(millis == null)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void test803660()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:553, 25.00%> (predicates:{(temp$3 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodAnchorTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodAnchorTests.java:111, 11.76%> (predicates:{(a1 == a2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[172] Set (editDistance: 0, isComplete: true, packages: 17, classes: 172): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (223): 
	<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.CategoryLineAnnotationTests.java:173, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.CategoryPointerAnnotationTests.java:199, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.CategoryTextAnnotationTests.java:152, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:183, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYBoxAnnotationTests: void testDrawWithNullInfo()>
		<org.jfree.chart.annotations.junit.XYBoxAnnotationTests.java:248, 8.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYDrawableAnnotationTests.java:211, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYImageAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYImageAnnotationTests.java:132, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYLineAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYLineAnnotationTests.java:175, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPointerAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYPointerAnnotationTests.java:202, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYPolygonAnnotationTests.java:176, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYShapeAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYShapeAnnotationTests.java:192, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTextAnnotationTests: void testPublicCloneable()>
		<org.jfree.chart.annotations.junit.XYTextAnnotationTests.java:205, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.annotations.junit.XYTitleAnnotationTests: void testDrawWithNullInfo()>
		<org.jfree.chart.annotations.junit.XYTitleAnnotationTests.java:204, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.DateAxisTests.java:329, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.DateTickUnitTests: void testEquals()>
		<org.jfree.chart.axis.junit.DateTickUnitTests.java:86, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.LogAxisTests: void testTickMarksVisibleDefault()>
		<org.jfree.chart.axis.junit.LogAxisTests.java:326, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.PeriodAxisTests: void testSerialization()>
		<org.jfree.chart.axis.junit.PeriodAxisTests.java:287, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SegmentedTimelineTests: void testSerialization2()>
		<org.jfree.chart.axis.junit.SegmentedTimelineTests.java:1062, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.StandardTickUnitSourceTests: void testEquals()>
		<org.jfree.chart.axis.junit.StandardTickUnitSourceTests.java:85, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.axis.junit.SubCategoryAxisTests: void test2275695()>
		<org.jfree.chart.axis.junit.SubCategoryAxisTests.java:196, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.AreaChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.AreaChartTests.java:146, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChart3DTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.BarChart3DTests.java:121, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.BarChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.BarChartTests.java:124, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.GanttChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.GanttChartTests.java:121, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.GanttChartTests: void testDrawWithNullInfo2()>
		<org.jfree.chart.junit.GanttChartTests.java:140, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LegendItemTests: void testSerialization()>
		<org.jfree.chart.junit.LegendItemTests.java:360, 10.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChart3DTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.LineChart3DTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.LineChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.LineChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.MeterChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.MeterChartTests.java:100, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.PieChart3DTests: void testNullValueInDataset()>
		<org.jfree.chart.junit.PieChart3DTests.java:133, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.ScatterPlotTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.ScatterPlotTests.java:122, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedAreaChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.StackedAreaChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChart3DTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.StackedBarChart3DTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StackedBarChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.StackedBarChartTests.java:125, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.StandardChartThemeTests: void testSerialization()>
		<org.jfree.chart.junit.StandardChartThemeTests.java:308, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.TimeSeriesChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.TimeSeriesChartTests.java:118, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.WaterfallChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.WaterfallChartTests.java:117, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYAreaChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.XYAreaChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYBarChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.XYBarChartTests.java:121, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYLineChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.XYLineChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepAreaChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.XYStepAreaChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.junit.XYStepChartTests: void testDrawWithNullInfo()>
		<org.jfree.chart.junit.XYStepChartTests.java:119, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerToolTipGeneratorTests.java:143, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.BoxAndWhiskerXYToolTipGeneratorTests.java:165, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.BubbleXYItemLabelGeneratorTests.java:192, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.CustomXYItemLabelGeneratorTests.java:105, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.HighLowItemLabelGeneratorTests.java:140, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.IntervalCategoryItemLabelGeneratorTests.java:147, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.IntervalCategoryToolTipGeneratorTests.java:161, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.MultipleXYSeriesLabelGeneratorTests.java:145, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardCategoryItemLabelGeneratorTests.java:180, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardCategorySeriesLabelGeneratorTests.java:150, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardCategoryToolTipGeneratorTests.java:158, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardPieSectionLabelGeneratorTests.java:173, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardPieToolTipGeneratorTests.java:167, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardXYItemLabelGeneratorTests.java:216, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardXYSeriesLabelGeneratorTests.java:149, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardXYToolTipGeneratorTests.java:177, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.StandardXYZToolTipGeneratorTests.java:196, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.labels.junit.SymbolicXYItemLabelGeneratorTests.java:125, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ArrowNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.ArrowNeedleTests.java:131, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LineNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.LineNeedleTests.java:126, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.LongNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.LongNeedleTests.java:126, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.MiddlePinNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.MiddlePinNeedleTests.java:127, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PinNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.PinNeedleTests.java:126, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PlumNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.PlumNeedleTests.java:127, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.PointerNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.PointerNeedleTests.java:126, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.ShipNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.ShipNeedleTests.java:127, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.needle.junit.WindNeedleTests: void testSerialization()>
		<org.jfree.chart.needle.junit.WindNeedleTests.java:127, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:678, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void test1169972()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:877, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CategoryPlotTests: void test1654215()>
		<org.jfree.chart.plot.junit.CategoryPlotTests.java:933, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ColorPaletteTests: void testEquals()>
		<org.jfree.chart.plot.junit.ColorPaletteTests.java:96, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.CombinedDomainCategoryPlotTests.java:130, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests: void testEquals()>
		<org.jfree.chart.plot.junit.CombinedRangeCategoryPlotTests.java:114, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.CrosshairTests: void testPublicCloneable()>
		<org.jfree.chart.plot.junit.CrosshairTests.java:208, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.FastScatterPlotTests: void testDrawWithNullInfo()>
		<org.jfree.chart.plot.junit.FastScatterPlotTests.java:261, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.IntervalMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.IntervalMarkerTests.java:166, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.MeterIntervalTests: void testSerialization()>
		<org.jfree.chart.plot.junit.MeterIntervalTests.java:142, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PieLabelRecordTests: void testSerialization()>
		<org.jfree.chart.plot.junit.PieLabelRecordTests.java:161, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlot3DTests: void testDrawWithNullDataset()>
		<org.jfree.chart.plot.junit.PiePlot3DTests.java:151, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.PiePlotTests: void testDrawWithNullLegendLabels()>
		<org.jfree.chart.plot.junit.PiePlotTests.java:694, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.SpiderWebPlotTests: void testDrawWithNullInfo()>
		<org.jfree.chart.plot.junit.SpiderWebPlotTests.java:373, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ThermometerPlotTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:237, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ThermometerPlotTests: void testSerialization2()>
		<org.jfree.chart.plot.junit.ThermometerPlotTests.java:264, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.ValueMarkerTests: void testSerialization()>
		<org.jfree.chart.plot.junit.ValueMarkerTests.java:226, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void test1654215()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1114, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testDrawRangeGridlines()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1140, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.plot.junit.XYPlotTests: void testDrawSeriesWithZeroItems()>
		<org.jfree.chart.plot.junit.XYPlotTests.java:1166, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.AreaRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.AreaRendererTests.java:139, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRenderer3DTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.BarRenderer3DTests.java:145, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:234, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BarRendererTests: void testEventNotification()>
		<org.jfree.chart.renderer.category.junit.BarRendererTests.java:274, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:180, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:233, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testBug1572478Vertical()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:274, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testBug1572478Horizontal()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:317, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMean()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:391, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMedian()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:418, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullQ1()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:445, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullQ3()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:472, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMinRegular()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:499, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMaxRegular()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:527, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMinOutlier()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:554, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests: void testDrawWithNullMaxOutlier()>
		<org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.java:581, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.CategoryStepRendererTests.java:125, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.DefaultCategoryItemRendererTests.java:125, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GanttRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.GanttRendererTests.java:147, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:130, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.java:184, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:137, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.java:187, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:129, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.java:180, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:147, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LevelRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.LevelRendererTests.java:221, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.LineAndShapeRendererTests.java:199, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.LineRenderer3DTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.LineRenderer3DTests.java:146, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:150, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.java:200, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.ScatterRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.ScatterRendererTests.java:164, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.StackedAreaRendererTests.java:160, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests.java:169, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StackedBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.StackedBarRendererTests.java:132, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:146, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:198, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testDrawWithNullMeanVertical()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:225, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testDrawWithNullMeanHorizontal()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:253, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testDrawWithNullDeviationVertical()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:280, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: void testDrawWithNullDeviationHorizontal()>
		<org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.java:308, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:145, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.java:198, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.category.junit.WaterfallBarRendererTests.java:166, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetSeriesVisible()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:652, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.junit.AbstractRendererTests: void testSetItemLabelsVisible()>
		<org.jfree.chart.renderer.junit.AbstractRendererTests.java:710, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.CandlestickRendererTests.java:215, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.ClusteredXYBarRendererTests.java:141, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.DeviationRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.DeviationRendererTests.java:136, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.HighLowRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.HighLowRendererTests.java:165, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testDrawWithEmptyDataset()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:116, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRenderer2Tests.java:168, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:156, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:234, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests: void testBug1593156()>
		<org.jfree.chart.renderer.xy.junit.StackedXYAreaRendererTests.java:272, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.StackedXYBarRendererTests.java:146, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.StandardXYItemRendererTests.java:214, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.VectorRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.VectorRendererTests.java:133, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.WindItemRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.WindItemRendererTests.java:124, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:150, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRenderer2Tests.java:213, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:196, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.xy.junit.XYAreaRendererTests.java:259, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBarRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYBarRendererTests.java:232, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYBlockRendererTests.java:166, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYBoxAndWhiskerRendererTests.java:173, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYBubbleRendererTests.java:136, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYDifferenceRendererTests.java:187, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYDotRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYDotRendererTests.java:155, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYErrorRendererTests.java:181, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYLine3DRendererTests.java:145, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYLineAndShapeRendererTests.java:250, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYSplineRendererTests.java:134, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:157, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.xy.junit.XYStepAreaRendererTests.java:219, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:143, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testDrawWithNullInfo()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:204, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.XYStepRendererTests: void testDrawWithNullValue()>
		<org.jfree.chart.renderer.xy.junit.XYStepRendererTests.java:241, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests: void testPublicCloneable()>
		<org.jfree.chart.renderer.xy.junit.YIntervalRendererTests.java:240, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.title.junit.LegendGraphicTests: void testSerialization()>
		<org.jfree.chart.title.junit.LegendGraphicTests.java:272, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.CustomCategoryURLGeneratorTests.java:137, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.CustomPieURLGeneratorTests.java:130, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests: void testPublicCloneable()>
		<org.jfree.chart.urls.junit.CustomXYURLGeneratorTests.java:140, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests: void testGenerateURL()>
		<org.jfree.chart.urls.junit.TimeSeriesURLGeneratorTests.java:92, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.CategoryToPieDatasetTests: void testEquals()>
		<org.jfree.data.category.junit.CategoryToPieDatasetTests.java:215, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testGetValue2()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:122, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultCategoryDatasetTests: void testPublicCloneable()>
		<org.jfree.data.category.junit.DefaultCategoryDatasetTests.java:347, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSetSeriesKeys()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:418, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests: void testSetCategoryKeys()>
		<org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.java:458, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.general.junit.DatasetUtilitiesTests: void testMaximumStackedRangeValue()>
		<org.jfree.data.general.junit.DatasetUtilitiesTests.java:680, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.ComparableObjectItemTests: void testConstructor()>
		<org.jfree.data.junit.ComparableObjectItemTests.java:92, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.junit.DefaultKeyedValues2DTests: void testRemoveRow()>
		<org.jfree.data.junit.DefaultKeyedValues2DTests.java:343, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.DayTests.java:110, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.DayTests: void testEquals()>
		<org.jfree.data.time.junit.DayTests.java:119, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.HourTests.java:106, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.HourTests: void testEquals()>
		<org.jfree.data.time.junit.HourTests.java:115, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.MillisecondTests.java:109, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MillisecondTests: void testEquals()>
		<org.jfree.data.time.junit.MillisecondTests.java:126, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.MinuteTests.java:108, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MinuteTests: void testEquals()>
		<org.jfree.data.time.junit.MinuteTests.java:121, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.MonthTests.java:125, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.MonthTests: void testEquals()>
		<org.jfree.data.time.junit.MonthTests.java:134, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.QuarterTests.java:120, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.QuarterTests: void testEquals()>
		<org.jfree.data.time.junit.QuarterTests.java:129, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.SecondTests.java:107, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SecondTests: void testEquals()>
		<org.jfree.data.time.junit.SecondTests.java:122, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.SimpleTimePeriodTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.SimpleTimePeriodTests.java:97, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValueTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.TimePeriodValueTests.java:92, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimePeriodValuesTests: void testSerialization()>
		<org.jfree.data.time.junit.TimePeriodValuesTests.java:226, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesCollectionTests: void testRemoveSeries()>
		<org.jfree.data.time.junit.TimeSeriesCollectionTests.java:150, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesDataItemTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.TimeSeriesDataItemTests.java:96, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:366, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testRemoveAgedItems3()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:925, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeSeriesTests: void testBug1864222()>
		<org.jfree.data.time.junit.TimeSeriesTests.java:1005, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.TimeTableXYDatasetTests: void testSerialization()>
		<org.jfree.data.time.junit.TimeTableXYDatasetTests.java:184, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.junit.YearTests: void testEqualsSelf()>
		<org.jfree.data.time.junit.YearTests.java:106, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.time.ohlc.junit.OHLCSeriesTests: void testAdditionOfDuplicatePeriod()>
		<org.jfree.data.time.ohlc.junit.OHLCSeriesTests.java:248, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.CategoryTableXYDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.CategoryTableXYDatasetTests.java:172, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultHighLowDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultHighLowDatasetTests.java:195, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultIntervalXYDatasetTests.java:298, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultOHLCDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultOHLCDatasetTests.java:177, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultTableXYDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultTableXYDatasetTests.java:142, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultWindDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultWindDatasetTests.java:133, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultXYDatasetTests.java:147, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.DefaultXYZDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.DefaultXYZDatasetTests.java:150, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.MatrixSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.MatrixSeriesCollectionTests.java:133, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.TableXYDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.TableXYDatasetTests.java:131, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.VectorSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.VectorSeriesCollectionTests.java:134, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.XIntervalSeriesCollectionTests.java:137, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYBarDatasetTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.XYBarDatasetTests.java:143, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.XYIntervalSeriesCollectionTests.java:139, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:172, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.XYSeriesCollectionTests: void testRenameSeries()>
		<org.jfree.data.xy.junit.XYSeriesCollectionTests.java:430, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests: void testPublicCloneable()>
		<org.jfree.data.xy.junit.YIntervalSeriesCollectionTests.java:137, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

