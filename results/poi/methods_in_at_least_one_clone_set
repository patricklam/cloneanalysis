[1] <org.apache.poi.TestEmbeded: void test(org.apache.poi.POIXMLDocument,int)>
[2] <org.apache.poi.TestPOIDocumentMain: void testCreateNewProperties()>
[3] <org.apache.poi.TestPOIDocumentMain: void testCreateNewPropertiesOnExistingFile()>
[4] <org.apache.poi.TestPOIDocumentMain: void testReadProperties()>
[5] <org.apache.poi.TestPOIDocumentMain: void testReadProperties2()>
[6] <org.apache.poi.TestPOIDocumentMain: void testWriteProperties()>
[7] <org.apache.poi.TestPOIDocumentScratchpad: void testReadProperties()>
[8] <org.apache.poi.TestPOIDocumentScratchpad: void testReadProperties2()>
[9] <org.apache.poi.TestPOIDocumentScratchpad: void testWriteProperties()>
[10] <org.apache.poi.TestPOIXMLProperties: void testTransitiveSetters()>
[11] <org.apache.poi.TestPOIXMLProperties: void testWorkbookExtendedProperties()>
[12] <org.apache.poi.TestXMLPropertiesTextExtractor: void testCore()>
[13] <org.apache.poi.TestXMLPropertiesTextExtractor: void testCustom()>
[14] <org.apache.poi.TestXMLPropertiesTextExtractor: void testExtended()>
[15] <org.apache.poi.TestXMLPropertiesTextExtractor: void testWithSomeNulls()>
[16] <org.apache.poi.ddf.TestEscherBSERecord: void testFillFields()>
[17] <org.apache.poi.ddf.TestEscherBSERecord: void testSerialize()>
[18] <org.apache.poi.ddf.TestEscherBSERecord: void testToString()>
[19] <org.apache.poi.ddf.TestEscherBlipRecord: void testContainer()>
[20] <org.apache.poi.ddf.TestEscherBlipRecord: void testReadPICT()>
[21] <org.apache.poi.ddf.TestEscherBlipRecord: void testReadPNG()>
[22] <org.apache.poi.ddf.TestEscherBlipWMFRecord: void testFillFields()>
[23] <org.apache.poi.ddf.TestEscherBlipWMFRecord: void testSerialize()>
[24] <org.apache.poi.ddf.TestEscherBlipWMFRecord: void testToString()>
[25] <org.apache.poi.ddf.TestEscherBoolProperty: void testToString()>
[26] <org.apache.poi.ddf.TestEscherChildAnchorRecord: void testFillFields()>
[27] <org.apache.poi.ddf.TestEscherChildAnchorRecord: void testSerialize()>
[28] <org.apache.poi.ddf.TestEscherChildAnchorRecord: void testToString()>
[29] <org.apache.poi.ddf.TestEscherClientAnchorRecord: void testFillFields()>
[30] <org.apache.poi.ddf.TestEscherClientAnchorRecord: void testSerialize()>
[31] <org.apache.poi.ddf.TestEscherClientAnchorRecord: void testToString()>
[32] <org.apache.poi.ddf.TestEscherClientDataRecord: void testFillFields()>
[33] <org.apache.poi.ddf.TestEscherClientDataRecord: void testSerialize()>
[34] <org.apache.poi.ddf.TestEscherClientDataRecord: void testToString()>
[35] <org.apache.poi.ddf.TestEscherContainerRecord: void testChildren()>
[36] <org.apache.poi.ddf.TestEscherContainerRecord: void testGetRecordSize()>
[37] <org.apache.poi.ddf.TestEscherContainerRecord: void testSerialize()>
[38] <org.apache.poi.ddf.TestEscherContainerRecord: void testToString()>
[39] <org.apache.poi.ddf.TestEscherDgRecord: void testFillFields()>
[40] <org.apache.poi.ddf.TestEscherDgRecord: void testSerialize()>
[41] <org.apache.poi.ddf.TestEscherDgRecord: void testToString()>
[42] <org.apache.poi.ddf.TestEscherDggRecord: void testFillFields()>
[43] <org.apache.poi.ddf.TestEscherDggRecord: void testGetRecordSize()>
[44] <org.apache.poi.ddf.TestEscherDggRecord: void testSerialize()>
[45] <org.apache.poi.ddf.TestEscherDggRecord: void testToString()>
[46] <org.apache.poi.ddf.TestEscherOptRecord: void testComplexSerialise()>
[47] <org.apache.poi.ddf.TestEscherOptRecord: void testEmptyArrayProperty()>
[48] <org.apache.poi.ddf.TestEscherOptRecord: void testToString()>
[49] <org.apache.poi.ddf.TestEscherSpRecord: void testFillFields()>
[50] <org.apache.poi.ddf.TestEscherSpRecord: void testSerialize()>
[51] <org.apache.poi.ddf.TestEscherSpRecord: void testToString()>
[52] <org.apache.poi.ddf.TestEscherSpgrRecord: void testFillFields()>
[53] <org.apache.poi.ddf.TestEscherSpgrRecord: void testSerialize()>
[54] <org.apache.poi.ddf.TestEscherSpgrRecord: void testToString()>
[55] <org.apache.poi.ddf.TestEscherSplitMenuColorsRecord: void testFillFields()>
[56] <org.apache.poi.ddf.TestEscherSplitMenuColorsRecord: void testSerialize()>
[57] <org.apache.poi.ddf.TestEscherSplitMenuColorsRecord: void testToString()>
[58] <org.apache.poi.ddf.TestUnknownEscherRecord: void testFillFields()>
[59] <org.apache.poi.ddf.TestUnknownEscherRecord: void testSerialize()>
[60] <org.apache.poi.ddf.TestUnknownEscherRecord: void testToString()>
[61] <org.apache.poi.extractor.TestExtractorFactory: void testFile()>
[62] <org.apache.poi.extractor.TestExtractorFactory: void testInputStream()>
[63] <org.apache.poi.extractor.TestExtractorFactory: void testPOIFS()>
[64] <org.apache.poi.extractor.TestExtractorFactory: void testPackage()>
[65] <org.apache.poi.extractor.TestExtractorFactory: void testPreferEventBased()>
[66] <org.apache.poi.hdgf.TestHDGFCore: void testNegativeChunkLength()>
[67] <org.apache.poi.hdgf.TestHDGFCore: void testTrailer()>
[68] <org.apache.poi.hdgf.TestHDGFCore: void testUtf16LE()>
[69] <org.apache.poi.hdgf.TestHDGFCore: void testV6NonUtf16LE()>
[70] <org.apache.poi.hdgf.TestHDGFLZW: void testCompressMidi()>
[71] <org.apache.poi.hdgf.TestHDGFLZW: void testCompressMini()>
[72] <org.apache.poi.hdgf.TestHDGFLZW: void testCounts()>
[73] <org.apache.poi.hdgf.TestHDGFLZW: void testDecompress()>
[74] <org.apache.poi.hdgf.TestHDGFLZW: void testFromToInt()>
[75] <org.apache.poi.hdgf.chunks.TestChunks: void testAnotherChunk()>
[76] <org.apache.poi.hdgf.chunks.TestChunks: void testChunkHeaderA()>
[77] <org.apache.poi.hdgf.chunks.TestChunks: void testChunkHeaderB()>
[78] <org.apache.poi.hdgf.chunks.TestChunks: void testManyChunks()>
[79] <org.apache.poi.hdgf.chunks.TestChunks: void testOneChunk()>
[80] <org.apache.poi.hdgf.extractor.TestVisioExtractor: void testCreation()>
[81] <org.apache.poi.hdgf.extractor.TestVisioExtractor: void testExtraction()>
[82] <org.apache.poi.hdgf.extractor.TestVisioExtractor: void testMain()>
[83] <org.apache.poi.hdgf.pointers.TestPointerFactory: void testCreateV4()>
[84] <org.apache.poi.hdgf.pointers.TestPointerFactory: void testCreateV6()>
[85] <org.apache.poi.hdgf.pointers.TestPointerFactory: void testCreateV6FromMid()>
[86] <org.apache.poi.hdgf.streams.TestStreamBasics: void testCompressedStream()>
[87] <org.apache.poi.hdgf.streams.TestStreamBasics: void testUncompressedStream()>
[88] <org.apache.poi.hdgf.streams.TestStreamComplex: void testChunkWithText()>
[89] <org.apache.poi.hdgf.streams.TestStreamComplex: void testChunks()>
[90] <org.apache.poi.hdgf.streams.TestStreamComplex: void testPointerToStrings()>
[91] <org.apache.poi.hdgf.streams.TestStreamComplex: void testStrings()>
[92] <org.apache.poi.hdgf.streams.TestStreamComplex: void testTrailer()>
[93] <org.apache.poi.hdgf.streams.TestStreamComplex: void testTrailerContents()>
[94] <org.apache.poi.hmef.TestAttachments: void testAttachmentDetails()>
[95] <org.apache.poi.hmef.TestAttachments: void testCounts()>
[96] <org.apache.poi.hmef.TestCompressedRTF: void testFirstBlock()>
[97] <org.apache.poi.hmef.TestCompressedRTF: void testFirstTwoBlocks()>
[98] <org.apache.poi.hmef.TestCompressedRTF: void testFull()>
[99] <org.apache.poi.hmef.TestCompressedRTF: void testQuickBasics()>
[100] <org.apache.poi.hmef.TestHMEFMessage: void testBasicMessageAttributes()>
[101] <org.apache.poi.hmef.TestHMEFMessage: void testBasicMessageMAPIAttributes()>
[102] <org.apache.poi.hmef.TestHMEFMessage: void testCounts()>
[103] <org.apache.poi.hmef.TestHMEFMessage: void testOpen()>
[104] <org.apache.poi.hmef.attribute.TestMAPIAttributes: void testBasics()>
[105] <org.apache.poi.hmef.attribute.TestMAPIAttributes: void testCommon()>
[106] <org.apache.poi.hmef.attribute.TestMAPIAttributes: void testCounts()>
[107] <org.apache.poi.hmef.attribute.TestMAPIAttributes: void testTyped()>
[108] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testBasics()>
[109] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testCommon()>
[110] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testCounts()>
[111] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testDate()>
[112] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testMAPI()>
[113] <org.apache.poi.hmef.attribute.TestTNEFAttributes: void testString()>
[114] <org.apache.poi.hpbf.TestHPBFDocument: void testBits()>
[115] <org.apache.poi.hpbf.TestHPBFDocument: void testOpen()>
[116] <org.apache.poi.hpbf.extractor.TestPublisherTextExtractor: void testContents()>
[117] <org.apache.poi.hpbf.extractor.TestPublisherTextExtractor: void testMultipleVersions()>
[118] <org.apache.poi.hpbf.extractor.TestPublisherTextExtractor: void testWithHyperlinks()>
[119] <org.apache.poi.hpbf.model.TestEscherParts: void testBasics()>
[120] <org.apache.poi.hpbf.model.TestEscherParts: void testComplex()>
[121] <org.apache.poi.hpbf.model.TestQuillContents: void testBasics()>
[122] <org.apache.poi.hpbf.model.TestQuillContents: void testComplexPLC()>
[123] <org.apache.poi.hpbf.model.TestQuillContents: void testHyperlinkDifferentVersions()>
[124] <org.apache.poi.hpbf.model.TestQuillContents: void testManyHyperlinks()>
[125] <org.apache.poi.hpbf.model.TestQuillContents: void testNoHyperlinks()>
[126] <org.apache.poi.hpbf.model.TestQuillContents: void testPLC()>
[127] <org.apache.poi.hpbf.model.TestQuillContents: void testSimpleHyperlink()>
[128] <org.apache.poi.hpbf.model.TestQuillContents: void testText()>
[129] <org.apache.poi.hpsf.TestVariantSupport: void test52337()>
[130] <org.apache.poi.hpsf.basic.TestHPSFBugs: void test48832()>
[131] <org.apache.poi.hpsf.basic.TestMetaDataIPI: void testThree()>
[132] <org.apache.poi.hpsf.basic.TestMetaDataIPI: void testTwo()>
[133] <org.apache.poi.hpsf.basic.TestMetaDataIPI: void testUnicode()>
[134] <org.apache.poi.hpsf.basic.TestReadAllFiles: void testReadAllFiles()>
[135] <org.apache.poi.hpsf.basic.TestWrite: void testCodepages()>
[136] <org.apache.poi.hpsf.basic.TestWrite: void testRecreate(java.io.File)>
[137] <org.apache.poi.hpsf.basic.TestWrite: void testUnicodeWrite8Bit()>
[138] <org.apache.poi.hpsf.basic.TestWrite: void testWriteTwoSections()>
[139] <org.apache.poi.hpsf.basic.TestWriteWellKnown: void testGetCustomerProperties()>
[140] <org.apache.poi.hpsf.basic.TestWriteWellKnown: void testWriteWellKnown()>
[141] <org.apache.poi.hpsf.extractor.TestHPSFPropertiesExtractor: void test42726()>
[142] <org.apache.poi.hpsf.extractor.TestHPSFPropertiesExtractor: void testConstructors()>
[143] <org.apache.poi.hpsf.extractor.TestHPSFPropertiesExtractor: void testCustomProperties()>
[144] <org.apache.poi.hpsf.extractor.TestHPSFPropertiesExtractor: void testNormalProperties()>
[145] <org.apache.poi.hpsf.extractor.TestHPSFPropertiesExtractor: void testNormalUnicodeProperties()>
[146] <org.apache.poi.hslf.TestEncryptedFile: void testLoadNonEncrypted()>
[147] <org.apache.poi.hslf.TestReWrite: void testWithMacroStreams()>
[148] <org.apache.poi.hslf.TestRecordCounts: void testNotesCount()>
[149] <org.apache.poi.hslf.TestRecordCounts: void testSlideListWithTextCount()>
[150] <org.apache.poi.hslf.extractor.TestCruddyExtractor: void testReadAsString()>
[151] <org.apache.poi.hslf.extractor.TestCruddyExtractor: void testReadAsVector()>
[152] <org.apache.poi.hslf.extractor.TestExtractor: void testDifferentPOIFS()>
[153] <org.apache.poi.hslf.extractor.TestExtractor: void testExtractFromEmbeded()>
[154] <org.apache.poi.hslf.extractor.TestExtractor: void testExtractFromOwnEmbeded()>
[155] <org.apache.poi.hslf.extractor.TestExtractor: void testHeaderFooter()>
[156] <org.apache.poi.hslf.extractor.TestExtractor: void testMasterText()>
[157] <org.apache.poi.hslf.extractor.TestExtractor: void testMissingCoreRecords()>
[158] <org.apache.poi.hslf.extractor.TestExtractor: void testReadBoth()>
[159] <org.apache.poi.hslf.extractor.TestExtractor: void testWithComments()>
[160] <org.apache.poi.hslf.model.TestBackground: void testBackgroundPicture()>
[161] <org.apache.poi.hslf.model.TestBackground: void testDefaults()>
[162] <org.apache.poi.hslf.model.TestBackground: void testReadBackground()>
[163] <org.apache.poi.hslf.model.TestFreeform: void testClosedPath()>
[164] <org.apache.poi.hslf.model.TestFreeform: void testLine()>
[165] <org.apache.poi.hslf.model.TestFreeform: void testRectangle()>
[166] <org.apache.poi.hslf.model.TestHeadersFooters: void testCreateNotesFooters()>
[167] <org.apache.poi.hslf.model.TestHeadersFooters: void testCreateSlideFooters()>
[168] <org.apache.poi.hslf.model.TestHeadersFooters: void testRead()>
[169] <org.apache.poi.hslf.model.TestHeadersFooters: void testRead2007()>
[170] <org.apache.poi.hslf.model.TestHeadersFooters: void testReadNoHeadersFooters()>
[171] <org.apache.poi.hslf.model.TestHyperlink: void testTextRunHyperlinks()>
[172] <org.apache.poi.hslf.model.TestImagePainter: void testImagePainter()>
[173] <org.apache.poi.hslf.model.TestMovieShape: void testCreate()>
[174] <org.apache.poi.hslf.model.TestOleEmbedding: void testOLEShape()>
[175] <org.apache.poi.hslf.model.TestOleEmbedding: void testOleEmbedding2003()>
[176] <org.apache.poi.hslf.model.TestPPGraphics2D: void testGraphics()>
[177] <org.apache.poi.hslf.model.TestPicture: void test46122()>
[178] <org.apache.poi.hslf.model.TestPicture: void testMacImages()>
[179] <org.apache.poi.hslf.model.TestSetBoldItalic: void testTextBoxWrite()>
[180] <org.apache.poi.hslf.model.TestShapes: void testEmptyTextBox()>
[181] <org.apache.poi.hslf.model.TestShapes: void testGraphics()>
[182] <org.apache.poi.hslf.model.TestShapes: void testLineColor()>
[183] <org.apache.poi.hslf.model.TestShapes: void testShapeGroup()>
[184] <org.apache.poi.hslf.model.TestShapes: void testShapeId()>
[185] <org.apache.poi.hslf.model.TestShapes: void testTextBoxRead()>
[186] <org.apache.poi.hslf.model.TestShapes: void testTextBoxWriteBytes()>
[187] <org.apache.poi.hslf.model.TestSlideChangeNotes: void testSetToNone()>
[188] <org.apache.poi.hslf.model.TestSlideChangeNotes: void testSetToSomething()>
[189] <org.apache.poi.hslf.model.TestSlideMaster: void testIndentation()>
[190] <org.apache.poi.hslf.model.TestSlideMaster: void testMasterAttributes()>
[191] <org.apache.poi.hslf.model.TestSlideMaster: void testSlideMaster()>
[192] <org.apache.poi.hslf.model.TestSlideMaster: void testTitleMaster()>
[193] <org.apache.poi.hslf.model.TestSlideMaster: void testTitleMasterTextAttributes()>
[194] <org.apache.poi.hslf.model.TestSlides: void testAddSlides1()>
[195] <org.apache.poi.hslf.model.TestSlides: void testAddSlides2()>
[196] <org.apache.poi.hslf.model.TestSlides: void testAddSlides2to3()>
[197] <org.apache.poi.hslf.model.TestSlides: void testAddSlides3()>
[198] <org.apache.poi.hslf.model.TestTable: void test45889()>
[199] <org.apache.poi.hslf.model.TestTable: void testIllegalCOnstruction()>
[200] <org.apache.poi.hslf.model.TestTable: void testShapeFactory()>
[201] <org.apache.poi.hslf.model.TestTextRun: void test48916()>
[202] <org.apache.poi.hslf.model.TestTextRun: void test52244()>
[203] <org.apache.poi.hslf.model.TestTextRun: void testAddTextRun()>
[204] <org.apache.poi.hslf.model.TestTextRun: void testAdvancedSetText()>
[205] <org.apache.poi.hslf.model.TestTextRun: void testBug41015()>
[206] <org.apache.poi.hslf.model.TestTextRun: void testChangeTextInRichTextRun()>
[207] <org.apache.poi.hslf.model.TestTextRun: void testChangeTextInRichTextRunNonRich()>
[208] <org.apache.poi.hslf.model.TestTextRun: void testGetRichText()>
[209] <org.apache.poi.hslf.model.TestTextRun: void testGetRichTextNonRich()>
[210] <org.apache.poi.hslf.model.TestTextRun: void testGetText()>
[211] <org.apache.poi.hslf.model.TestTextRun: void testSetText()>
[212] <org.apache.poi.hslf.model.TestTextRun: void testSetTextWhereNotRich()>
[213] <org.apache.poi.hslf.model.TestTextRun: void testSetTextWhereRich()>
[214] <org.apache.poi.hslf.model.TestTextRunReWrite: void testWritesOutTheSameNonRich()>
[215] <org.apache.poi.hslf.model.TestTextRunReWrite: void testWritesOutTheSameRich()>
[216] <org.apache.poi.hslf.model.TestTextShape: void test52599()>
[217] <org.apache.poi.hslf.model.TestTextShape: void testCreateAutoShape()>
[218] <org.apache.poi.hslf.model.TestTextShape: void testCreateTextBox()>
[219] <org.apache.poi.hslf.model.TestTextShape: void testRead()>
[220] <org.apache.poi.hslf.model.TestTextShape: void testReadWrite()>
[221] <org.apache.poi.hslf.record.TestAnimationInfoAtom: void testNewRecord()>
[222] <org.apache.poi.hslf.record.TestAnimationInfoAtom: void testRead()>
[223] <org.apache.poi.hslf.record.TestAnimationInfoAtom: void testWrite()>
[224] <org.apache.poi.hslf.record.TestCString: void testCount()>
[225] <org.apache.poi.hslf.record.TestCString: void testRecordType()>
[226] <org.apache.poi.hslf.record.TestCString: void testText()>
[227] <org.apache.poi.hslf.record.TestColorSchemeAtom: void testFromRGB()>
[228] <org.apache.poi.hslf.record.TestColorSchemeAtom: void testRGBs()>
[229] <org.apache.poi.hslf.record.TestColorSchemeAtom: void testRecordType()>
[230] <org.apache.poi.hslf.record.TestColorSchemeAtom: void testToRGB()>
[231] <org.apache.poi.hslf.record.TestColorSchemeAtom: void testWrite()>
[232] <org.apache.poi.hslf.record.TestComment2000: void testAuthor()>
[233] <org.apache.poi.hslf.record.TestComment2000: void testBug44770()>
[234] <org.apache.poi.hslf.record.TestComment2000: void testChange()>
[235] <org.apache.poi.hslf.record.TestComment2000: void testCommentAtom()>
[236] <org.apache.poi.hslf.record.TestComment2000: void testCommentAtomB()>
[237] <org.apache.poi.hslf.record.TestComment2000: void testRecordType()>
[238] <org.apache.poi.hslf.record.TestComment2000: void testText()>
[239] <org.apache.poi.hslf.record.TestComment2000: void testWrite()>
[240] <org.apache.poi.hslf.record.TestComment2000Atom: void testChange()>
[241] <org.apache.poi.hslf.record.TestComment2000Atom: void testCreate()>
[242] <org.apache.poi.hslf.record.TestComment2000Atom: void testGetDate()>
[243] <org.apache.poi.hslf.record.TestComment2000Atom: void testGetNums()>
[244] <org.apache.poi.hslf.record.TestComment2000Atom: void testGetPos()>
[245] <org.apache.poi.hslf.record.TestComment2000Atom: void testRecordType()>
[246] <org.apache.poi.hslf.record.TestComment2000Atom: void testWrite()>
[247] <org.apache.poi.hslf.record.TestCurrentUserAtom: void testReadEnc()>
[248] <org.apache.poi.hslf.record.TestCurrentUserAtom: void testWriteNormal()>
[249] <org.apache.poi.hslf.record.TestDocument: void testChildRecords()>
[250] <org.apache.poi.hslf.record.TestDocument: void testEnvironment()>
[251] <org.apache.poi.hslf.record.TestDocument: void testRecordType()>
[252] <org.apache.poi.hslf.record.TestDocumentAtom: void testBooleans()>
[253] <org.apache.poi.hslf.record.TestDocumentAtom: void testMasterPersist()>
[254] <org.apache.poi.hslf.record.TestDocumentAtom: void testRecordType()>
[255] <org.apache.poi.hslf.record.TestDocumentAtom: void testSlideDetails()>
[256] <org.apache.poi.hslf.record.TestDocumentAtom: void testWrite()>
[257] <org.apache.poi.hslf.record.TestDocumentEncryptionAtom: void testEncryptionTypeName()>
[258] <org.apache.poi.hslf.record.TestDocumentEncryptionAtom: void testRecordType()>
[259] <org.apache.poi.hslf.record.TestExControl: void testNewRecord()>
[260] <org.apache.poi.hslf.record.TestExControl: void testRead()>
[261] <org.apache.poi.hslf.record.TestExControl: void testWrite()>
[262] <org.apache.poi.hslf.record.TestExHyperlink: void testDetails()>
[263] <org.apache.poi.hslf.record.TestExHyperlink: void testLinkURL()>
[264] <org.apache.poi.hslf.record.TestExHyperlink: void testNumber()>
[265] <org.apache.poi.hslf.record.TestExHyperlink: void testRealFile()>
[266] <org.apache.poi.hslf.record.TestExHyperlink: void testRecordType()>
[267] <org.apache.poi.hslf.record.TestExHyperlink: void testWrite()>
[268] <org.apache.poi.hslf.record.TestExHyperlinkAtom: void testChange()>
[269] <org.apache.poi.hslf.record.TestExHyperlinkAtom: void testCreate()>
[270] <org.apache.poi.hslf.record.TestExHyperlinkAtom: void testGetNumber()>
[271] <org.apache.poi.hslf.record.TestExHyperlinkAtom: void testRecordType()>
[272] <org.apache.poi.hslf.record.TestExHyperlinkAtom: void testWrite()>
[273] <org.apache.poi.hslf.record.TestExMediaAtom: void testFlags()>
[274] <org.apache.poi.hslf.record.TestExMediaAtom: void testNewRecord()>
[275] <org.apache.poi.hslf.record.TestExMediaAtom: void testRead()>
[276] <org.apache.poi.hslf.record.TestExMediaAtom: void testWrite()>
[277] <org.apache.poi.hslf.record.TestExObjList: void testRealFile()>
[278] <org.apache.poi.hslf.record.TestExObjListAtom: void testChange()>
[279] <org.apache.poi.hslf.record.TestExObjListAtom: void testCreate()>
[280] <org.apache.poi.hslf.record.TestExObjListAtom: void testGetSeed()>
[281] <org.apache.poi.hslf.record.TestExObjListAtom: void testRecordType()>
[282] <org.apache.poi.hslf.record.TestExObjListAtom: void testWrite()>
[283] <org.apache.poi.hslf.record.TestExOleObjAtom: void testNewRecord()>
[284] <org.apache.poi.hslf.record.TestExOleObjAtom: void testRead()>
[285] <org.apache.poi.hslf.record.TestExOleObjAtom: void testWrite()>
[286] <org.apache.poi.hslf.record.TestExOleObjStg: void testNewRecord()>
[287] <org.apache.poi.hslf.record.TestExOleObjStg: void testRead()>
[288] <org.apache.poi.hslf.record.TestExOleObjStg: void testWrite()>
[289] <org.apache.poi.hslf.record.TestExVideoContainer: void testNewRecord()>
[290] <org.apache.poi.hslf.record.TestExVideoContainer: void testRead()>
[291] <org.apache.poi.hslf.record.TestExVideoContainer: void testWrite()>
[292] <org.apache.poi.hslf.record.TestFontCollection: void testAddFont()>
[293] <org.apache.poi.hslf.record.TestFontCollection: void testFonts()>
[294] <org.apache.poi.hslf.record.TestFontCollection: void testWrite()>
[295] <org.apache.poi.hslf.record.TestHeadersFootersAtom: void testFlags()>
[296] <org.apache.poi.hslf.record.TestHeadersFootersAtom: void testNewRecord()>
[297] <org.apache.poi.hslf.record.TestHeadersFootersAtom: void testRead()>
[298] <org.apache.poi.hslf.record.TestHeadersFootersAtom: void testWrite()>
[299] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testNewNotesHeadersFootersContainer()>
[300] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testNewSlideHeadersFootersContainer()>
[301] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testReadNotesHeadersFootersContainer()>
[302] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testReadSlideHeadersFootersContainer()>
[303] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testWriteNotesHeadersFootersContainer()>
[304] <org.apache.poi.hslf.record.TestHeadersFootersContainer: void testWriteSlideHeadersFootersContainer()>
[305] <org.apache.poi.hslf.record.TestInteractiveInfo: void testCreate()>
[306] <org.apache.poi.hslf.record.TestInteractiveInfo: void testGetChildDetails()>
[307] <org.apache.poi.hslf.record.TestInteractiveInfo: void testRecordType()>
[308] <org.apache.poi.hslf.record.TestInteractiveInfo: void testWrite()>
[309] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testChange()>
[310] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testCreate()>
[311] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testGetNumber()>
[312] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testGetRest()>
[313] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testRecordType()>
[314] <org.apache.poi.hslf.record.TestInteractiveInfoAtom: void testWrite()>
[315] <org.apache.poi.hslf.record.TestNotesAtom: void testFlags()>
[316] <org.apache.poi.hslf.record.TestNotesAtom: void testRecordType()>
[317] <org.apache.poi.hslf.record.TestNotesAtom: void testWrite()>
[318] <org.apache.poi.hslf.record.TestRecordContainer: void testAddChildAfter()>
[319] <org.apache.poi.hslf.record.TestRecordContainer: void testAddChildBefore()>
[320] <org.apache.poi.hslf.record.TestRecordContainer: void testAppendChildRecord()>
[321] <org.apache.poi.hslf.record.TestRecordContainer: void testIsAnAtom()>
[322] <org.apache.poi.hslf.record.TestRecordContainer: void testRemove()>
[323] <org.apache.poi.hslf.record.TestRecordTypes: void testEscherClassLookups()>
[324] <org.apache.poi.hslf.record.TestRecordTypes: void testEscherNameLookups()>
[325] <org.apache.poi.hslf.record.TestRecordTypes: void testPPTNameLookups()>
[326] <org.apache.poi.hslf.record.TestSlideAtom: void testFlags()>
[327] <org.apache.poi.hslf.record.TestSlideAtom: void testRecordType()>
[328] <org.apache.poi.hslf.record.TestSlideAtom: void testSSlideLayoutAtom()>
[329] <org.apache.poi.hslf.record.TestSlideAtom: void testWrite()>
[330] <org.apache.poi.hslf.record.TestSlidePersistAtom: void testRecordType()>
[331] <org.apache.poi.hslf.record.TestSlidePersistAtom: void testWrite()>
[332] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testBug40143()>
[333] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testCharacterPropOrdering()>
[334] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testCharacterStyleCounts()>
[335] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testCharacterStyleLengths()>
[336] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testCreateAFromScatch()>
[337] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testCreateBFromScatch()>
[338] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testFindAddTextProp()>
[339] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testParagraphProps()>
[340] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testParagraphStyleCounts()>
[341] <org.apache.poi.hslf.record.TestStyleTextPropAtom: void testRecordType()>
[342] <org.apache.poi.hslf.record.TestTextBytesAtom: void testChangeText()>
[343] <org.apache.poi.hslf.record.TestTextBytesAtom: void testRecordType()>
[344] <org.apache.poi.hslf.record.TestTextBytesAtom: void testTextA()>
[345] <org.apache.poi.hslf.record.TestTextBytesAtom: void testTextB()>
[346] <org.apache.poi.hslf.record.TestTextBytesAtom: void testWrite()>
[347] <org.apache.poi.hslf.record.TestTextCharsAtom: void testChangeText()>
[348] <org.apache.poi.hslf.record.TestTextCharsAtom: void testCreateNew()>
[349] <org.apache.poi.hslf.record.TestTextCharsAtom: void testRecordType()>
[350] <org.apache.poi.hslf.record.TestTextCharsAtom: void testTextA()>
[351] <org.apache.poi.hslf.record.TestTextCharsAtom: void testTextB()>
[352] <org.apache.poi.hslf.record.TestTextCharsAtom: void testWrite()>
[353] <org.apache.poi.hslf.record.TestTextHeaderAtom: void testRecordType()>
[354] <org.apache.poi.hslf.record.TestTextHeaderAtom: void testTypes()>
[355] <org.apache.poi.hslf.record.TestTextHeaderAtom: void testWrite()>
[356] <org.apache.poi.hslf.record.TestTextRulerAtom: void testRead2()>
[357] <org.apache.poi.hslf.record.TestTextRulerAtom: void testWriteRuler()>
[358] <org.apache.poi.hslf.record.TestTextSpecInfoAtom: void testRead()>
[359] <org.apache.poi.hslf.record.TestTextSpecInfoAtom: void testReset()>
[360] <org.apache.poi.hslf.record.TestTextSpecInfoAtom: void testWrite()>
[361] <org.apache.poi.hslf.record.TestTxInteractiveInfoAtom: void testChange()>
[362] <org.apache.poi.hslf.record.TestTxInteractiveInfoAtom: void testCreate()>
[363] <org.apache.poi.hslf.record.TestTxInteractiveInfoAtom: void testRead()>
[364] <org.apache.poi.hslf.record.TestTxInteractiveInfoAtom: void testWrite()>
[365] <org.apache.poi.hslf.record.TestTxMasterStyleAtom: void testDefaultStyles()>
[366] <org.apache.poi.hslf.record.TestUserEditAtom: void testFlags()>
[367] <org.apache.poi.hslf.record.TestUserEditAtom: void testRecordType()>
[368] <org.apache.poi.hslf.record.TestUserEditAtom: void testWrite()>
[369] <org.apache.poi.hslf.usermodel.TestAddingSlides: void test47261()>
[370] <org.apache.poi.hslf.usermodel.TestAddingSlides: void testAddSlideToEmpty()>
[371] <org.apache.poi.hslf.usermodel.TestAddingSlides: void testAddSlideToExisting()>
[372] <org.apache.poi.hslf.usermodel.TestAddingSlides: void testAddSlideToExisting2()>
[373] <org.apache.poi.hslf.usermodel.TestAddingSlides: void testRemoving()>
[374] <org.apache.poi.hslf.usermodel.TestBugs: void test38256()>
[375] <org.apache.poi.hslf.usermodel.TestBugs: void test41071()>
[376] <org.apache.poi.hslf.usermodel.TestBugs: void test41381()>
[377] <org.apache.poi.hslf.usermodel.TestBugs: void test41384()>
[378] <org.apache.poi.hslf.usermodel.TestBugs: void test41711()>
[379] <org.apache.poi.hslf.usermodel.TestBugs: void test42474_1()>
[380] <org.apache.poi.hslf.usermodel.TestBugs: void test42474_2()>
[381] <org.apache.poi.hslf.usermodel.TestBugs: void test42485()>
[382] <org.apache.poi.hslf.usermodel.TestBugs: void test43781()>
[383] <org.apache.poi.hslf.usermodel.TestBugs: void test44296()>
[384] <org.apache.poi.hslf.usermodel.TestCounts: void testNotesCount()>
[385] <org.apache.poi.hslf.usermodel.TestCounts: void testSheetsCount()>
[386] <org.apache.poi.hslf.usermodel.TestMostRecentRecords: void testCorrectRecords()>
[387] <org.apache.poi.hslf.usermodel.TestMostRecentRecords: void testCount()>
[388] <org.apache.poi.hslf.usermodel.TestMostRecentRecords: void testRightRecordTypes()>
[389] <org.apache.poi.hslf.usermodel.TestNotesText: void testNotesOne()>
[390] <org.apache.poi.hslf.usermodel.TestNotesText: void testNotesTwo()>
[391] <org.apache.poi.hslf.usermodel.TestPictures: void testDIB()>
[392] <org.apache.poi.hslf.usermodel.TestPictures: void testEMF()>
[393] <org.apache.poi.hslf.usermodel.TestPictures: void testGetPictureName()>
[394] <org.apache.poi.hslf.usermodel.TestPictures: void testJPEG()>
[395] <org.apache.poi.hslf.usermodel.TestPictures: void testPICT()>
[396] <org.apache.poi.hslf.usermodel.TestPictures: void testPNG()>
[397] <org.apache.poi.hslf.usermodel.TestPictures: void testReadPictures()>
[398] <org.apache.poi.hslf.usermodel.TestPictures: void testSetPictureName()>
[399] <org.apache.poi.hslf.usermodel.TestPictures: void testWMF()>
[400] <org.apache.poi.hslf.usermodel.TestPictures: void testZeroPictureLength()>
[401] <org.apache.poi.hslf.usermodel.TestPictures: void testZeroPictureType()>
[402] <org.apache.poi.hslf.usermodel.TestReOrderingSlides: void testReOrder1()>
[403] <org.apache.poi.hslf.usermodel.TestReOrderingSlides: void testReOrder2()>
[404] <org.apache.poi.hslf.usermodel.TestReOrderingSlides: void testReOrder2swap()>
[405] <org.apache.poi.hslf.usermodel.TestReOrderingSlides: void testReOrder3()>
[406] <org.apache.poi.hslf.usermodel.TestReOrderingSlides: void testReOrder3swap()>
[407] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testAddText()>
[408] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testBoldNonRich()>
[409] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testBoldRich()>
[410] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testChangeWriteRead()>
[411] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testFontSize()>
[412] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testParagraphStylesShorterTheCharStyles()>
[413] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testReadParagraphStyles()>
[414] <org.apache.poi.hslf.usermodel.TestRichTextRun: void testSetParagraphStyles()>
[415] <org.apache.poi.hslf.usermodel.TestSheetText: void testSheetOne()>
[416] <org.apache.poi.hslf.usermodel.TestSheetText: void testSheetTwo()>
[417] <org.apache.poi.hslf.usermodel.TestSheetText: void testWithShortTextPropData()>
[418] <org.apache.poi.hslf.usermodel.TestSlideOrdering: void testComplexCase()>
[419] <org.apache.poi.hslf.usermodel.TestSlideOrdering: void testSimpleCase()>
[420] <org.apache.poi.hslf.util.TestSystemTimeUtils: void testGetDateA()>
[421] <org.apache.poi.hslf.util.TestSystemTimeUtils: void testGetDateB()>
[422] <org.apache.poi.hslf.util.TestSystemTimeUtils: void testWriteDateA()>
[423] <org.apache.poi.hslf.util.TestSystemTimeUtils: void testWriteDateB()>
[424] <org.apache.poi.hsmf.TestBasics: void test7BitDetection()>
[425] <org.apache.poi.hsmf.TestBasics: void testAttachments()>
[426] <org.apache.poi.hsmf.TestBasics: void testHeaders()>
[427] <org.apache.poi.hsmf.TestBasics: void testMissingAddressChunk()>
[428] <org.apache.poi.hsmf.TestBasics: void testMissingChunks()>
[429] <org.apache.poi.hsmf.TestBasics: void testSubject()>
[430] <org.apache.poi.hsmf.TestBlankFileRead: void testReadBody()>
[431] <org.apache.poi.hsmf.TestBlankFileRead: void testReadConversationTopic()>
[432] <org.apache.poi.hsmf.TestBlankFileRead: void testReadDisplayBCC()>
[433] <org.apache.poi.hsmf.TestBlankFileRead: void testReadDisplayCC()>
[434] <org.apache.poi.hsmf.TestBlankFileRead: void testReadDisplayFrom()>
[435] <org.apache.poi.hsmf.TestBlankFileRead: void testReadDisplayTo()>
[436] <org.apache.poi.hsmf.TestBlankFileRead: void testReadSubject()>
[437] <org.apache.poi.hsmf.TestFileWithAttachmentsRead: void testReadAttachments()>
[438] <org.apache.poi.hsmf.TestFileWithAttachmentsRead: void testReadMsgAttachments()>
[439] <org.apache.poi.hsmf.TestFileWithAttachmentsRead: void testRetrieveAttachments()>
[440] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadBody()>
[441] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadConversationTopic()>
[442] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadDisplayBCC()>
[443] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadDisplayCC()>
[444] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadDisplayFrom()>
[445] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadDisplayTo()>
[446] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadMessageClass()>
[447] <org.apache.poi.hsmf.TestOutlook30FileRead: void testReadSubject()>
[448] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadBody()>
[449] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadConversationTopic()>
[450] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadDisplayBCC()>
[451] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadDisplayCC()>
[452] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadDisplayFrom()>
[453] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadDisplayTo()>
[454] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadMessageClass()>
[455] <org.apache.poi.hsmf.TestSimpleFileRead: void testReadSubject()>
[456] <org.apache.poi.hsmf.datatypes.TestChunkData: void testDisplayBCCChunk()>
[457] <org.apache.poi.hsmf.datatypes.TestChunkData: void testDisplayCCChunk()>
[458] <org.apache.poi.hsmf.datatypes.TestChunkData: void testDisplayToChunk()>
[459] <org.apache.poi.hsmf.datatypes.TestChunkData: void testSubjectChunk()>
[460] <org.apache.poi.hsmf.datatypes.TestChunkData: void testTextBodyChunk()>
[461] <org.apache.poi.hsmf.datatypes.TestMAPIProperty: void testCustom()>
[462] <org.apache.poi.hsmf.datatypes.TestMAPIProperty: void testGetAll()>
[463] <org.apache.poi.hsmf.datatypes.TestSorters: void testAttachmentChunksSorter()>
[464] <org.apache.poi.hsmf.datatypes.TestSorters: void testRecipientChunksSorter()>
[465] <org.apache.poi.hsmf.datatypes.TestTypes: void testName()>
[466] <org.apache.poi.hsmf.datatypes.TestTypes: void testTypeFormatting()>
[467] <org.apache.poi.hsmf.datatypes.TestTypes: void testTypeIds()>
[468] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testConstructors()>
[469] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testQuick()>
[470] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testReceivedWithMultipleRecipients()>
[471] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testSentWithMulipleRecipients()>
[472] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testSimple()>
[473] <org.apache.poi.hsmf.extractor.TestOutlookTextExtractor: void testWithAttachments()>
[474] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testFindsAttachments()>
[475] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testFindsCore()>
[476] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testFindsMultipleRecipients()>
[477] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testFindsNameId()>
[478] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testFindsRecips()>
[479] <org.apache.poi.hsmf.parsers.TestPOIFSChunkParser: void testOlk10SideProps()>
[480] <org.apache.poi.hssf.eventmodel.TestAbortableListener: void testAbortStops()>
[481] <org.apache.poi.hssf.eventmodel.TestAbortableListener: void testAbortingBasics()>
[482] <org.apache.poi.hssf.eventmodel.TestEventRecordFactory: void testContinuedUnknownRecord()>
[483] <org.apache.poi.hssf.eventmodel.TestEventRecordFactory: void testProcessRecords()>
[484] <org.apache.poi.hssf.eventusermodel.TestEventWorkbookBuilder: void testContents()>
[485] <org.apache.poi.hssf.eventusermodel.TestEventWorkbookBuilder: void testFormulas()>
[486] <org.apache.poi.hssf.eventusermodel.TestEventWorkbookBuilder: void testGetStubWorkbooks()>
[487] <org.apache.poi.hssf.eventusermodel.TestFormatTrackingHSSFListener: void testFormats()>
[488] <org.apache.poi.hssf.eventusermodel.TestHSSFEventFactory: void testUnknownContinueRecords()>
[489] <org.apache.poi.hssf.eventusermodel.TestHSSFEventFactory: void testWithCrazyContinueRecords()>
[490] <org.apache.poi.hssf.eventusermodel.TestHSSFEventFactory: void testWithMissingRecords()>
[491] <org.apache.poi.hssf.eventusermodel.TestMissingRecordAwareHSSFListener: void testEndOfRowRecords()>
[492] <org.apache.poi.hssf.eventusermodel.TestMissingRecordAwareHSSFListener: void testMissingCellRecords()>
[493] <org.apache.poi.hssf.eventusermodel.TestMissingRecordAwareHSSFListener: void testNoExtraNewLines()>
[494] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testEventExtractor()>
[495] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testFormatting()>
[496] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testNumericFormula()>
[497] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testPassword()>
[498] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testSimple()>
[499] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testStringConcat()>
[500] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testStringFormula()>
[501] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testWithBlank()>
[502] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testWithComments()>
[503] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testWithEmbeded()>
[504] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testWithEmbededInOwn()>
[505] <org.apache.poi.hssf.extractor.TestExcelExtractor: void testwithContinueRecords()>
[506] <org.apache.poi.hssf.model.TestDrawingAggregate: void test45129()>
[507] <org.apache.poi.hssf.model.TestDrawingAggregate: void testFileWithCharts()>
[508] <org.apache.poi.hssf.model.TestDrawingAggregate: void testFileWithPictures()>
[509] <org.apache.poi.hssf.model.TestDrawingAggregate: void testFileWithTextbox()>
[510] <org.apache.poi.hssf.model.TestDrawingAggregate: void testSerializeDrawingBigger8k()>
[511] <org.apache.poi.hssf.model.TestDrawingAggregate: void testSerializeDrawingBigger8k_noAggregation()>
[512] <org.apache.poi.hssf.model.TestDrawingAggregate: void testSerializeDrawingWithComments()>
[513] <org.apache.poi.hssf.model.TestDrawingAggregate: void testSolverContainerMustBeSavedDuringSerialization()>
[514] <org.apache.poi.hssf.model.TestDrawingAggregate: void testUnhandledContinue()>
[515] <org.apache.poi.hssf.model.TestDrawingAggregate: void testUnhandledContinue2()>
[516] <org.apache.poi.hssf.model.TestDrawingManager2: void testAllocateShapeId()>
[517] <org.apache.poi.hssf.model.TestDrawingManager2: void testCreateDgRecord()>
[518] <org.apache.poi.hssf.model.TestDrawingManager: void testAllocateShapeId()>
[519] <org.apache.poi.hssf.model.TestDrawingManager: void testCreateDgRecord()>
[520] <org.apache.poi.hssf.model.TestDrawingManager: void testDrawingGroupExists()>
[521] <org.apache.poi.hssf.model.TestDrawingManager: void testFindFreeSPIDBlock()>
[522] <org.apache.poi.hssf.model.TestDrawingManager: void testFindNewDrawingGroupId()>
[523] <org.apache.poi.hssf.model.TestDrawingShapes: void testAllocateNewIds()>
[524] <org.apache.poi.hssf.model.TestDrawingShapes: void testClearShapesForPatriarch()>
[525] <org.apache.poi.hssf.model.TestDrawingShapes: void testCorrectOrderInOptRecord()>
[526] <org.apache.poi.hssf.model.TestDrawingShapes: void testDefaultPictureSettings()>
[527] <org.apache.poi.hssf.model.TestDrawingShapes: void testDefaultSettingsWithEmptyContainer()>
[528] <org.apache.poi.hssf.model.TestDrawingShapes: void testDgRecordNumShapes()>
[529] <org.apache.poi.hssf.model.TestDrawingShapes: void testDrawingGroups()>
[530] <org.apache.poi.hssf.model.TestDrawingShapes: void testOpt()>
[531] <org.apache.poi.hssf.model.TestDrawingShapes: void testReadExistingImage()>
[532] <org.apache.poi.hssf.model.TestDrawingShapes: void testReadExistingRectangle()>
[533] <org.apache.poi.hssf.model.TestDrawingShapes: void testReadWriteRectangle()>
[534] <org.apache.poi.hssf.model.TestDrawingShapes: void testRemoveShapes()>
[535] <org.apache.poi.hssf.model.TestDrawingShapes: void testRotation()>
[536] <org.apache.poi.hssf.model.TestDrawingShapes: void testShapeContainerImplementsIterable()>
[537] <org.apache.poi.hssf.model.TestDrawingShapes: void testTextForSimpleShape()>
[538] <org.apache.poi.hssf.model.TestEscherRecordFactory: void testDgContainerMustBeRootOfHSSFSheetEscherRecords()>
[539] <org.apache.poi.hssf.model.TestFormulaParser: void testBackSlashInNames()>
[540] <org.apache.poi.hssf.model.TestFormulaParser: void testBooleanNamedSheet()>
[541] <org.apache.poi.hssf.model.TestFormulaParser: void testComplexExplicitRangeEncodings()>
[542] <org.apache.poi.hssf.model.TestFormulaParser: void testExplicitRangeWithTwoSheetNames()>
[543] <org.apache.poi.hssf.model.TestFormulaParser: void testFormulaWithSpace2()>
[544] <org.apache.poi.hssf.model.TestFormulaParser: void testFormulaWithSpaceNRef()>
[545] <org.apache.poi.hssf.model.TestFormulaParser: void testFormulaWithString()>
[546] <org.apache.poi.hssf.model.TestFormulaParser: void testFuncPtgSelection()>
[547] <org.apache.poi.hssf.model.TestFormulaParser: void testLeadingSpaceInString()>
[548] <org.apache.poi.hssf.model.TestFormulaParser: void testMacroFunction()>
[549] <org.apache.poi.hssf.model.TestFormulaParser: void testNamedRangeThatLooksLikeCell()>
[550] <org.apache.poi.hssf.model.TestFormulaParser: void testNamesWithUnderscore()>
[551] <org.apache.poi.hssf.model.TestFormulaParser: void testNonAlphaFormula()>
[552] <org.apache.poi.hssf.model.TestFormulaParser: void testNumbers()>
[553] <org.apache.poi.hssf.model.TestFormulaParser: void testParseAreaRefHighRow_bug45358()>
[554] <org.apache.poi.hssf.model.TestFormulaParser: void testParseArrayNegativeElement()>
[555] <org.apache.poi.hssf.model.TestFormulaParser: void testParseErrorTypeFunction()>
[556] <org.apache.poi.hssf.model.TestFormulaParser: void testParseExternalWorkbookReference()>
[557] <org.apache.poi.hssf.model.TestFormulaParser: void testParseNumber()>
[558] <org.apache.poi.hssf.model.TestFormulaParser: void testParseStringLiterals_bug28754()>
[559] <org.apache.poi.hssf.model.TestFormulaParser: void testParseSumIfSum()>
[560] <org.apache.poi.hssf.model.TestFormulaParser: void testRangeOperator()>
[561] <org.apache.poi.hssf.model.TestFormulaParser: void testRange_bug46643()>
[562] <org.apache.poi.hssf.model.TestFormulaParser: void testRanges()>
[563] <org.apache.poi.hssf.model.TestFormulaParser: void testSetFormulaWithRowBeyond32768_Bug44539()>
[564] <org.apache.poi.hssf.model.TestFormulaParser: void testSpaceAtStartOfFormula()>
[565] <org.apache.poi.hssf.model.TestFormulaParser: void testSumIf()>
[566] <org.apache.poi.hssf.model.TestFormulaParser: void testTRUE()>
[567] <org.apache.poi.hssf.model.TestFormulaParser: void testToFormulaStringZeroArgFunction()>
[568] <org.apache.poi.hssf.model.TestFormulaParser: void testTooFewOperandArgs()>
[569] <org.apache.poi.hssf.model.TestFormulaParser: void testUnion()>
[570] <org.apache.poi.hssf.model.TestFormulaParserEval: void testEvaluateFormulaWithRowBeyond32768_Bug44539()>
[571] <org.apache.poi.hssf.model.TestFormulaParserIf: void testEmbeddedIf()>
[572] <org.apache.poi.hssf.model.TestFormulaParserIf: void testIfSingleCondition()>
[573] <org.apache.poi.hssf.model.TestFormulaParserIf: void testNestedFunctionIf()>
[574] <org.apache.poi.hssf.model.TestFormulaParserIf: void testParenIf()>
[575] <org.apache.poi.hssf.model.TestFormulaParserIf: void testSimpleLogical()>
[576] <org.apache.poi.hssf.model.TestFormulaParserIf: void testYN()>
[577] <org.apache.poi.hssf.model.TestHSSFAnchor: void testChildAnchorFromEscher()>
[578] <org.apache.poi.hssf.model.TestHSSFAnchor: void testChildAnchorFromScratch()>
[579] <org.apache.poi.hssf.model.TestHSSFAnchor: void testClientAnchorFromEscher()>
[580] <org.apache.poi.hssf.model.TestHSSFAnchor: void testClientAnchorFromScratch()>
[581] <org.apache.poi.hssf.model.TestHSSFAnchor: void testCreateChildAnchorFromContainer()>
[582] <org.apache.poi.hssf.model.TestHSSFAnchor: void testCreateClientAnchorFromContainer()>
[583] <org.apache.poi.hssf.model.TestHSSFAnchor: void testDefaultValues()>
[584] <org.apache.poi.hssf.model.TestHSSFAnchor: void testEqualsIsReflexiveIsSymmetric()>
[585] <org.apache.poi.hssf.model.TestHSSFAnchor: void testEqualsToSelf()>
[586] <org.apache.poi.hssf.model.TestHSSFAnchor: void testFlipped()>
[587] <org.apache.poi.hssf.model.TestHSSFAnchor: void testNullReferenceIsFalse()>
[588] <org.apache.poi.hssf.model.TestHSSFAnchor: void testShapeEscherMustHaveAnchorRecord()>
[589] <org.apache.poi.hssf.model.TestLinkTable: void testExtraSheetRefs_bug45978()>
[590] <org.apache.poi.hssf.model.TestLinkTable: void testLinkTableWithoutExternalBookRecord_bug45046()>
[591] <org.apache.poi.hssf.model.TestLinkTable: void testMissingExternSheetRecord_bug47001b()>
[592] <org.apache.poi.hssf.model.TestLinkTable: void testMultipleExternSheetRecords_bug45698()>
[593] <org.apache.poi.hssf.model.TestOperandClassTransformer: void testComplexIRR_bug45041()>
[594] <org.apache.poi.hssf.model.TestRowBlocksReader: void testAbnormalPivotTableRecords_bug46280()>
[595] <org.apache.poi.hssf.model.TestShapes: void testShapeId()>
[596] <org.apache.poi.hssf.model.TestSheet: void testAddCondFormatAfterDataValidation_bug46547()>
[597] <org.apache.poi.hssf.model.TestSheet: void testAddMergedRegion()>
[598] <org.apache.poi.hssf.model.TestSheet: void testCloneMulBlank_bug46776()>
[599] <org.apache.poi.hssf.model.TestSheet: void testGutsRecord_bug45640()>
[600] <org.apache.poi.hssf.model.TestSheet: void testMisplacedMergedCellsRecords_bug45699()>
[601] <org.apache.poi.hssf.model.TestSheet: void testMissingDims()>
[602] <org.apache.poi.hssf.model.TestSheet: void testMovingMergedRegion()>
[603] <org.apache.poi.hssf.model.TestSheet: void testRemoveMergedRegion()>
[604] <org.apache.poi.hssf.model.TestSheet: void testRowAggregation()>
[605] <org.apache.poi.hssf.model.TestSheet: void testRowValueAggregatesOrder_bug45145()>
[606] <org.apache.poi.hssf.model.TestSheet: void testSheetDimensions()>
[607] <org.apache.poi.hssf.model.TestSheet: void testUncalcSize_bug45066()>
[608] <org.apache.poi.hssf.model.TestSheetAdditional: void testGetCellWidth()>
[609] <org.apache.poi.hssf.model.TestSheetAdditional: void testMaxColumnWidth()>
[610] <org.apache.poi.hssf.model.TestWorkbook: void testRecalcId()>
[611] <org.apache.poi.hssf.record.TestArrayRecord: void testRead()>
[612] <org.apache.poi.hssf.record.TestAutoFilterInfoRecord: void testClone()>
[613] <org.apache.poi.hssf.record.TestAutoFilterInfoRecord: void testRead()>
[614] <org.apache.poi.hssf.record.TestAutoFilterInfoRecord: void testWrite()>
[615] <org.apache.poi.hssf.record.TestBoundSheetRecord: void testDeserializeUnicode()>
[616] <org.apache.poi.hssf.record.TestBoundSheetRecord: void testRecordLength()>
[617] <org.apache.poi.hssf.record.TestBoundSheetRecord: void testWideRecordLength()>
[618] <org.apache.poi.hssf.record.TestCFHeaderRecord: void testCreateCFHeaderRecord()>
[619] <org.apache.poi.hssf.record.TestCFHeaderRecord: void testExtremeRows()>
[620] <org.apache.poi.hssf.record.TestCFHeaderRecord: void testSerialization()>
[621] <org.apache.poi.hssf.record.TestCFRuleRecord: void testCreateCFRuleRecord()>
[622] <org.apache.poi.hssf.record.TestCFRuleRecord: void testFontFormattingAccessors(org.apache.poi.hssf.record.cf.FontFormatting)>
[623] <org.apache.poi.hssf.record.TestCFRuleRecord: void testPatternFormattingAccessors(org.apache.poi.hssf.record.cf.PatternFormatting)>
[624] <org.apache.poi.hssf.record.TestCFRuleRecord: void testReserializeRefNTokens()>
[625] <org.apache.poi.hssf.record.TestCFRuleRecord: void testWrite()>
[626] <org.apache.poi.hssf.record.TestColumnInfoRecord: void testBasic()>
[627] <org.apache.poi.hssf.record.TestColumnInfoRecord: void testOneReservedByte()>
[628] <org.apache.poi.hssf.record.TestColumnInfoRecord: void testZeroResevedBytes_bug48332()>
[629] <org.apache.poi.hssf.record.TestCommonObjectDataSubRecord: void testLoad()>
[630] <org.apache.poi.hssf.record.TestCommonObjectDataSubRecord: void testStore()>
[631] <org.apache.poi.hssf.record.TestDConRefRecord: void testGetDataSize()>
[632] <org.apache.poi.hssf.record.TestDConRefRecord: void testGetPath()>
[633] <org.apache.poi.hssf.record.TestDConRefRecord: void testGetSid()>
[634] <org.apache.poi.hssf.record.TestDConRefRecord: void testReadWrite(byte[],java.lang.String)>
[635] <org.apache.poi.hssf.record.TestDVALRecord: void testRead()>
[636] <org.apache.poi.hssf.record.TestDrawingGroupRecord: void testGetRecordSize()>
[637] <org.apache.poi.hssf.record.TestDrawingGroupRecord: void testSerialize()>
[638] <org.apache.poi.hssf.record.TestDrawingRecord: void testReadContinued()>
[639] <org.apache.poi.hssf.record.TestEmbeddedObjectRefSubRecord: void testCreate()>
[640] <org.apache.poi.hssf.record.TestEmbeddedObjectRefSubRecord: void testStore()>
[641] <org.apache.poi.hssf.record.TestEndSubRecord: void testLoad()>
[642] <org.apache.poi.hssf.record.TestEndSubRecord: void testStore()>
[643] <org.apache.poi.hssf.record.TestEscherAggregate: void testSerialize()>
[644] <org.apache.poi.hssf.record.TestExtSSTRecord: void test50967()>
[645] <org.apache.poi.hssf.record.TestExtendedFormatRecord: void testCloneOnto()>
[646] <org.apache.poi.hssf.record.TestExtendedFormatRecord: void testLoad()>
[647] <org.apache.poi.hssf.record.TestExtendedFormatRecord: void testStore()>
[648] <org.apache.poi.hssf.record.TestExternalNameRecord: void test48339()>
[649] <org.apache.poi.hssf.record.TestExternalNameRecord: void testAutoStdDocName()>
[650] <org.apache.poi.hssf.record.TestExternalNameRecord: void testBasicDeserializeReserialize()>
[651] <org.apache.poi.hssf.record.TestExternalNameRecord: void testBasicSize()>
[652] <org.apache.poi.hssf.record.TestExternalNameRecord: void testDDELink_bug47229()>
[653] <org.apache.poi.hssf.record.TestExternalNameRecord: void testPlainName()>
[654] <org.apache.poi.hssf.record.TestExternalNameRecord: void testUnicodeName_bug47384()>
[655] <org.apache.poi.hssf.record.TestFeatRecord: void testReadFeatRecord()>
[656] <org.apache.poi.hssf.record.TestFeatRecord: void testWithoutFeatRecord()>
[657] <org.apache.poi.hssf.record.TestFontRecord: void testCloneOnto()>
[658] <org.apache.poi.hssf.record.TestFontRecord: void testEmptyName_bug47250()>
[659] <org.apache.poi.hssf.record.TestFontRecord: void testLoad()>
[660] <org.apache.poi.hssf.record.TestFontRecord: void testSameProperties()>
[661] <org.apache.poi.hssf.record.TestFormulaRecord: void testCachedValue_bug46479()>
[662] <org.apache.poi.hssf.record.TestFormulaRecord: void testCheckNanPreserve()>
[663] <org.apache.poi.hssf.record.TestFormulaRecord: void testCreateFormulaRecord()>
[664] <org.apache.poi.hssf.record.TestFormulaRecord: void testExpFormula()>
[665] <org.apache.poi.hssf.record.TestFormulaRecord: void testReserialize()>
[666] <org.apache.poi.hssf.record.TestFormulaRecord: void testWithConcat()>
[667] <org.apache.poi.hssf.record.TestFtCblsSubRecord: void testClone()>
[668] <org.apache.poi.hssf.record.TestFtCblsSubRecord: void testRead()>
[669] <org.apache.poi.hssf.record.TestFtCblsSubRecord: void testWrite()>
[670] <org.apache.poi.hssf.record.TestHyperlinkRecord: void test47498()>
[671] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testClone()>
[672] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testCreateDocumentRecord()>
[673] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testCreateEmailtRecord()>
[674] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testCreateFileRecord()>
[675] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testCreateURLRecord()>
[676] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testGUID()>
[677] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testReadDocumentLink()>
[678] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testReadEmailLink()>
[679] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testReadFileLink()>
[680] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testReadURLLink()>
[681] <org.apache.poi.hssf.record.TestHyperlinkRecord: void testReserializeLinkToWorkbook()>
[682] <org.apache.poi.hssf.record.TestInterfaceEndRecord: void testCreate()>
[683] <org.apache.poi.hssf.record.TestInterfaceEndRecord: void testUnexpectedBytes_bug47251()>
[684] <org.apache.poi.hssf.record.TestLbsDataSubRecord: void test_45778()>
[685] <org.apache.poi.hssf.record.TestLbsDataSubRecord: void test_47701()>
[686] <org.apache.poi.hssf.record.TestLbsDataSubRecord: void test_LbsDropData()>
[687] <org.apache.poi.hssf.record.TestLbsDataSubRecord: void test_remove_padding()>
[688] <org.apache.poi.hssf.record.TestNameCommentRecord: void testReserialize()>
[689] <org.apache.poi.hssf.record.TestNameRecord: void test50244()>
[690] <org.apache.poi.hssf.record.TestNameRecord: void testFormulaGeneral()>
[691] <org.apache.poi.hssf.record.TestNameRecord: void testFormulaRelAbs_bug46174()>
[692] <org.apache.poi.hssf.record.TestNameRecord: void testReserialize()>
[693] <org.apache.poi.hssf.record.TestNoteRecord: void testClone()>
[694] <org.apache.poi.hssf.record.TestNoteRecord: void testRead()>
[695] <org.apache.poi.hssf.record.TestNoteRecord: void testWrite()>
[696] <org.apache.poi.hssf.record.TestNoteStructureSubRecord: void testClone()>
[697] <org.apache.poi.hssf.record.TestNoteStructureSubRecord: void testRead()>
[698] <org.apache.poi.hssf.record.TestNoteStructureSubRecord: void testWrite()>
[699] <org.apache.poi.hssf.record.TestObjRecord: void testConstruct()>
[700] <org.apache.poi.hssf.record.TestObjRecord: void testLoad()>
[701] <org.apache.poi.hssf.record.TestObjRecord: void testReadWriteWithPadding_bug45133()>
[702] <org.apache.poi.hssf.record.TestObjRecord: void testStore()>
[703] <org.apache.poi.hssf.record.TestPaneRecord: void testLoad()>
[704] <org.apache.poi.hssf.record.TestPaneRecord: void testStore()>
[705] <org.apache.poi.hssf.record.TestRecalcIdRecord: void testBadFirstField_bug48096()>
[706] <org.apache.poi.hssf.record.TestRecordFactory: void testBasicRecordConstruction()>
[707] <org.apache.poi.hssf.record.TestRecordFactory: void testContinuedUnknownRecord()>
[708] <org.apache.poi.hssf.record.TestRecordFactory: void testMixedContinue()>
[709] <org.apache.poi.hssf.record.TestRecordFactory: void testNonZeroPadding_bug46987()>
[710] <org.apache.poi.hssf.record.TestRecordFactory: void testSpecial()>
[711] <org.apache.poi.hssf.record.TestRecordInputStream: void testChangeFromUnCompressedToCompressed()>
[712] <org.apache.poi.hssf.record.TestRecordInputStream: void testChangeOfCompressionFlag_bug25866()>
[713] <org.apache.poi.hssf.record.TestRecordInputStream: void testReadString()>
[714] <org.apache.poi.hssf.record.TestSCLRecord: void testLoad()>
[715] <org.apache.poi.hssf.record.TestSCLRecord: void testStore()>
[716] <org.apache.poi.hssf.record.TestSSTDeserializer: void testContinuationWithNoOverlap()>
[717] <org.apache.poi.hssf.record.TestSSTDeserializer: void testExtendedStrings()>
[718] <org.apache.poi.hssf.record.TestSSTDeserializer: void testSpanRichTextToPlainText()>
[719] <org.apache.poi.hssf.record.TestSSTDeserializer: void testStringAcross2Continuations()>
[720] <org.apache.poi.hssf.record.TestSSTRecord: void test50779_1()>
[721] <org.apache.poi.hssf.record.TestSSTRecord: void test50779_2()>
[722] <org.apache.poi.hssf.record.TestSSTRecord: void testContinuedRecord()>
[723] <org.apache.poi.hssf.record.TestSSTRecord: void testHugeStrings()>
[724] <org.apache.poi.hssf.record.TestSSTRecord: void testReadWriteDuplicatedRichText1()>
[725] <org.apache.poi.hssf.record.TestSSTRecord: void testSimpleAddString()>
[726] <org.apache.poi.hssf.record.TestSSTRecord: void testSimpleConstructor()>
[727] <org.apache.poi.hssf.record.TestSharedFormulaRecord: void testConvertSharedFormulas()>
[728] <org.apache.poi.hssf.record.TestSharedFormulaRecord: void testConvertSharedFormulasOperandClasses_bug45123()>
[729] <org.apache.poi.hssf.record.TestSharedFormulaRecord: void testPreserveOnReserialize()>
[730] <org.apache.poi.hssf.record.TestSharedFormulaRecord: void testUnshareFormulaDueToChangeFormula()>
[731] <org.apache.poi.hssf.record.TestSharedFormulaRecord: void testUnshareFormulaDueToDelete()>
[732] <org.apache.poi.hssf.record.TestStringRecord: void testContinue()>
[733] <org.apache.poi.hssf.record.TestStringRecord: void testLoad()>
[734] <org.apache.poi.hssf.record.TestStringRecord: void testStore()>
[735] <org.apache.poi.hssf.record.TestStyleRecord: void testUnicodeReadName()>
[736] <org.apache.poi.hssf.record.TestSubRecord: void testReadAll_bug45778()>
[737] <org.apache.poi.hssf.record.TestSubRecord: void testReadManualComboWithFormula()>
[738] <org.apache.poi.hssf.record.TestSubRecord: void testWayTooMuchPadding_bug46545()>
[739] <org.apache.poi.hssf.record.TestSupBookRecord: void testExternalReferenceUrl()>
[740] <org.apache.poi.hssf.record.TestSupBookRecord: void testLoadAIF()>
[741] <org.apache.poi.hssf.record.TestSupBookRecord: void testLoadER()>
[742] <org.apache.poi.hssf.record.TestSupBookRecord: void testLoadIR()>
[743] <org.apache.poi.hssf.record.TestSupBookRecord: void testStoreAIF()>
[744] <org.apache.poi.hssf.record.TestTableRecord: void testLoad()>
[745] <org.apache.poi.hssf.record.TestTableRecord: void testStore()>
[746] <org.apache.poi.hssf.record.TestTextObjectBaseRecord: void testLoad()>
[747] <org.apache.poi.hssf.record.TestTextObjectBaseRecord: void testStore()>
[748] <org.apache.poi.hssf.record.TestTextObjectRecord: void testLinkFormula()>
[749] <org.apache.poi.hssf.record.TestTextObjectRecord: void testLongRecords()>
[750] <org.apache.poi.hssf.record.TestTextObjectRecord: void testRead()>
[751] <org.apache.poi.hssf.record.TestTextObjectRecord: void testWrite()>
[752] <org.apache.poi.hssf.record.TestTextObjectRecord: void testWriteEmpty()>
[753] <org.apache.poi.hssf.record.TestWriteAccessRecord: void testMissingStringHeader_bug47001a()>
[754] <org.apache.poi.hssf.record.TestWriteAccessRecord: void testShortRecordWrittenByMSAccess()>
[755] <org.apache.poi.hssf.record.aggregates.TestCFRecordsAggregate: void testCFRecordsAggregate()>
[756] <org.apache.poi.hssf.record.aggregates.TestCFRecordsAggregate: void testNRules()>
[757] <org.apache.poi.hssf.record.aggregates.TestColumnInfoRecordsAggregate: void testGetRecordSize()>
[758] <org.apache.poi.hssf.record.aggregates.TestColumnInfoRecordsAggregate: void testGroupColumns_bug45639()>
[759] <org.apache.poi.hssf.record.aggregates.TestColumnInfoRecordsAggregate: void testHiddenAfterExpanding()>
[760] <org.apache.poi.hssf.record.aggregates.TestFormulaRecordAggregate: void testArrayFormulas()>
[761] <org.apache.poi.hssf.record.aggregates.TestFormulaRecordAggregate: void testBasic()>
[762] <org.apache.poi.hssf.record.aggregates.TestFormulaRecordAggregate: void testExtraStringRecord_bug46213()>
[763] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testDuplicateHeaderFooter_bug48026()>
[764] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testDuplicatePLS_bug47415()>
[765] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testHeaderFooter_bug46840()>
[766] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testLateHeaderFooter_bug46953()>
[767] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testLateMargins_bug47199()>
[768] <org.apache.poi.hssf.record.aggregates.TestPageSettingsBlock: void testMissingHeaderFooter()>
[769] <org.apache.poi.hssf.record.aggregates.TestRowRecordsAggregate: void testArraysAndTables()>
[770] <org.apache.poi.hssf.record.aggregates.TestRowRecordsAggregate: void testUnknownContinue_bug46280()>
[771] <org.apache.poi.hssf.record.aggregates.TestSharedValueManager: void testBug52527()>
[772] <org.apache.poi.hssf.record.aggregates.TestSharedValueManager: void testCompletelyOverlappedRanges()>
[773] <org.apache.poi.hssf.record.aggregates.TestSharedValueManager: void testPartiallyOverlappingRanges()>
[774] <org.apache.poi.hssf.record.aggregates.TestSharedValueManager: void testRecalculateFormulas47747()>
[775] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testGetFirstCellNum()>
[776] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testGetLastCellNum()>
[777] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testGetPhysicalNumberOfCells()>
[778] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testInsertCell()>
[779] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testRemoveCell()>
[780] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testSerialize()>
[781] <org.apache.poi.hssf.record.aggregates.TestValueRecordsAggregate: void testSharedFormula()>
[782] <org.apache.poi.hssf.record.cf.TestCellRange: void testContainsMethod()>
[783] <org.apache.poi.hssf.record.cf.TestCellRange: void testIntersectMethod()>
[784] <org.apache.poi.hssf.record.cf.TestCellRange: void testMergeCellRanges()>
[785] <org.apache.poi.hssf.record.cf.TestCellRange: void testNumberOfCells()>
[786] <org.apache.poi.hssf.record.cf.TestCellRange: void testValueOf()>
[787] <org.apache.poi.hssf.record.chart.TestAreaFormatRecord: void testLoad()>
[788] <org.apache.poi.hssf.record.chart.TestAreaFormatRecord: void testStore()>
[789] <org.apache.poi.hssf.record.chart.TestAreaRecord: void testLoad()>
[790] <org.apache.poi.hssf.record.chart.TestAreaRecord: void testStore()>
[791] <org.apache.poi.hssf.record.chart.TestAxisLineFormatRecord: void testLoad()>
[792] <org.apache.poi.hssf.record.chart.TestAxisLineFormatRecord: void testStore()>
[793] <org.apache.poi.hssf.record.chart.TestAxisOptionsRecord: void testLoad()>
[794] <org.apache.poi.hssf.record.chart.TestAxisOptionsRecord: void testStore()>
[795] <org.apache.poi.hssf.record.chart.TestAxisParentRecord: void testLoad()>
[796] <org.apache.poi.hssf.record.chart.TestAxisParentRecord: void testStore()>
[797] <org.apache.poi.hssf.record.chart.TestAxisRecord: void testLoad()>
[798] <org.apache.poi.hssf.record.chart.TestAxisRecord: void testStore()>
[799] <org.apache.poi.hssf.record.chart.TestAxisUsedRecord: void testLoad()>
[800] <org.apache.poi.hssf.record.chart.TestAxisUsedRecord: void testStore()>
[801] <org.apache.poi.hssf.record.chart.TestBarRecord: void testLoad()>
[802] <org.apache.poi.hssf.record.chart.TestBarRecord: void testStore()>
[803] <org.apache.poi.hssf.record.chart.TestCategorySeriesAxisRecord: void testLoad()>
[804] <org.apache.poi.hssf.record.chart.TestCategorySeriesAxisRecord: void testStore()>
[805] <org.apache.poi.hssf.record.chart.TestChartFormatRecord: void testLoad()>
[806] <org.apache.poi.hssf.record.chart.TestChartRecord: void testLoad()>
[807] <org.apache.poi.hssf.record.chart.TestChartRecord: void testStore()>
[808] <org.apache.poi.hssf.record.chart.TestChartTitleFormatRecord: void testRecord()>
[809] <org.apache.poi.hssf.record.chart.TestDatRecord: void testLoad()>
[810] <org.apache.poi.hssf.record.chart.TestDatRecord: void testStore()>
[811] <org.apache.poi.hssf.record.chart.TestDataFormatRecord: void testLoad()>
[812] <org.apache.poi.hssf.record.chart.TestDataFormatRecord: void testStore()>
[813] <org.apache.poi.hssf.record.chart.TestDefaultDataLabelTextPropertiesRecord: void testLoad()>
[814] <org.apache.poi.hssf.record.chart.TestDefaultDataLabelTextPropertiesRecord: void testStore()>
[815] <org.apache.poi.hssf.record.chart.TestFontBasisRecord: void testLoad()>
[816] <org.apache.poi.hssf.record.chart.TestFontBasisRecord: void testStore()>
[817] <org.apache.poi.hssf.record.chart.TestFontIndexRecord: void testLoad()>
[818] <org.apache.poi.hssf.record.chart.TestFontIndexRecord: void testStore()>
[819] <org.apache.poi.hssf.record.chart.TestFrameRecord: void testLoad()>
[820] <org.apache.poi.hssf.record.chart.TestFrameRecord: void testStore()>
[821] <org.apache.poi.hssf.record.chart.TestLegendRecord: void testLoad()>
[822] <org.apache.poi.hssf.record.chart.TestLegendRecord: void testStore()>
[823] <org.apache.poi.hssf.record.chart.TestLineFormatRecord: void testLoad()>
[824] <org.apache.poi.hssf.record.chart.TestLineFormatRecord: void testStore()>
[825] <org.apache.poi.hssf.record.chart.TestLinkedDataRecord: void testLoad()>
[826] <org.apache.poi.hssf.record.chart.TestLinkedDataRecord: void testStore()>
[827] <org.apache.poi.hssf.record.chart.TestNumberFormatIndexRecord: void testLoad()>
[828] <org.apache.poi.hssf.record.chart.TestNumberFormatIndexRecord: void testStore()>
[829] <org.apache.poi.hssf.record.chart.TestObjectLinkRecord: void testLoad()>
[830] <org.apache.poi.hssf.record.chart.TestObjectLinkRecord: void testStore()>
[831] <org.apache.poi.hssf.record.chart.TestPlotAreaRecord: void testLoad()>
[832] <org.apache.poi.hssf.record.chart.TestPlotAreaRecord: void testStore()>
[833] <org.apache.poi.hssf.record.chart.TestPlotGrowthRecord: void testLoad()>
[834] <org.apache.poi.hssf.record.chart.TestPlotGrowthRecord: void testStore()>
[835] <org.apache.poi.hssf.record.chart.TestSeriesChartGroupIndexRecord: void testLoad()>
[836] <org.apache.poi.hssf.record.chart.TestSeriesChartGroupIndexRecord: void testStore()>
[837] <org.apache.poi.hssf.record.chart.TestSeriesIndexRecord: void testLoad()>
[838] <org.apache.poi.hssf.record.chart.TestSeriesIndexRecord: void testStore()>
[839] <org.apache.poi.hssf.record.chart.TestSeriesLabelsRecord: void testLoad()>
[840] <org.apache.poi.hssf.record.chart.TestSeriesLabelsRecord: void testStore()>
[841] <org.apache.poi.hssf.record.chart.TestSeriesListRecord: void testLoad()>
[842] <org.apache.poi.hssf.record.chart.TestSeriesListRecord: void testStore()>
[843] <org.apache.poi.hssf.record.chart.TestSeriesRecord: void testLoad()>
[844] <org.apache.poi.hssf.record.chart.TestSeriesRecord: void testStore()>
[845] <org.apache.poi.hssf.record.chart.TestSeriesTextRecord: void testLoad()>
[846] <org.apache.poi.hssf.record.chart.TestSeriesToChartGroupRecord: void testLoad()>
[847] <org.apache.poi.hssf.record.chart.TestSeriesToChartGroupRecord: void testStore()>
[848] <org.apache.poi.hssf.record.chart.TestSheetPropertiesRecord: void testLoad()>
[849] <org.apache.poi.hssf.record.chart.TestTextRecord: void testLoad()>
[850] <org.apache.poi.hssf.record.chart.TestTextRecord: void testStore()>
[851] <org.apache.poi.hssf.record.chart.TestTickRecord: void testLoad()>
[852] <org.apache.poi.hssf.record.chart.TestTickRecord: void testStore()>
[853] <org.apache.poi.hssf.record.chart.TestUnitsRecord: void testLoad()>
[854] <org.apache.poi.hssf.record.chart.TestUnitsRecord: void testStore()>
[855] <org.apache.poi.hssf.record.chart.TestValueRangeRecord: void testLoad()>
[856] <org.apache.poi.hssf.record.chart.TestValueRangeRecord: void testStore()>
[857] <org.apache.poi.hssf.record.common.TestUnicodeString: void testCorruptExtRstDetection()>
[858] <org.apache.poi.hssf.record.common.TestUnicodeString: void testExtRstFromData()>
[859] <org.apache.poi.hssf.record.common.TestUnicodeString: void testExtRstFromEmpty()>
[860] <org.apache.poi.hssf.record.common.TestUnicodeString: void testFormatRun()>
[861] <org.apache.poi.hssf.record.pivot.TestExtendedPivotTableViewFieldsRecord: void testSubNameNotPresent_bug46693()>
[862] <org.apache.poi.hssf.record.pivot.TestPageItemRecord: void testMoreThanOneInfoItem_bug46917()>
[863] <org.apache.poi.hssf.record.pivot.TestViewFieldsRecord: void testUnicodeFlag_bug46693()>
[864] <org.apache.poi.hssf.usermodel.TestBugs: void test15556()>
[865] <org.apache.poi.hssf.usermodel.TestBugs: void test27364()>
[866] <org.apache.poi.hssf.usermodel.TestBugs: void test27394()>
[867] <org.apache.poi.hssf.usermodel.TestBugs: void test28774()>
[868] <org.apache.poi.hssf.usermodel.TestBugs: void test29942()>
[869] <org.apache.poi.hssf.usermodel.TestBugs: void test30070()>
[870] <org.apache.poi.hssf.usermodel.TestBugs: void test30978()>
[871] <org.apache.poi.hssf.usermodel.TestBugs: void test31661()>
[872] <org.apache.poi.hssf.usermodel.TestBugs: void test32191()>
[873] <org.apache.poi.hssf.usermodel.TestBugs: void test35564()>
[874] <org.apache.poi.hssf.usermodel.TestBugs: void test35565()>
[875] <org.apache.poi.hssf.usermodel.TestBugs: void test36947()>
[876] <org.apache.poi.hssf.usermodel.TestBugs: void test39634()>
[877] <org.apache.poi.hssf.usermodel.TestBugs: void test40285()>
[878] <org.apache.poi.hssf.usermodel.TestBugs: void test41546()>
[879] <org.apache.poi.hssf.usermodel.TestBugs: void test42618()>
[880] <org.apache.poi.hssf.usermodel.TestBugs: void test43251()>
[881] <org.apache.poi.hssf.usermodel.TestBugs: void test44235()>
[882] <org.apache.poi.hssf.usermodel.TestBugs: void test44471()>
[883] <org.apache.poi.hssf.usermodel.TestBugs: void test44536()>
[884] <org.apache.poi.hssf.usermodel.TestBugs: void test44593()>
[885] <org.apache.poi.hssf.usermodel.TestBugs: void test44643()>
[886] <org.apache.poi.hssf.usermodel.TestBugs: void test44693()>
[887] <org.apache.poi.hssf.usermodel.TestBugs: void test44840()>
[888] <org.apache.poi.hssf.usermodel.TestBugs: void test44891()>
[889] <org.apache.poi.hssf.usermodel.TestBugs: void test44958()>
[890] <org.apache.poi.hssf.usermodel.TestBugs: void test45290()>
[891] <org.apache.poi.hssf.usermodel.TestBugs: void test45338()>
[892] <org.apache.poi.hssf.usermodel.TestBugs: void test45414()>
[893] <org.apache.poi.hssf.usermodel.TestBugs: void test45492()>
[894] <org.apache.poi.hssf.usermodel.TestBugs: void test45761()>
[895] <org.apache.poi.hssf.usermodel.TestBugs: void test45777()>
[896] <org.apache.poi.hssf.usermodel.TestBugs: void test45784()>
[897] <org.apache.poi.hssf.usermodel.TestBugs: void test45970()>
[898] <org.apache.poi.hssf.usermodel.TestBugs: void test46137()>
[899] <org.apache.poi.hssf.usermodel.TestBugs: void test46368()>
[900] <org.apache.poi.hssf.usermodel.TestBugs: void test46664()>
[901] <org.apache.poi.hssf.usermodel.TestBugs: void test46904()>
[902] <org.apache.poi.hssf.usermodel.TestBugs: void test47034()>
[903] <org.apache.poi.hssf.usermodel.TestBugs: void test47847()>
[904] <org.apache.poi.hssf.usermodel.TestBugs: void test48180()>
[905] <org.apache.poi.hssf.usermodel.TestBugs: void test48968()>
[906] <org.apache.poi.hssf.usermodel.TestBugs: void test49096()>
[907] <org.apache.poi.hssf.usermodel.TestBugs: void test49185()>
[908] <org.apache.poi.hssf.usermodel.TestBugs: void test49219()>
[909] <org.apache.poi.hssf.usermodel.TestBugs: void test49524()>
[910] <org.apache.poi.hssf.usermodel.TestBugs: void test49751()>
[911] <org.apache.poi.hssf.usermodel.TestBugs: void test49896()>
[912] <org.apache.poi.hssf.usermodel.TestBugs: void test49931()>
[913] <org.apache.poi.hssf.usermodel.TestBugs: void test50756()>
[914] <org.apache.poi.hssf.usermodel.TestBugs: void test50833()>
[915] <org.apache.poi.hssf.usermodel.TestBugs: void test50939()>
[916] <org.apache.poi.hssf.usermodel.TestBugs: void test51024()>
[917] <org.apache.poi.hssf.usermodel.TestBugs: void test51143()>
[918] <org.apache.poi.hssf.usermodel.TestBugs: void test51461()>
[919] <org.apache.poi.hssf.usermodel.TestBugs: void test51535()>
[920] <org.apache.poi.hssf.usermodel.TestBugs: void test51675()>
[921] <org.apache.poi.hssf.usermodel.TestBugs: void test51832()>
[922] <org.apache.poi.hssf.usermodel.TestBugs: void test52272()>
[923] <org.apache.poi.hssf.usermodel.TestBugs: void test53432()>
[924] <org.apache.poi.hssf.usermodel.TestBugs: void testZipCodeFormulas()>
[925] <org.apache.poi.hssf.usermodel.TestCellStyle: void testCloneStyleDiffWB()>
[926] <org.apache.poi.hssf.usermodel.TestCellStyle: void testCloneStyleSameWB()>
[927] <org.apache.poi.hssf.usermodel.TestCellStyle: void testDataStyle()>
[928] <org.apache.poi.hssf.usermodel.TestCellStyle: void testWriteSheetFont()>
[929] <org.apache.poi.hssf.usermodel.TestCellStyle: void testWriteSheetStyle()>
[930] <org.apache.poi.hssf.usermodel.TestCloneSheet: void testCloneSheetBasic()>
[931] <org.apache.poi.hssf.usermodel.TestCloneSheet: void testCloneSheetWithoutDrawings()>
[932] <org.apache.poi.hssf.usermodel.TestComment: void testAddToExistingFile()>
[933] <org.apache.poi.hssf.usermodel.TestComment: void testAttemptToSave2CommentsWithSameCoordinates()>
[934] <org.apache.poi.hssf.usermodel.TestComment: void testExistingFileWithComment()>
[935] <org.apache.poi.hssf.usermodel.TestComment: void testFindComments()>
[936] <org.apache.poi.hssf.usermodel.TestComment: void testInitState()>
[937] <org.apache.poi.hssf.usermodel.TestComment: void testResultEqualsToAbstractShape()>
[938] <org.apache.poi.hssf.usermodel.TestComment: void testSetGetProperties()>
[939] <org.apache.poi.hssf.usermodel.TestComment: void testShapeId()>
[940] <org.apache.poi.hssf.usermodel.TestEmbeddedObjects: void testReadExistingObject()>
[941] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testDraw()>
[942] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testDrawString()>
[943] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testFillRect()>
[944] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testGetFont()>
[945] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testSetColor()>
[946] <org.apache.poi.hssf.usermodel.TestEscherGraphics2d: void testSetFont()>
[947] <org.apache.poi.hssf.usermodel.TestEscherGraphics: void testDrawString()>
[948] <org.apache.poi.hssf.usermodel.TestEscherGraphics: void testFillRect()>
[949] <org.apache.poi.hssf.usermodel.TestEscherGraphics: void testGetFont()>
[950] <org.apache.poi.hssf.usermodel.TestEscherGraphics: void testSetColor()>
[951] <org.apache.poi.hssf.usermodel.TestEscherGraphics: void testSetFont()>
[952] <org.apache.poi.hssf.usermodel.TestExternalReferenceChange: void testDummyToSource()>
[953] <org.apache.poi.hssf.usermodel.TestFontDetails: void testCreate()>
[954] <org.apache.poi.hssf.usermodel.TestFontDetails: void testGetCharWidth()>
[955] <org.apache.poi.hssf.usermodel.TestFontDetails: void testGetStringWidth()>
[956] <org.apache.poi.hssf.usermodel.TestFormulaEvaluatorBugs: void test44297()>
[957] <org.apache.poi.hssf.usermodel.TestFormulaEvaluatorBugs: void test44410()>
[958] <org.apache.poi.hssf.usermodel.TestFormulaEvaluatorBugs: void test44636()>
[959] <org.apache.poi.hssf.usermodel.TestFormulaEvaluatorBugs: void testDateWithNegativeParts_bug48528()>
[960] <org.apache.poi.hssf.usermodel.TestFormulaEvaluatorDocs: void testEvaluateAll()>
[961] <org.apache.poi.hssf.usermodel.TestFormulas: void test27272_1()>
[962] <org.apache.poi.hssf.usermodel.TestFormulas: void test27272_2()>
[963] <org.apache.poi.hssf.usermodel.TestFormulas: void testBasicAddIntegers()>
[964] <org.apache.poi.hssf.usermodel.TestFormulas: void testFormulasWithUnderscore()>
[965] <org.apache.poi.hssf.usermodel.TestFormulas: void testIfFormulas()>
[966] <org.apache.poi.hssf.usermodel.TestFormulas: void testLogicalFormulas()>
[967] <org.apache.poi.hssf.usermodel.TestFormulas: void testRVAoperands()>
[968] <org.apache.poi.hssf.usermodel.TestFormulas: void testSharedFormula()>
[969] <org.apache.poi.hssf.usermodel.TestFormulas: void testSheetFunctions()>
[970] <org.apache.poi.hssf.usermodel.TestFormulas: void testSheetLevelFormulas()>
[971] <org.apache.poi.hssf.usermodel.TestFormulas: void testStringFormulaRead()>
[972] <org.apache.poi.hssf.usermodel.TestFormulas: void testStringFormulas()>
[973] <org.apache.poi.hssf.usermodel.TestFormulas: void testSumIf()>
[974] <org.apache.poi.hssf.usermodel.TestHSSFCell: void testDateWindowingRead()>
[975] <org.apache.poi.hssf.usermodel.TestHSSFCell: void testDateWindowingWrite()>
[976] <org.apache.poi.hssf.usermodel.TestHSSFCell: void testWithHyperlink()>
[977] <org.apache.poi.hssf.usermodel.TestHSSFCell: void testWithTwoHyperlinks()>
[978] <org.apache.poi.hssf.usermodel.TestHSSFChart: void testExistingSheet2()>
[979] <org.apache.poi.hssf.usermodel.TestHSSFChart: void testExistingSheet3()>
[980] <org.apache.poi.hssf.usermodel.TestHSSFChart: void testSingleChart()>
[981] <org.apache.poi.hssf.usermodel.TestHSSFChart: void testThreeCharts()>
[982] <org.apache.poi.hssf.usermodel.TestHSSFChart: void testTwoCharts()>
[983] <org.apache.poi.hssf.usermodel.TestHSSFClientAnchor: void testConvertAnchor()>
[984] <org.apache.poi.hssf.usermodel.TestHSSFClientAnchor: void testGetAnchorHeightInPoints()>
[985] <org.apache.poi.hssf.usermodel.TestHSSFComment: void test47924()>
[986] <org.apache.poi.hssf.usermodel.TestHSSFComment: void testDefaultShapeType()>
[987] <org.apache.poi.hssf.usermodel.TestHSSFDataFormat: void test49928()>
[988] <org.apache.poi.hssf.usermodel.TestHSSFDataFormatter: void testFromFile()>
[989] <org.apache.poi.hssf.usermodel.TestHSSFDataFormatter: void testGeneralAtFormat()>
[990] <org.apache.poi.hssf.usermodel.TestHSSFDataFormatter: void testGetFormattedCellValueHSSFCell()>
[991] <org.apache.poi.hssf.usermodel.TestHSSFDataFormatter: void testGetFormattedCellValueHSSFCellHSSFFormulaEvaluator()>
[992] <org.apache.poi.hssf.usermodel.TestHSSFDataFormatter: void testSetDefaultNumberFormat()>
[993] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testAbsoluteDay()>
[994] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testBug19172()>
[995] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testCalendarConversion()>
[996] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testConvertDateTime()>
[997] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testConvertTime()>
[998] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testDateBug_2Excel()>
[999] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testDateConversion()>
[1000] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testExcelConversionOnDSTEnd()>
[1001] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testExcelConversionOnDSTStart()>
[1002] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testJavaConversionOnDSTEnd()>
[1003] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testJavaConversionOnDSTStart()>
[1004] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testOnARealFile()>
[1005] <org.apache.poi.hssf.usermodel.TestHSSFDateUtil: void testParseDate()>
[1006] <org.apache.poi.hssf.usermodel.TestHSSFFormulaEvaluator: void testDefinedNameWithComplexFlag_bug47048()>
[1007] <org.apache.poi.hssf.usermodel.TestHSSFFormulaEvaluator: void testEvaluateSimple()>
[1008] <org.apache.poi.hssf.usermodel.TestHSSFFormulaEvaluator: void testUpdateCachedFormulaResultFromErrorToNumber_bug46479()>
[1009] <org.apache.poi.hssf.usermodel.TestHSSFFormulaEvaluator: void testXRefs()>
[1010] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testFooterHas16bitCharacter()>
[1011] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testHeaderHas16bitCharacter()>
[1012] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testMissingHeaderFooterRecord_bug47244()>
[1013] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testRetrieveCorrectFooter()>
[1014] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testRetrieveCorrectHeader()>
[1015] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testSpecialChars()>
[1016] <org.apache.poi.hssf.usermodel.TestHSSFHeaderFooter: void testStripFields()>
[1017] <org.apache.poi.hssf.usermodel.TestHSSFHyperlink: void testCreate()>
[1018] <org.apache.poi.hssf.usermodel.TestHSSFHyperlink: void testCreateDocumentLink()>
[1019] <org.apache.poi.hssf.usermodel.TestHSSFHyperlink: void testModify()>
[1020] <org.apache.poi.hssf.usermodel.TestHSSFHyperlink: void testRead()>
[1021] <org.apache.poi.hssf.usermodel.TestHSSFHyperlink: void testShiftRows()>
[1022] <org.apache.poi.hssf.usermodel.TestHSSFName: void testDeletedReference()>
[1023] <org.apache.poi.hssf.usermodel.TestHSSFName: void testNamedRange()>
[1024] <org.apache.poi.hssf.usermodel.TestHSSFName: void testNamedRead()>
[1025] <org.apache.poi.hssf.usermodel.TestHSSFName: void testNamedReadModify()>
[1026] <org.apache.poi.hssf.usermodel.TestHSSFName: void testPrintAreaFileRead()>
[1027] <org.apache.poi.hssf.usermodel.TestHSSFName: void testRepeatingRowsAndColumsNames()>
[1028] <org.apache.poi.hssf.usermodel.TestHSSFName: void testTypeOfRootPtg()>
[1029] <org.apache.poi.hssf.usermodel.TestHSSFOptimiser: void testDoesNoHarmIfNothingToDo()>
[1030] <org.apache.poi.hssf.usermodel.TestHSSFOptimiser: void testOptimiseFonts()>
[1031] <org.apache.poi.hssf.usermodel.TestHSSFOptimiser: void testOptimiseStyles()>
[1032] <org.apache.poi.hssf.usermodel.TestHSSFPalette: void testAddColor()>
[1033] <org.apache.poi.hssf.usermodel.TestHSSFPalette: void testFindSimilar()>
[1034] <org.apache.poi.hssf.usermodel.TestHSSFPalette: void testPaletteFromCellColours()>
[1035] <org.apache.poi.hssf.usermodel.TestHSSFPatriarch: void test44916()>
[1036] <org.apache.poi.hssf.usermodel.TestHSSFPatriarch: void testBasic()>
[1037] <org.apache.poi.hssf.usermodel.TestHSSFPicture: void testAddPictures()>
[1038] <org.apache.poi.hssf.usermodel.TestHSSFPicture: void testBSEPictureRef()>
[1039] <org.apache.poi.hssf.usermodel.TestHSSFPicture: void testReadExistingImage()>
[1040] <org.apache.poi.hssf.usermodel.TestHSSFPicture: void testSetGetProperties()>
[1041] <org.apache.poi.hssf.usermodel.TestHSSFPictureData: void testMacPicture()>
[1042] <org.apache.poi.hssf.usermodel.TestHSSFPictureData: void testNotNullPictures()>
[1043] <org.apache.poi.hssf.usermodel.TestHSSFPictureData: void testPictures()>
[1044] <org.apache.poi.hssf.usermodel.TestHSSFRichTextString: void test40520_1()>
[1045] <org.apache.poi.hssf.usermodel.TestHSSFRichTextString: void test40520_2()>
[1046] <org.apache.poi.hssf.usermodel.TestHSSFRichTextString: void test40520_3()>
[1047] <org.apache.poi.hssf.usermodel.TestHSSFRichTextString: void testApplyFont()>
[1048] <org.apache.poi.hssf.usermodel.TestHSSFRichTextString: void testClearFormatting()>
[1049] <org.apache.poi.hssf.usermodel.TestHSSFRow: void testMoveCell()>
[1050] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void test35084()>
[1051] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testArabic()>
[1052] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testAutoFilter()>
[1053] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testBackupRecord()>
[1054] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testCloneSheetWithDrawings()>
[1055] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testCloneWithProtect()>
[1056] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testColumnWidth()>
[1057] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testCreateDrawings()>
[1058] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testDBCSName()>
[1059] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testDefaultColumnWidth()>
[1060] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testDvProtectionOrder_bug47363b()>
[1061] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testForceRecalculation()>
[1062] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testGetDrawings()>
[1063] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testGroupRows()>
[1064] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testGroupRowsExisting()>
[1065] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testHorizontallyCenter()>
[1066] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testLongSheetNames()>
[1067] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testMissingRowRecords_bug41187()>
[1068] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testPageBreakFiles()>
[1069] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testPrintSetupLandscapeExisting()>
[1070] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testSetRepeatingRowsAndColumnsBug29747()>
[1071] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testTopRow()>
[1072] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testVerticallyCenter()>
[1073] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testWSBool()>
[1074] <org.apache.poi.hssf.usermodel.TestHSSFSheet: void testZoom()>
[1075] <org.apache.poi.hssf.usermodel.TestHSSFSheetUpdateArrayFormulas: void testHSSFSetArrayFormula_singleCell()>
[1076] <org.apache.poi.hssf.usermodel.TestHSSFTextbox: void testAlignment()>
[1077] <org.apache.poi.hssf.usermodel.TestHSSFTextbox: void testSetDeafultTextFormat()>
[1078] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void test47920()>
[1079] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testCellStylesLimit()>
[1080] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testDifferentPOIFS()>
[1081] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testHidden()>
[1082] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testNamesToDeleteSheets()>
[1083] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testReadWriteWithCharts()>
[1084] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testSetSheetOrderHSSF()>
[1085] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testSheetClone()>
[1086] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testSheetSerializeSizeMismatch_bug45066()>
[1087] <org.apache.poi.hssf.usermodel.TestHSSFWorkbook: void testWriteWorkbookFromNPOIFS()>
[1088] <org.apache.poi.hssf.usermodel.TestPOIFSProperties: void testFail()>
[1089] <org.apache.poi.hssf.usermodel.TestPOIFSProperties: void testOK()>
[1090] <org.apache.poi.hssf.usermodel.TestPatriarch: void testGetPatriarch()>
[1091] <org.apache.poi.hssf.usermodel.TestPolygon: void testAddToExistingFile()>
[1092] <org.apache.poi.hssf.usermodel.TestPolygon: void testExistingFile()>
[1093] <org.apache.poi.hssf.usermodel.TestPolygon: void testPolygonType()>
[1094] <org.apache.poi.hssf.usermodel.TestPolygon: void testResultEqualsToAbstractShape()>
[1095] <org.apache.poi.hssf.usermodel.TestPolygon: void testSetGetProperties()>
[1096] <org.apache.poi.hssf.usermodel.TestRowStyle: void testDataStyle()>
[1097] <org.apache.poi.hssf.usermodel.TestRowStyle: void testWriteSheetFont()>
[1098] <org.apache.poi.hssf.usermodel.TestRowStyle: void testWriteSheetStyle()>
[1099] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testAddShapesToGroup()>
[1100] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testAddToExistingFile()>
[1101] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testClearShapes()>
[1102] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testModify()>
[1103] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testSetGetCoordinates()>
[1104] <org.apache.poi.hssf.usermodel.TestShapeGroup: void testSpgrRecord()>
[1105] <org.apache.poi.hssf.usermodel.TestText: void testAddTextToExistingFile()>
[1106] <org.apache.poi.hssf.usermodel.TestText: void testExistingFileWithText()>
[1107] <org.apache.poi.hssf.usermodel.TestText: void testResultEqualsToAbstractShape()>
[1108] <org.apache.poi.hssf.usermodel.TestText: void testSetGetProperties()>
[1109] <org.apache.poi.hssf.usermodel.TestUnfixedBugs: void test49612()>
[1110] <org.apache.poi.hssf.usermodel.TestUnicodeWorkbook: void testUmlatReadWrite()>
[1111] <org.apache.poi.hssf.usermodel.TestUppercaseWorkbook: void testWrite()>
[1112] <org.apache.poi.hssf.usermodel.TestUppercaseWorkbook: void testWritePreserve()>
[1113] <org.apache.poi.hssf.usermodel.TestWorkbook: void testBackupRecord()>
[1114] <org.apache.poi.hssf.usermodel.TestWorkbook: void testModifyEmployee()>
[1115] <org.apache.poi.hssf.usermodel.TestWorkbook: void testModifySimple()>
[1116] <org.apache.poi.hssf.usermodel.TestWorkbook: void testModifySimpleWithSkip()>
[1117] <org.apache.poi.hssf.usermodel.TestWorkbook: void testModifySimpleWithStyling()>
[1118] <org.apache.poi.hssf.usermodel.TestWorkbook: void testReadEmployeeSimple()>
[1119] <org.apache.poi.hssf.usermodel.TestWorkbook: void testReadSheetWithRK()>
[1120] <org.apache.poi.hssf.usermodel.TestWorkbook: void testReadSimple()>
[1121] <org.apache.poi.hssf.usermodel.TestWorkbook: void testReadSimpleWithDataFormat()>
[1122] <org.apache.poi.hssf.usermodel.TestWorkbook: void testRepeatingBug()>
[1123] <org.apache.poi.hssf.usermodel.TestWorkbook: void testRepeatingColsRows()>
[1124] <org.apache.poi.hssf.usermodel.TestWorkbook: void testRowIndexesBeyond32768()>
[1125] <org.apache.poi.hssf.usermodel.TestWorkbook: void testWriteDataFormat()>
[1126] <org.apache.poi.hssf.usermodel.TestWorkbook: void testWriteModifySheetSimple()>
[1127] <org.apache.poi.hssf.usermodel.TestWorkbook: void testWriteSheetSimple()>
[1128] <org.apache.poi.hssf.util.TestAreaReference: void testAreaRef1()>
[1129] <org.apache.poi.hssf.util.TestAreaReference: void testContiguousReferences()>
[1130] <org.apache.poi.hssf.util.TestAreaReference: void testDiscontinousReference()>
[1131] <org.apache.poi.hssf.util.TestAreaReference: void testReferenceWithSheet()>
[1132] <org.apache.poi.hssf.util.TestHSSFColor: void testBasics()>
[1133] <org.apache.poi.hssf.util.TestHSSFColor: void testContents()>
[1134] <org.apache.poi.hssf.util.TestHSSFColor: void testTrippletHash()>
[1135] <org.apache.poi.hwpf.TestHWPFPictures: void testCompressedImageData()>
[1136] <org.apache.poi.hwpf.TestHWPFPictures: void testImageCount()>
[1137] <org.apache.poi.hwpf.TestHWPFPictures: void testImageData()>
[1138] <org.apache.poi.hwpf.TestHWPFPictures: void testMacImages()>
[1139] <org.apache.poi.hwpf.TestHWPFRangeParts: void testContents()>
[1140] <org.apache.poi.hwpf.TestHWPFRangeParts: void testContentsUnicode()>
[1141] <org.apache.poi.hwpf.converter.AbstractWordUtilsTest: void testBuildTableCellEdgesArray()>
[1142] <org.apache.poi.hwpf.converter.TestNumberFormatter: void testRoman()>
[1143] <org.apache.poi.hwpf.converter.TestWordToHtmlConverter: void testBug47286()>
[1144] <org.apache.poi.hwpf.converter.TestWordToTextConverter: void testBug47731()>
[1145] <org.apache.poi.hwpf.extractor.TestDifferentRoutes: void testExtractFromTextPieces()>
[1146] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testComments()>
[1147] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testEndnote()>
[1148] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testExtractFromEmbeded()>
[1149] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testFastSaved()>
[1150] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testFirstParagraphFix()>
[1151] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testFootnote()>
[1152] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testWithFooter()>
[1153] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testWithHeader()>
[1154] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testWord6()>
[1155] <org.apache.poi.hwpf.extractor.TestWordExtractor: void testWord95()>
[1156] <org.apache.poi.hwpf.model.TestBookmarksTables: void test()>
[1157] <org.apache.poi.hwpf.model.TestBookmarksTables: void testDeleteRange()>
[1158] <org.apache.poi.hwpf.model.TestBookmarksTables: void testReplaceTextAfter()>
[1159] <org.apache.poi.hwpf.model.TestBookmarksTables: void testReplaceTextBefore()>
[1160] <org.apache.poi.hwpf.model.TestBookmarksTables: void testUpdateText()>
[1161] <org.apache.poi.hwpf.model.TestCHPBinTable: void testReadWrite()>
[1162] <org.apache.poi.hwpf.model.TestDocumentProperties: void testReadWrite()>
[1163] <org.apache.poi.hwpf.model.TestFileInformationBlock: void testReadWrite()>
[1164] <org.apache.poi.hwpf.model.TestFontTable: void testReadWrite()>
[1165] <org.apache.poi.hwpf.model.TestNotesTables: void test()>
[1166] <org.apache.poi.hwpf.model.TestPAPBinTable: void testReadWrite()>
[1167] <org.apache.poi.hwpf.model.TestPlexOfCps: void testWriteRead()>
[1168] <org.apache.poi.hwpf.model.TestRevisionMarkAuthorTable: void testEmptyDocument()>
[1169] <org.apache.poi.hwpf.model.TestRevisionMarkAuthorTable: void testMultipleAuthors()>
[1170] <org.apache.poi.hwpf.model.TestRevisionMarkAuthorTable: void testSimpleDocument()>
[1171] <org.apache.poi.hwpf.model.TestStyleSheet: void testReadWrite()>
[1172] <org.apache.poi.hwpf.model.TestStyleSheet: void testReadWriteFromNonZeroOffset()>
[1173] <org.apache.poi.hwpf.model.TestTextPieceTable: void testAsciiParts()>
[1174] <org.apache.poi.hwpf.model.TestTextPieceTable: void testReadWrite()>
[1175] <org.apache.poi.hwpf.model.TestTextPieceTable: void testUnicodeParts()>
[1176] <org.apache.poi.hwpf.model.types.LFOLVLBaseAbstractTypeTest: void testGetSize()>
[1177] <org.apache.poi.hwpf.model.types.LVLFAbstractTypeTest: void testGetSize()>
[1178] <org.apache.poi.hwpf.sprm.TestSprms: void testSprmPJc()>
[1179] <org.apache.poi.hwpf.usermodel.TestBorderCode: void test()>
[1180] <org.apache.poi.hwpf.usermodel.TestBug46610: void testExtraction()>
[1181] <org.apache.poi.hwpf.usermodel.TestBug50075: void test()>
[1182] <org.apache.poi.hwpf.usermodel.TestBugs: void test41898()>
[1183] <org.apache.poi.hwpf.usermodel.TestBugs: void test46220()>
[1184] <org.apache.poi.hwpf.usermodel.TestBugs: void test46817()>
[1185] <org.apache.poi.hwpf.usermodel.TestBugs: void test47286()>
[1186] <org.apache.poi.hwpf.usermodel.TestBugs: void test47731()>
[1187] <org.apache.poi.hwpf.usermodel.TestBugs: void test49933()>
[1188] <org.apache.poi.hwpf.usermodel.TestHWPFOldDocument: void testWord6()>
[1189] <org.apache.poi.hwpf.usermodel.TestHWPFOldDocument: void testWord6Sections()>
[1190] <org.apache.poi.hwpf.usermodel.TestHWPFOldDocument: void testWord6Sections2()>
[1191] <org.apache.poi.hwpf.usermodel.TestHWPFOldDocument: void testWord95()>
[1192] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testFirst()>
[1193] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testFooter()>
[1194] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testHeader()>
[1195] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testHeaderFooter()>
[1196] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testNone()>
[1197] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testOddEven()>
[1198] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testUnicode()>
[1199] <org.apache.poi.hwpf.usermodel.TestHeaderStories: void testWithFields()>
[1200] <org.apache.poi.hwpf.usermodel.TestLists: void testBasics()>
[1201] <org.apache.poi.hwpf.usermodel.TestLists: void testIndentedText()>
[1202] <org.apache.poi.hwpf.usermodel.TestLists: void testMultiLevelLists()>
[1203] <org.apache.poi.hwpf.usermodel.TestLists: void testOrderedLists()>
[1204] <org.apache.poi.hwpf.usermodel.TestLists: void testUnorderedLists()>
[1205] <org.apache.poi.hwpf.usermodel.TestLists: void testWriteRead()>
[1206] <org.apache.poi.hwpf.usermodel.TestOfficeDrawings: void testWatermark()>
[1207] <org.apache.poi.hwpf.usermodel.TestPictures: void testCroppedPictures()>
[1208] <org.apache.poi.hwpf.usermodel.TestPictures: void testDifferentImages()>
[1209] <org.apache.poi.hwpf.usermodel.TestPictures: void testEmbededDocumentIcon()>
[1210] <org.apache.poi.hwpf.usermodel.TestPictures: void testEmfImage()>
[1211] <org.apache.poi.hwpf.usermodel.TestPictures: void testEquation()>
[1212] <org.apache.poi.hwpf.usermodel.TestPictures: void testFloatingPictures()>
[1213] <org.apache.poi.hwpf.usermodel.TestPictures: void testPictureDetectionWithPNG()>
[1214] <org.apache.poi.hwpf.usermodel.TestPictures: void testPictureWithAlternativeText()>
[1215] <org.apache.poi.hwpf.usermodel.TestPictures: void testPicturesInHeader()>
[1216] <org.apache.poi.hwpf.usermodel.TestPictures: void testPicturesWithTable()>
[1217] <org.apache.poi.hwpf.usermodel.TestPictures: void testTwoImages()>
[1218] <org.apache.poi.hwpf.usermodel.TestProblems: void testEncryptedFile()>
[1219] <org.apache.poi.hwpf.usermodel.TestProblems: void testParagraphPAPXNoParent45877()>
[1220] <org.apache.poi.hwpf.usermodel.TestProblems: void testProblemHeaderStories49936()>
[1221] <org.apache.poi.hwpf.usermodel.TestProblems: void testRangeDelete()>
[1222] <org.apache.poi.hwpf.usermodel.TestProblems: void testTableCellLastParagraph()>
[1223] <org.apache.poi.hwpf.usermodel.TestProblems: void testTableIterator()>
[1224] <org.apache.poi.hwpf.usermodel.TestProblems: void testWriteProperties()>
[1225] <org.apache.poi.hwpf.usermodel.TestRange: void testFieldStripping()>
[1226] <org.apache.poi.hwpf.usermodel.TestRangeDelete: void testDocStructure()>
[1227] <org.apache.poi.hwpf.usermodel.TestRangeDelete: void testRangeDeleteAll()>
[1228] <org.apache.poi.hwpf.usermodel.TestRangeDelete: void testRangeDeleteOne()>
[1229] <org.apache.poi.hwpf.usermodel.TestRangeInsertion: void testDocStructure()>
[1230] <org.apache.poi.hwpf.usermodel.TestRangeInsertion: void testRangeInsertion()>
[1231] <org.apache.poi.hwpf.usermodel.TestRangeProperties: void testAsciiStyling()>
[1232] <org.apache.poi.hwpf.usermodel.TestRangeProperties: void testAsciiTextParagraphs()>
[1233] <org.apache.poi.hwpf.usermodel.TestRangeProperties: void testUnicodeParagraphDefinitions()>
[1234] <org.apache.poi.hwpf.usermodel.TestRangeProperties: void testUnicodeStyling()>
[1235] <org.apache.poi.hwpf.usermodel.TestRangeProperties: void testUnicodeTextParagraphs()>
[1236] <org.apache.poi.hwpf.usermodel.TestRangeReplacement: void testDocStructure()>
[1237] <org.apache.poi.hwpf.usermodel.TestRangeReplacement: void testRangeReplacementAll()>
[1238] <org.apache.poi.hwpf.usermodel.TestRangeReplacement: void testRangeReplacementOne()>
[1239] <org.apache.poi.hwpf.usermodel.TestTableRow: void testInnerTableCellsDetection()>
[1240] <org.apache.poi.hwpf.usermodel.TestTableRow: void testOuterTableCellsDetection()>
[1241] <org.apache.poi.openxml4j.opc.TestContentType: void testContentTypeCommentFailure()>
[1242] <org.apache.poi.openxml4j.opc.TestContentType: void testContentTypeParameterFailure()>
[1243] <org.apache.poi.openxml4j.opc.TestContentType: void testContentTypeValidationFailure()>
[1244] <org.apache.poi.openxml4j.opc.TestFileHelper: void testGetDirectory()>
[1245] <org.apache.poi.openxml4j.opc.TestListParts: void testListParts()>
[1246] <org.apache.poi.openxml4j.opc.TestPackage: void testCreatePackageAddPart()>
[1247] <org.apache.poi.openxml4j.opc.TestPackage: void testCreatePackageWithCoreDocument()>
[1248] <org.apache.poi.openxml4j.opc.TestPackage: void testDeletePart()>
[1249] <org.apache.poi.openxml4j.opc.TestPackage: void testDeletePartRecursive()>
[1250] <org.apache.poi.openxml4j.opc.TestPackage: void testOpenFileThenOverwrite()>
[1251] <org.apache.poi.openxml4j.opc.TestPackage: void testOpenFileThenSaveDelete()>
[1252] <org.apache.poi.openxml4j.opc.TestPackage: void testOpenPackage()>
[1253] <org.apache.poi.openxml4j.opc.TestPackage: void testOpenSave()>
[1254] <org.apache.poi.openxml4j.opc.TestPackage: void testReplaceContentType()>
[1255] <org.apache.poi.openxml4j.opc.TestPackage: void testSaveToOutputStream()>
[1256] <org.apache.poi.openxml4j.opc.TestPackageCoreProperties: void testGetPropertiesLO()>
[1257] <org.apache.poi.openxml4j.opc.TestPackagePartName: void testGetExtension()>
[1258] <org.apache.poi.openxml4j.opc.TestPackageThumbnail: void testSetProperties()>
[1259] <org.apache.poi.openxml4j.opc.TestPackagingURIHelper: void testCreatePartNameRelativeString()>
[1260] <org.apache.poi.openxml4j.opc.TestPackagingURIHelper: void testCreatePartNameRelativeURI()>
[1261] <org.apache.poi.openxml4j.opc.TestPackagingURIHelper: void testCreateURIFromString()>
[1262] <org.apache.poi.openxml4j.opc.TestPackagingURIHelper: void testRelativizeURI()>
[1263] <org.apache.poi.openxml4j.opc.TestRelationships: void testCreateExcelHyperlinkRelations()>
[1264] <org.apache.poi.openxml4j.opc.TestRelationships: void testCreateRelationsFromScratch()>
[1265] <org.apache.poi.openxml4j.opc.TestRelationships: void testFetchFromCollection()>
[1266] <org.apache.poi.openxml4j.opc.TestRelationships: void testLoadExcelHyperlinkRelations()>
[1267] <org.apache.poi.openxml4j.opc.TestRelationships: void testLoadRelationships()>
[1268] <org.apache.poi.openxml4j.opc.TestRelationships: void testSelfRelations_bug51187()>
[1269] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testDCTermsNamespaceLimitedUse()>
[1270] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testDoNotUseCompatibilityMarkup()>
[1271] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testLimitedXSITypeAttribute_NotPresent()>
[1272] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testLimitedXSITypeAttribute_PresentWithUnauthorizedValue()>
[1273] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testOnlyOneCorePropertiesPart()>
[1274] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testOnlyOneCorePropertiesPart_AddPart()>
[1275] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testOnlyOneCorePropertiesPart_AddRelationship()>
[1276] <org.apache.poi.openxml4j.opc.compliance.TestOPCComplianceCoreProperties: void testUnauthorizedXMLLangAttribute()>
[1277] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePackageModel: void testAddPackageAlreadyAddFailure()>
[1278] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePackageModel: void testAddPackageAlreadyAddFailure2()>
[1279] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePackageModel: void testPartNameDerivationAdditionFailure()>
[1280] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePackageModel: void testPartNameDerivationReadingFailure()>
[1281] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testEmptyPartNameFailure()>
[1282] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testInvalidPartNames()>
[1283] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameComparaison()>
[1284] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameComparaisonFailure()>
[1285] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameEndsWithAForwardSlashFailure()>
[1286] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameStartsWithAForwardSlashFailure()>
[1287] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameWithInvalidSegmentsFailure()>
[1288] <org.apache.poi.openxml4j.opc.compliance.TestOPCCompliancePartName: void testPartNameWithUnreservedEncodedCharactersFailure()>
[1289] <org.apache.poi.openxml4j.opc.internal.TestContentTypeManager: void testContentTypeAddition()>
[1290] <org.apache.poi.openxml4j.opc.internal.TestContentTypeManager: void testContentTypeRemoval()>
[1291] <org.apache.poi.poifs.crypt.TestDecryptor: void testAgile()>
[1292] <org.apache.poi.poifs.crypt.TestDecryptor: void testDataLength()>
[1293] <org.apache.poi.poifs.crypt.TestDecryptor: void testPasswordVerification()>
[1294] <org.apache.poi.poifs.filesystem.TestDirectoryNode: void testEmptyConstructor()>
[1295] <org.apache.poi.poifs.filesystem.TestDirectoryNode: void testNonEmptyConstructor()>
[1296] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testAvailable()>
[1297] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testBufferRead()>
[1298] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testComplexBufferRead()>
[1299] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testConstructor()>
[1300] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testMarkFunctions()>
[1301] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testReadMultipleTreeLevels()>
[1302] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testReadSingleByte()>
[1303] <org.apache.poi.poifs.filesystem.TestDocumentInputStream: void testSkip()>
[1304] <org.apache.poi.poifs.filesystem.TestDocumentNode: void testConstructor()>
[1305] <org.apache.poi.poifs.filesystem.TestDocumentOutputStream: void testWrite1()>
[1306] <org.apache.poi.poifs.filesystem.TestDocumentOutputStream: void testWrite3()>
[1307] <org.apache.poi.poifs.filesystem.TestEntryUtils: void testCopyRecursively()>
[1308] <org.apache.poi.poifs.filesystem.TestFilteringDirectoryNode: void testChildFiltering()>
[1309] <org.apache.poi.poifs.filesystem.TestFilteringDirectoryNode: void testNestedFiltering()>
[1310] <org.apache.poi.poifs.filesystem.TestFilteringDirectoryNode: void testNoFiltering()>
[1311] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testBasicOpen()>
[1312] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testCreateWriteRead()>
[1313] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testGetDocumentEntry()>
[1314] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testGetFreeBlockWithNoneSpare()>
[1315] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testGetFreeBlockWithSpare()>
[1316] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testListEntries()>
[1317] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testNextBlock()>
[1318] <org.apache.poi.poifs.filesystem.TestNPOIFSFileSystem: void testPropertiesAndFatOnRead()>
[1319] <org.apache.poi.poifs.filesystem.TestNPOIFSMiniStore: void testCreateBlockIfNeeded()>
[1320] <org.apache.poi.poifs.filesystem.TestNPOIFSMiniStore: void testGetBlock()>
[1321] <org.apache.poi.poifs.filesystem.TestNPOIFSMiniStore: void testGetFreeBlockWithNoneSpare()>
[1322] <org.apache.poi.poifs.filesystem.TestNPOIFSMiniStore: void testGetFreeBlockWithSpare()>
[1323] <org.apache.poi.poifs.filesystem.TestNPOIFSMiniStore: void testNextBlock()>
[1324] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadFailsOnLoop()>
[1325] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadLongerStream()>
[1326] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadMiniStreams()>
[1327] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadShortStream()>
[1328] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadStream4096()>
[1329] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadTinyStream()>
[1330] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReadWriteNewStream()>
[1331] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReplaceStream()>
[1332] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReplaceStreamWithLess()>
[1333] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testReplaceStreamWithMore()>
[1334] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testWriteFailsOnLoop()>
[1335] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testWriteMiniStreams()>
[1336] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testWriteNewStream()>
[1337] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testWriteNewStreamExtraFATs()>
[1338] <org.apache.poi.poifs.filesystem.TestNPOIFSStream: void testWriteStream4096()>
[1339] <org.apache.poi.poifs.filesystem.TestOle10Native: void testOleNative()>
[1340] <org.apache.poi.poifs.filesystem.TestPOIFSDocumentPath: void testDefaultConstructor()>
[1341] <org.apache.poi.poifs.filesystem.TestPOIFSDocumentPath: void testEquality()>
[1342] <org.apache.poi.poifs.filesystem.TestPOIFSDocumentPath: void testFullPathConstructor()>
[1343] <org.apache.poi.poifs.filesystem.TestPOIFSDocumentPath: void testRelativePathConstructor()>
[1344] <org.apache.poi.poifs.filesystem.TestPOIFSFileSystem: void test4KBlocks()>
[1345] <org.apache.poi.poifs.filesystem.TestPOIFSFileSystem: void testBATandXBAT()>
[1346] <org.apache.poi.poifs.filesystem.TestPOIFSFileSystem: void testFATandDIFATsectors()>
[1347] <org.apache.poi.poifs.filesystem.TestPOIFSFileSystem: void testNotesOLE2Files()>
[1348] <org.apache.poi.poifs.filesystem.TestPropertySorter: void testSerialization()>
[1349] <org.apache.poi.poifs.filesystem.TestPropertySorter: void testSortProperties()>
[1350] <org.apache.poi.poifs.property.TestDirectoryProperty: void testAddChild()>
[1351] <org.apache.poi.poifs.property.TestPropertyTable: void testReadingConstructor()>
[1352] <org.apache.poi.poifs.property.TestRootProperty: void testSetSize()>
[1353] <org.apache.poi.poifs.storage.TestBATBlock: void testCalculateMaximumSize()>
[1354] <org.apache.poi.poifs.storage.TestBATBlock: void testCalculateXBATStorageRequirements()>
[1355] <org.apache.poi.poifs.storage.TestBATBlock: void testCreateBATBlocks()>
[1356] <org.apache.poi.poifs.storage.TestBATBlock: void testCreateXBATBlocks()>
[1357] <org.apache.poi.poifs.storage.TestBATBlock: void testEntriesPerBlock()>
[1358] <org.apache.poi.poifs.storage.TestBATBlock: void testEntriesPerXBATBlock()>
[1359] <org.apache.poi.poifs.storage.TestBATBlock: void testGetXBATChainOffset()>
[1360] <org.apache.poi.poifs.storage.TestBlockAllocationTableReader: void testBadSectorAllocationTableSize_bug48085()>
[1361] <org.apache.poi.poifs.storage.TestBlockAllocationTableReader: void testFetchBlocks()>
[1362] <org.apache.poi.poifs.storage.TestBlockAllocationTableReader: void testReadingConstructor()>
[1363] <org.apache.poi.poifs.storage.TestBlockAllocationTableReader: void testSmallBATConstructor()>
[1364] <org.apache.poi.poifs.storage.TestBlockAllocationTableWriter: void testAllocateSpace()>
[1365] <org.apache.poi.poifs.storage.TestBlockListImpl: void testFetchBlocks()>
[1366] <org.apache.poi.poifs.storage.TestBlockListImpl: void testRemove()>
[1367] <org.apache.poi.poifs.storage.TestBlockListImpl: void testSetBAT()>
[1368] <org.apache.poi.poifs.storage.TestBlockListImpl: void testZap()>
[1369] <org.apache.poi.poifs.storage.TestDocumentBlock: void testConstructor()>
[1370] <org.apache.poi.poifs.storage.TestHeaderBlockReading: void testConstructors()>
[1371] <org.apache.poi.poifs.storage.TestHeaderBlockWriting: void testConstructors()>
[1372] <org.apache.poi.poifs.storage.TestRawDataBlock: void testShortConstructor()>
[1373] <org.apache.poi.poifs.storage.TestRawDataBlock: void testSlowInputStream()>
[1374] <org.apache.poi.poifs.storage.TestSmallBlockTableReader: void testReadingConstructor()>
[1375] <org.apache.poi.poifs.storage.TestSmallBlockTableWriter: void testWritingConstructor()>
[1376] <org.apache.poi.poifs.storage.TestSmallDocumentBlock: void testCalcSize()>
[1377] <org.apache.poi.poifs.storage.TestSmallDocumentBlock: void testConvert1()>
[1378] <org.apache.poi.poifs.storage.TestSmallDocumentBlock: void testFill()>
[1379] <org.apache.poi.ss.TestSpreadsheetVersion: void testExcel2007()>
[1380] <org.apache.poi.ss.TestSpreadsheetVersion: void testExcel97()>
[1381] <org.apache.poi.ss.TestWorkbookFactory: void testCreateGeneric()>
[1382] <org.apache.poi.ss.TestWorkbookFactory: void testCreateNative()>
[1383] <org.apache.poi.ss.examples.formula.TestExcelAntUserDefinedFunction: void testSetClassName()>
[1384] <org.apache.poi.ss.examples.formula.TestExcelAntUserDefinedFunction: void testSetFunction()>
[1385] <org.apache.poi.ss.excelant.TestExcelAntPrecision: void testVerifyPrecision()>
[1386] <org.apache.poi.ss.excelant.TestExcelAntSet: void testSetWorkbookUtil()>
[1387] <org.apache.poi.ss.excelant.TestExcelAntSet: void testSetter()>
[1388] <org.apache.poi.ss.excelant.util.TestExcelAntEvaluationResult: void testCellId()>
[1389] <org.apache.poi.ss.excelant.util.TestExcelAntEvaluationResult: void testCompletedWithErrorMessage()>
[1390] <org.apache.poi.ss.excelant.util.TestExcelAntEvaluationResult: void testDelta()>
[1391] <org.apache.poi.ss.excelant.util.TestExcelAntEvaluationResult: void testPassed()>
[1392] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testAddFunction()>
[1393] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testEvaluateCell()>
[1394] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testGetEvaluator()>
[1395] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testGetSheets()>
[1396] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testGetWorkbook()>
[1397] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testSetString()>
[1398] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtil: void testStringConstructor()>
[1399] <org.apache.poi.ss.excelant.util.TestExcelAntWorkbookUtilFactory: void testGetNewWorkbookUtilInstance()>
[1400] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForAtFormat()>
[1401] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForDateFormat()>
[1402] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForDateFormatAndNegativeFormat()>
[1403] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForDateFormatWithConditions()>
[1404] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForGeneralFormat()>
[1405] <org.apache.poi.ss.format.TestCellFormat: void testApplyCellForTimeFormat()>
[1406] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasFourPartsFirstHasCondition()>
[1407] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasFourPartsFirstTwoHaveCondition()>
[1408] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasFourPartsSecondHasCondition()>
[1409] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasOnePartAndPartHasCondition()>
[1410] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasThreePartsFirstHasCondition()>
[1411] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasThreePartsFirstIsDateFirstTwoHaveCondition()>
[1412] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasThreePartsFirstTwoHaveCondition()>
[1413] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasThreePartsFirstTwoHaveConditionThirdIsGeneral()>
[1414] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasTwoPartsBothHaveCondition()>
[1415] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasTwoPartsFirstHasCondition()>
[1416] <org.apache.poi.ss.format.TestCellFormat: void testApplyFormatHasTwoPartsFirstHasConditionSecondIsGeneral()>
[1417] <org.apache.poi.ss.format.TestCellFormat: void testApplyJLabelCellForAtFormat()>
[1418] <org.apache.poi.ss.format.TestCellFormat: void testApplyJLabelCellForDateFormat()>
[1419] <org.apache.poi.ss.format.TestCellFormat: void testApplyJLabelCellForDateFormatAndNegativeFormat()>
[1420] <org.apache.poi.ss.format.TestCellFormat: void testApplyJLabelCellForGeneralFormat()>
[1421] <org.apache.poi.ss.format.TestCellFormat: void testApplyJLabelCellForTimeFormat()>
[1422] <org.apache.poi.ss.format.TestCellFormat: void testApplyObjectBoolean()>
[1423] <org.apache.poi.ss.format.TestCellFormat: void testApplyObjectDate()>
[1424] <org.apache.poi.ss.format.TestCellFormat: void testApplyObjectNumber()>
[1425] <org.apache.poi.ss.format.TestCellFormat: void testApplyObjectString()>
[1426] <org.apache.poi.ss.format.TestCellFormat: void testFormatWithFourSections()>
[1427] <org.apache.poi.ss.format.TestCellFormat: void testFormatWithThreeSections()>
[1428] <org.apache.poi.ss.format.TestCellFormat: void testNegativeFormatHasOnePart()>
[1429] <org.apache.poi.ss.format.TestCellFormat: void testNegativeFormatHasPosAndNegParts()>
[1430] <org.apache.poi.ss.format.TestCellFormat: void testNegativeFormatHasPosAndNegParts2()>
[1431] <org.apache.poi.ss.format.TestCellFormat: void testPositiveFormatHasOnePart()>
[1432] <org.apache.poi.ss.format.TestCellFormat: void testPositiveFormatHasPosAndNegParts()>
[1433] <org.apache.poi.ss.format.TestCellFormat: void testZeroFormatHasOnePart()>
[1434] <org.apache.poi.ss.format.TestCellFormat: void testZeroFormatHasPosAndNegParts()>
[1435] <org.apache.poi.ss.formula.TestCellCacheEntry: void testBasic()>
[1436] <org.apache.poi.ss.formula.TestEvaluationCache: void testBlankCellChangedToValueCell_bug46053()>
[1437] <org.apache.poi.ss.formula.TestMissingWorkbook: void testExistingWorkbook()>
[1438] <org.apache.poi.ss.formula.TestMissingWorkbook: void testMissingWorkbookMissingOverride()>
[1439] <org.apache.poi.ss.formula.TestPlainCellCache: void testLoc()>
[1440] <org.apache.poi.ss.formula.TestWorkbookEvaluator: void testAttrSum()>
[1441] <org.apache.poi.ss.formula.TestWorkbookEvaluator: void testMemFunc()>
[1442] <org.apache.poi.ss.formula.TestWorkbookEvaluator: void testMissingArg()>
[1443] <org.apache.poi.ss.formula.TestWorkbookEvaluator: void testResultOutsideRange()>
[1444] <org.apache.poi.ss.formula.atp.TestDateParser: void testFailWhenIsInvalidDate()>
[1445] <org.apache.poi.ss.formula.atp.TestDateParser: void testFailWhenLooksLikeDateButItIsnt()>
[1446] <org.apache.poi.ss.formula.atp.TestDateParser: void testFailWhenNoDate()>
[1447] <org.apache.poi.ss.formula.atp.TestDateParser: void testShouldIgnoreTimestamp()>
[1448] <org.apache.poi.ss.formula.atp.TestDateParser: void testShouldParseValidDate()>
[1449] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testFailWhenArgumentsAreNotDates()>
[1450] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testFailWhenLessThan2Arguments()>
[1451] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testFailWhenMoreThan3Arguments()>
[1452] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testFailWhenNoArguments()>
[1453] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testFailWhenStartDateAfterEndDate()>
[1454] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testReturnNetworkdays()>
[1455] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testReturnNetworkdaysWithAHoliday()>
[1456] <org.apache.poi.ss.formula.atp.TestNetworkdaysFunction: void testReturnNetworkdaysWithManyHolidays()>
[1457] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenBottomGreaterThanTop()>
[1458] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenBoundaryCheck()>
[1459] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenSameValues()>
[1460] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenSpecialCase()>
[1461] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenTopBlank()>
[1462] <org.apache.poi.ss.formula.atp.TestRandBetween: void testRandBetweenWrongInputTypes()>
[1463] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testCalculateWorkdaysShouldIgnoreWeekendHolidays()>
[1464] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testCalculateWorkdaysShouldReturnAllDaysButNoHolidays()>
[1465] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testCalculateWorkdaysShouldReturnAllDaysButNoSaturdays()>
[1466] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testCalculateWorkdaysShouldReturnAllDaysButNoSundays()>
[1467] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testCalculateWorkdaysShouldReturnJustWeekdaysWhenNoWeekend()>
[1468] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testPastDaysOfWeekShouldReturn0Past0Saturdays()>
[1469] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testPastDaysOfWeekShouldReturn1BeginningFromASaturday()>
[1470] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testPastDaysOfWeekShouldReturn1EndingAtASaturday()>
[1471] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testPastDaysOfWeekShouldReturn1Past1Saturdays()>
[1472] <org.apache.poi.ss.formula.atp.TestWorkdayCalculator: void testPastDaysOfWeekShouldReturn2Past2Saturdays()>
[1473] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testFailWhenArgumentsAreNotDatesNorNumbers()>
[1474] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testFailWhenLessThan2Arguments()>
[1475] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testFailWhenMoreThan3Arguments()>
[1476] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testFailWhenNoArguments()>
[1477] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testReturnNetworkdaysWithManyHolidays()>
[1478] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testReturnRetroativeWorkday()>
[1479] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testReturnWorkdays()>
[1480] <org.apache.poi.ss.formula.atp.TestWorkdayFunction: void testReturnWorkdaysWithDaysTruncated()>
[1481] <org.apache.poi.ss.formula.constant.TestConstantValueParser: void testEncode()>
[1482] <org.apache.poi.ss.formula.constant.TestConstantValueParser: void testGetEncodedSize()>
[1483] <org.apache.poi.ss.formula.eval.TestCircularReferences: void testIndexFormula()>
[1484] <org.apache.poi.ss.formula.eval.TestCircularReferences: void testIntermediateCircularReferenceResults_bug46898()>
[1485] <org.apache.poi.ss.formula.eval.TestDivideEval: void testDivZero()>
[1486] <org.apache.poi.ss.formula.eval.TestEqualEval: void testBlankEqualToEmptyString()>
[1487] <org.apache.poi.ss.formula.eval.TestEqualEval: void testRounding_bug47598()>
[1488] <org.apache.poi.ss.formula.eval.TestExternalFunction: void testInvoke()>
[1489] <org.apache.poi.ss.formula.eval.TestFormulaBugs: void test27349()>
[1490] <org.apache.poi.ss.formula.eval.TestFormulaBugs: void test27405()>
[1491] <org.apache.poi.ss.formula.eval.TestFormulaBugs: void test42448()>
[1492] <org.apache.poi.ss.formula.eval.TestMissingArgEval: void testCountFuncs()>
[1493] <org.apache.poi.ss.formula.eval.TestMissingArgEval: void testEvaluateMissingArgs()>
[1494] <org.apache.poi.ss.formula.eval.TestOperandResolver: void testParseDoubleInvalidStrings()>
[1495] <org.apache.poi.ss.formula.eval.TestOperandResolver: void testParseDouble_bug48472()>
[1496] <org.apache.poi.ss.formula.eval.TestOperandResolver: void testParseDouble_bug49723()>
[1497] <org.apache.poi.ss.formula.eval.TestPercentEval: void testInSpreadSheet()>
[1498] <org.apache.poi.ss.formula.eval.TestRangeEval: void testRangeUsingOffsetFunc_bug46948()>
[1499] <org.apache.poi.ss.formula.eval.TestUnaryPlusEval: void testColumnOperand()>
[1500] <org.apache.poi.ss.formula.eval.forked.TestForkedEvaluator: void testBasic()>
[1501] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testAtan()>
[1502] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testDBCS()>
[1503] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testDatedif()>
[1504] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testDdb()>
[1505] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testDproduct()>
[1506] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testIsnontext()>
[1507] <org.apache.poi.ss.formula.function.TestReadMissingBuiltInFuncs: void testUsdollar()>
[1508] <org.apache.poi.ss.formula.functions.TestCountFuncs: void testCountIfWithCriteriaReference()>
[1509] <org.apache.poi.ss.formula.functions.TestCountFuncs: void testCountifExamples()>
[1510] <org.apache.poi.ss.formula.functions.TestIndex: void testMissingArg()>
[1511] <org.apache.poi.ss.formula.functions.TestIrr: void testEvaluateInSheet()>
[1512] <org.apache.poi.ss.formula.functions.TestIrr: void testIrrFromSpreadsheet()>
[1513] <org.apache.poi.ss.formula.functions.TestIsBlank: void test3DArea()>
[1514] <org.apache.poi.ss.formula.functions.TestLeftRight: void testLeftRightNegativeOperand()>
[1515] <org.apache.poi.ss.formula.functions.TestLeftRight: void testLeftRight_bug49841()>
[1516] <org.apache.poi.ss.formula.functions.TestMatch: void testHeterogeneous()>
[1517] <org.apache.poi.ss.formula.functions.TestMatch: void testMatchArgTypeArea()>
[1518] <org.apache.poi.ss.formula.functions.TestMatch: void testReversedNumber()>
[1519] <org.apache.poi.ss.formula.functions.TestMatch: void testSimpleNumber()>
[1520] <org.apache.poi.ss.formula.functions.TestMatch: void testSimpleString()>
[1521] <org.apache.poi.ss.formula.functions.TestMathX: void testAcosh()>
[1522] <org.apache.poi.ss.formula.functions.TestNper: void testEvaluate_bug_45732()>
[1523] <org.apache.poi.ss.formula.functions.TestNper: void testSimpleEvaluate()>
[1524] <org.apache.poi.ss.formula.functions.TestNpv: void testEvaluateInSheetExample2()>
[1525] <org.apache.poi.ss.formula.functions.TestPoisson: void testCumulativeProbability()>
[1526] <org.apache.poi.ss.formula.functions.TestPoisson: void testNegativeMean()>
[1527] <org.apache.poi.ss.formula.functions.TestPoisson: void testNegativeX()>
[1528] <org.apache.poi.ss.formula.functions.TestPoisson: void testNonCumulativeProbability()>
[1529] <org.apache.poi.ss.formula.functions.TestPoisson: void testXAsDecimalNumber()>
[1530] <org.apache.poi.ss.formula.functions.TestPoisson: void testXZeroMeanZero()>
[1531] <org.apache.poi.ss.formula.functions.TestRoundFuncs: void testRounddownWithStringArg()>
[1532] <org.apache.poi.ss.formula.functions.TestRoundFuncs: void testRoundupWithStringArg()>
[1533] <org.apache.poi.ss.formula.functions.TestRowCol: void testCol()>
[1534] <org.apache.poi.ss.formula.functions.TestRowCol: void testColumns()>
[1535] <org.apache.poi.ss.formula.functions.TestRowCol: void testRow()>
[1536] <org.apache.poi.ss.formula.functions.TestRowCol: void testRows()>
[1537] <org.apache.poi.ss.formula.functions.TestSubtotal: void test50209()>
[1538] <org.apache.poi.ss.formula.functions.TestSubtotal: void testAvg()>
[1539] <org.apache.poi.ss.formula.functions.TestSubtotal: void testCount()>
[1540] <org.apache.poi.ss.formula.functions.TestSubtotal: void testCounta()>
[1541] <org.apache.poi.ss.formula.functions.TestSubtotal: void testMax()>
[1542] <org.apache.poi.ss.formula.functions.TestSubtotal: void testMin()>
[1543] <org.apache.poi.ss.formula.functions.TestSubtotal: void testStdev()>
[1544] <org.apache.poi.ss.formula.functions.TestSubtotal: void testSum()>
[1545] <org.apache.poi.ss.formula.functions.TestSumifs: void testExample1()>
[1546] <org.apache.poi.ss.formula.functions.TestSumproduct: void testAreaWithErrorCell()>
[1547] <org.apache.poi.ss.formula.functions.TestSumproduct: void testMismatchAreaDimensions()>
[1548] <org.apache.poi.ss.formula.functions.TestTFunc: void testRefValues()>
[1549] <org.apache.poi.ss.formula.functions.TestText: void testTextWithDateFormatSecondArg()>
[1550] <org.apache.poi.ss.formula.functions.TestText: void testTextWithDeciamlFormatSecondArg()>
[1551] <org.apache.poi.ss.formula.functions.TestText: void testTextWithFractionFormatSecondArg()>
[1552] <org.apache.poi.ss.formula.functions.TestText: void testTextWithStringFirstArg()>
[1553] <org.apache.poi.ss.formula.functions.TestTrunc: void testTruncWithStringArg()>
[1554] <org.apache.poi.ss.formula.ptg.TestArea3DPtg: void testToFormulaString()>
[1555] <org.apache.poi.ss.formula.ptg.TestAreaErrPtg: void testReading()>
[1556] <org.apache.poi.ss.formula.ptg.TestAreaPtg: void testFormulaParser()>
[1557] <org.apache.poi.ss.formula.ptg.TestArrayPtg: void testElementOrdering()>
[1558] <org.apache.poi.ss.formula.ptg.TestArrayPtg: void testElementOrderingInSpreadsheet()>
[1559] <org.apache.poi.ss.formula.ptg.TestArrayPtg: void testReadWriteTokenValueBytes()>
[1560] <org.apache.poi.ss.formula.ptg.TestArrayPtg: void testToFormulaString()>
[1561] <org.apache.poi.ss.formula.ptg.TestAttrPtg: void testReserializeAttrChoose()>
[1562] <org.apache.poi.ss.formula.ptg.TestErrPtg: void testReading()>
[1563] <org.apache.poi.ss.formula.ptg.TestExternalFunctionFormulas: void testParse()>
[1564] <org.apache.poi.ss.formula.ptg.TestExternalFunctionFormulas: void testReadFormulaContainingExternalFunction()>
[1565] <org.apache.poi.ss.formula.ptg.TestExternalNameReference: void testEvaluate()>
[1566] <org.apache.poi.ss.formula.ptg.TestExternalNameReference: void testReadCalcSheet()>
[1567] <org.apache.poi.ss.formula.ptg.TestExternalNameReference: void testReadReferencedSheet()>
[1568] <org.apache.poi.ss.formula.ptg.TestFuncPtg: void testNumberOfOperands()>
[1569] <org.apache.poi.ss.formula.ptg.TestFuncPtg: void testRead()>
[1570] <org.apache.poi.ss.formula.ptg.TestFuncVarPtg: void testOperandClass()>
[1571] <org.apache.poi.ss.formula.ptg.TestIntersectionPtg: void testReading()>
[1572] <org.apache.poi.ss.formula.ptg.TestPercentPtg: void testReading()>
[1573] <org.apache.poi.ss.formula.ptg.TestRangePtg: void testReading()>
[1574] <org.apache.poi.ss.formula.ptg.TestRef3DPtg: void testToFormulaString()>
[1575] <org.apache.poi.ss.formula.ptg.TestReferencePtg: void testColumnGreater255()>
[1576] <org.apache.poi.ss.formula.ptg.TestReferencePtg: void testReadWrite_tRefN_bug45091()>
[1577] <org.apache.poi.ss.formula.ptg.TestReferencePtg: void testReading()>
[1578] <org.apache.poi.ss.formula.ptg.TestUnionPtg: void testReading()>
[1579] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test18800()>
[1580] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test21334()>
[1581] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test22568()>
[1582] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test23094()>
[1583] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test28031()>
[1584] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void test42448()>
[1585] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void testAutoSize_bug506819()>
[1586] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void testBug43093()>
[1587] <org.apache.poi.ss.usermodel.BaseTestBugzillaIssues: void testMaxFunctionArguments_bug46729()>
[1588] <org.apache.poi.ss.usermodel.BaseTestCell: void test40296()>
[1589] <org.apache.poi.ss.usermodel.BaseTestCell: void testChangeTypeBoolToString()>
[1590] <org.apache.poi.ss.usermodel.BaseTestCell: void testChangeTypeErrorToBoolean()>
[1591] <org.apache.poi.ss.usermodel.BaseTestCell: void testChangeTypeErrorToNumber()>
[1592] <org.apache.poi.ss.usermodel.BaseTestCell: void testChangeTypeFormulaToBoolean()>
[1593] <org.apache.poi.ss.usermodel.BaseTestCell: void testChangeTypeStringToBool()>
[1594] <org.apache.poi.ss.usermodel.BaseTestCell: void testConvertStringFormulaCell()>
[1595] <org.apache.poi.ss.usermodel.BaseTestCell: void testDefaultStyleProperties()>
[1596] <org.apache.poi.ss.usermodel.BaseTestCell: void testSetBlank_bug47028()>
[1597] <org.apache.poi.ss.usermodel.BaseTestCell: void testSetTypeStringOnFormulaCell()>
[1598] <org.apache.poi.ss.usermodel.BaseTestCell: void testSetValues()>
[1599] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testCreate()>
[1600] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testDeleteComments()>
[1601] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testFind()>
[1602] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testModifyComments()>
[1603] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testQuickGuide()>
[1604] <org.apache.poi.ss.usermodel.BaseTestCellComment: void testReadComments()>
[1605] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testBasic()>
[1606] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testCreateBorderFormatting()>
[1607] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testCreateCF()>
[1608] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testCreateFontFormatting()>
[1609] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testCreatePatternFormatting()>
[1610] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testRead(java.lang.String)>
[1611] <org.apache.poi.ss.usermodel.BaseTestConditionalFormatting: void testRemove()>
[1612] <org.apache.poi.ss.usermodel.BaseTestDataFormat: void testBuiltinFormats()>
[1613] <org.apache.poi.ss.usermodel.BaseTestFont: void test45338()>
[1614] <org.apache.poi.ss.usermodel.BaseTestFont: void testCreateSave()>
[1615] <org.apache.poi.ss.usermodel.BaseTestFont: void testGetNumberOfFonts()>
[1616] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testFullColumnRefs()>
[1617] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testRepeatedEvaluation()>
[1618] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testRounding_bug51339()>
[1619] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testSheetLevelFormulas()>
[1620] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testSimpleArithmetic()>
[1621] <org.apache.poi.ss.usermodel.BaseTestFormulaEvaluator: void testUpdateCachedFormulaResultFromErrorToNumber_bug46479()>
[1622] <org.apache.poi.ss.usermodel.BaseTestHyperlink: void testBasicTypes()>
[1623] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testAddRemove()>
[1624] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testCreate()>
[1625] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testMultiNamedRange()>
[1626] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testMultipleNamedWrite()>
[1627] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testNamedCell_1()>
[1628] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testNamedCell_2()>
[1629] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testPrintAreaCoords()>
[1630] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testPrintAreaUnion()>
[1631] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testSinglePrintArea()>
[1632] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testSinglePrintAreaWOSheet()>
[1633] <org.apache.poi.ss.usermodel.BaseTestNamedRange: void testUnicodeNamedRange()>
[1634] <org.apache.poi.ss.usermodel.BaseTestRow: void testBoundsInMultipleRows()>
[1635] <org.apache.poi.ss.usermodel.BaseTestRow: void testCellIterator()>
[1636] <org.apache.poi.ss.usermodel.BaseTestRow: void testLastAndFirstColumns()>
[1637] <org.apache.poi.ss.usermodel.BaseTestRow: void testRemoveCell()>
[1638] <org.apache.poi.ss.usermodel.BaseTestRow: void testRowHeight()>
[1639] <org.apache.poi.ss.usermodel.BaseTestRow: void testRowStyle()>
[1640] <org.apache.poi.ss.usermodel.BaseTestSheet: void test35084()>
[1641] <org.apache.poi.ss.usermodel.BaseTestSheet: void testCloneSheet()>
[1642] <org.apache.poi.ss.usermodel.BaseTestSheet: void testDefaultColumnStyle()>
[1643] <org.apache.poi.ss.usermodel.BaseTestSheet: void testDisplayOptions()>
[1644] <org.apache.poi.ss.usermodel.BaseTestSheet: void testGetFirstLastRowNum()>
[1645] <org.apache.poi.ss.usermodel.BaseTestSheet: void testGetFooter()>
[1646] <org.apache.poi.ss.usermodel.BaseTestSheet: void testGetSetColumnHidden()>
[1647] <org.apache.poi.ss.usermodel.BaseTestSheet: void testPrintSetupLandscapeNew()>
[1648] <org.apache.poi.ss.usermodel.BaseTestSheet: void testProtectSheet()>
[1649] <org.apache.poi.ss.usermodel.BaseTestSheet: void testRemoveMerged()>
[1650] <org.apache.poi.ss.usermodel.BaseTestSheet: void testSetRepeatingRowsAndColumnsBug47294()>
[1651] <org.apache.poi.ss.usermodel.BaseTestSheet: void testShiftMerged()>
[1652] <org.apache.poi.ss.usermodel.BaseTestSheetAutosizeColumn: void testRotatedText()>
[1653] <org.apache.poi.ss.usermodel.BaseTestSheetHiding: void testHide()>
[1654] <org.apache.poi.ss.usermodel.BaseTestSheetHiding: void testHideUnHideFlags()>
[1655] <org.apache.poi.ss.usermodel.BaseTestSheetHiding: void testTextSheets()>
[1656] <org.apache.poi.ss.usermodel.BaseTestSheetHiding: void testUnHide()>
[1657] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftRowBreaks()>
[1658] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftRows()>
[1659] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftWithComments()>
[1660] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftWithFormulas()>
[1661] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftWithMergedRegions()>
[1662] <org.apache.poi.ss.usermodel.BaseTestSheetShiftRows: void testShiftWithNames()>
[1663] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testArrayFormulas_illegalCalls()>
[1664] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testModifyArrayCells_mergeCells()>
[1665] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testModifyArrayCells_removeCell()>
[1666] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testModifyArrayCells_removeRow()>
[1667] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testModifyArrayCells_setCellFormula()>
[1668] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testModifyArrayCells_setCellType()>
[1669] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testRemoveArrayFormula()>
[1670] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testSetArrayFormula_incorrectFormula()>
[1671] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testSetArrayFormula_multiCell()>
[1672] <org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas: void testSetArrayFormula_singleCell()>
[1673] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testCloneSheet()>
[1674] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testCreateSheet()>
[1675] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testCreateSheetWithLongNames()>
[1676] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testDefaultValues()>
[1677] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testGetSetActiveSheet()>
[1678] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testParentReferences()>
[1679] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testPrintArea()>
[1680] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testSetRepeatingRowsAnsColumns()>
[1681] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testSheetSelection()>
[1682] <org.apache.poi.ss.usermodel.BaseTestWorkbook: void testUnicodeInAll()>
[1683] <org.apache.poi.ss.usermodel.TestDataFormatter: void testAMPM()>
[1684] <org.apache.poi.ss.usermodel.TestDataFormatter: void testColours()>
[1685] <org.apache.poi.ss.usermodel.TestDataFormatter: void testColoursAndBrackets()>
[1686] <org.apache.poi.ss.usermodel.TestDataFormatter: void testDateWindowing()>
[1687] <org.apache.poi.ss.usermodel.TestDataFormatter: void testElapsedTime()>
[1688] <org.apache.poi.ss.usermodel.TestDataFormatter: void testEscapes()>
[1689] <org.apache.poi.ss.usermodel.TestDataFormatter: void testFractions()>
[1690] <org.apache.poi.ss.usermodel.TestDataFormatter: void testInvalidDate()>
[1691] <org.apache.poi.ss.usermodel.TestDataFormatter: void testLocale()>
[1692] <org.apache.poi.ss.usermodel.TestDataFormatter: void testLocaleBasedFormats()>
[1693] <org.apache.poi.ss.usermodel.TestDataFormatter: void testMMMMM()>
[1694] <org.apache.poi.ss.usermodel.TestDataFormatter: void testNegativeZero()>
[1695] <org.apache.poi.ss.usermodel.TestDataFormatter: void testOther()>
[1696] <org.apache.poi.ss.usermodel.TestDataFormatter: void testPaddingSpaces()>
[1697] <org.apache.poi.ss.usermodel.TestDataFormatter: void testPaddingSpacesCSV()>
[1698] <org.apache.poi.ss.usermodel.TestDataFormatter: void testScientificNotation()>
[1699] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testIOBExceptionOnInvalidIndex()>
[1700] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testMixedCellDataSource()>
[1701] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testNumericArrayDataSource()>
[1702] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testNumericCellDataSource()>
[1703] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testStringArrayDataSource()>
[1704] <org.apache.poi.ss.usermodel.charts.TestDataSources: void testStringCellDataSource()>
[1705] <org.apache.poi.ss.util.TestCellRangeAddress: void testLoad()>
[1706] <org.apache.poi.ss.util.TestCellReference: void testConvertNumToColString()>
[1707] <org.apache.poi.ss.util.TestCellReference: void testGetCellRefParts()>
[1708] <org.apache.poi.ss.util.TestCellReference: void testGetColNumFromRef()>
[1709] <org.apache.poi.ss.util.TestCellReference: void testGetRowNumFromRef()>
[1710] <org.apache.poi.ss.util.TestExpandedDouble: void testNegative()>
[1711] <org.apache.poi.ss.util.TestExpandedDouble: void testSubnormal()>
[1712] <org.apache.poi.ss.util.TestNumberComparer: void testSpecificExampleA()>
[1713] <org.apache.poi.ss.util.TestNumberComparer: void testSpecificExampleB()>
[1714] <org.apache.poi.ss.util.TestNumberToTextConverter: void testSimpleRendering_bug56156()>
[1715] <org.apache.poi.ss.util.TestRegion: void testContains()>
[1716] <org.apache.poi.ss.util.TestRegion: void testGetRegionRef()>
[1717] <org.apache.poi.ss.util.TestSheetBuilder: void testEmptyCells()>
[1718] <org.apache.poi.ss.util.TestSheetBuilder: void testNotCreateEmptyCells()>
[1719] <org.apache.poi.ss.util.TestSheetBuilder: void testSheetName()>
[1720] <org.apache.poi.ss.util.cellwalk.TestCellWalk: void testNotTraverseEmptyCells()>
[1721] <org.apache.poi.util.TestArrayUtil: void testarraycopy()>
[1722] <org.apache.poi.util.TestBinaryTree: void testClear()>
[1723] <org.apache.poi.util.TestBinaryTree: void testConstructors()>
[1724] <org.apache.poi.util.TestBinaryTree: void testContainsValue()>
[1725] <org.apache.poi.util.TestBinaryTree: void testEntrySet()>
[1726] <org.apache.poi.util.TestBinaryTree: void testEntrySet(java.util.Map)>
[1727] <org.apache.poi.util.TestBinaryTree: void testEntrySetByValue()>
[1728] <org.apache.poi.util.TestBinaryTree: void testEntrySetByValue(org.apache.poi.util.BinaryTree)>
[1729] <org.apache.poi.util.TestBinaryTree: void testGet()>
[1730] <org.apache.poi.util.TestBinaryTree: void testGetKeyForValue()>
[1731] <org.apache.poi.util.TestBinaryTree: void testIsEmpty()>
[1732] <org.apache.poi.util.TestBinaryTree: void testKeySet()>
[1733] <org.apache.poi.util.TestBinaryTree: void testKeySet(java.util.Map)>
[1734] <org.apache.poi.util.TestBinaryTree: void testKeySetByValue()>
[1735] <org.apache.poi.util.TestBinaryTree: void testKeySetByValue(org.apache.poi.util.BinaryTree)>
[1736] <org.apache.poi.util.TestBinaryTree: void testPutAll()>
[1737] <org.apache.poi.util.TestBinaryTree: void testRemove()>
[1738] <org.apache.poi.util.TestBinaryTree: void testRemoveValue()>
[1739] <org.apache.poi.util.TestBinaryTree: void testValues()>
[1740] <org.apache.poi.util.TestBinaryTree: void testValuesByValue()>
[1741] <org.apache.poi.util.TestBitField: void testClear()>
[1742] <org.apache.poi.util.TestBitField: void testClearShort()>
[1743] <org.apache.poi.util.TestBitField: void testGetRawValue()>
[1744] <org.apache.poi.util.TestBitField: void testGetShortRawValue()>
[1745] <org.apache.poi.util.TestBitField: void testGetShortValue()>
[1746] <org.apache.poi.util.TestBitField: void testGetValue()>
[1747] <org.apache.poi.util.TestBitField: void testSet()>
[1748] <org.apache.poi.util.TestBitField: void testSetBoolean()>
[1749] <org.apache.poi.util.TestBitField: void testSetLargeValues()>
[1750] <org.apache.poi.util.TestBitField: void testSetShort()>
[1751] <org.apache.poi.util.TestBitField: void testSetShortBoolean()>
[1752] <org.apache.poi.util.TestBitField: void testSetShortValue()>
[1753] <org.apache.poi.util.TestBitField: void testSetValue()>
[1754] <org.apache.poi.util.TestByteField: void testConstructors()>
[1755] <org.apache.poi.util.TestByteField: void testReadFromBytes()>
[1756] <org.apache.poi.util.TestByteField: void testReadFromStream()>
[1757] <org.apache.poi.util.TestByteField: void testSet()>
[1758] <org.apache.poi.util.TestByteField: void testWriteToBytes()>
[1759] <org.apache.poi.util.TestHexDump: void testDump()>
[1760] <org.apache.poi.util.TestHexDump: void testToHex()>
[1761] <org.apache.poi.util.TestIdentifierManager: void testBasic()>
[1762] <org.apache.poi.util.TestIdentifierManager: void testLongLimits()>
[1763] <org.apache.poi.util.TestIdentifierManager: void testRelease()>
[1764] <org.apache.poi.util.TestIdentifierManager: void testReserve()>
[1765] <org.apache.poi.util.TestIntList: void testAddAll()>
[1766] <org.apache.poi.util.TestIntList: void testClear()>
[1767] <org.apache.poi.util.TestIntList: void testConstructors()>
[1768] <org.apache.poi.util.TestIntList: void testContains()>
[1769] <org.apache.poi.util.TestIntList: void testContainsAll()>
[1770] <org.apache.poi.util.TestIntList: void testEquals()>
[1771] <org.apache.poi.util.TestIntList: void testIndexOf()>
[1772] <org.apache.poi.util.TestIntList: void testIsEmpty()>
[1773] <org.apache.poi.util.TestIntList: void testLastIndexOf()>
[1774] <org.apache.poi.util.TestIntList: void testRemoveAll()>
[1775] <org.apache.poi.util.TestIntList: void testRemoveValue()>
[1776] <org.apache.poi.util.TestIntList: void testRetainAll()>
[1777] <org.apache.poi.util.TestIntList: void testSet()>
[1778] <org.apache.poi.util.TestIntList: void testSize()>
[1779] <org.apache.poi.util.TestIntegerField: void testReadFromBytes()>
[1780] <org.apache.poi.util.TestIntegerField: void testReadFromStream()>
[1781] <org.apache.poi.util.TestIntegerField: void testSet()>
[1782] <org.apache.poi.util.TestIntegerField: void testWriteToBytes()>
[1783] <org.apache.poi.util.TestLittleEndian: void testGetInt()>
[1784] <org.apache.poi.util.TestLittleEndian: void testGetLong()>
[1785] <org.apache.poi.util.TestLittleEndian: void testGetShort()>
[1786] <org.apache.poi.util.TestLittleEndian: void testPutDouble()>
[1787] <org.apache.poi.util.TestLittleEndian: void testPutInt()>
[1788] <org.apache.poi.util.TestLittleEndian: void testPutLong()>
[1789] <org.apache.poi.util.TestLittleEndian: void testPutShort()>
[1790] <org.apache.poi.util.TestLittleEndian: void testUnsignedByteToInt()>
[1791] <org.apache.poi.util.TestLittleEndian: void testUnsignedShort()>
[1792] <org.apache.poi.util.TestLittleEndianStreams: void testRead()>
[1793] <org.apache.poi.util.TestLittleEndianStreams: void testReadFully()>
[1794] <org.apache.poi.util.TestLongField: void testReadFromBytes()>
[1795] <org.apache.poi.util.TestLongField: void testReadFromStream()>
[1796] <org.apache.poi.util.TestLongField: void testSet()>
[1797] <org.apache.poi.util.TestShortField: void testReadFromBytes()>
[1798] <org.apache.poi.util.TestShortField: void testReadFromStream()>
[1799] <org.apache.poi.util.TestShortField: void testSet()>
[1800] <org.apache.poi.util.TestShortList: void testAddAll()>
[1801] <org.apache.poi.util.TestShortList: void testClear()>
[1802] <org.apache.poi.util.TestShortList: void testConstructors()>
[1803] <org.apache.poi.util.TestShortList: void testContains()>
[1804] <org.apache.poi.util.TestShortList: void testContainsAll()>
[1805] <org.apache.poi.util.TestShortList: void testEquals()>
[1806] <org.apache.poi.util.TestShortList: void testIndexOf()>
[1807] <org.apache.poi.util.TestShortList: void testIsEmpty()>
[1808] <org.apache.poi.util.TestShortList: void testLastIndexOf()>
[1809] <org.apache.poi.util.TestShortList: void testRemoveAll()>
[1810] <org.apache.poi.util.TestShortList: void testRemoveValue()>
[1811] <org.apache.poi.util.TestShortList: void testRetainAll()>
[1812] <org.apache.poi.util.TestShortList: void testSet()>
[1813] <org.apache.poi.util.TestShortList: void testSize()>
[1814] <org.apache.poi.util.TestStringUtil: void testGetFromUnicodeHighSymbolsWithCodesMoreThan127()>
[1815] <org.apache.poi.util.TestStringUtil: void testPutCompressedUnicode()>
[1816] <org.apache.poi.util.TestStringUtil: void testPutUncompressedUnicode()>
[1817] <org.apache.poi.util.TestStringUtil: void testStringsIterator()>
[1818] <org.apache.poi.util.TestTempFile: void testCreateTempFile()>
[1819] <org.apache.poi.xslf.TestXSLFBugs: void test51187()>
[1820] <org.apache.poi.xslf.TestXSLFBugs: void testTIKA705()>
[1821] <org.apache.poi.xslf.TestXSLFSlideShow: void testContainsMainContentType()>
[1822] <org.apache.poi.xslf.TestXSLFSlideShow: void testMetadataBasics()>
[1823] <org.apache.poi.xslf.TestXSLFSlideShow: void testSlideBasics()>
[1824] <org.apache.poi.xslf.extractor.TestXSLFPowerPointExtractor: void testDifferentSubformats()>
[1825] <org.apache.poi.xslf.extractor.TestXSLFPowerPointExtractor: void testGetComments()>
[1826] <org.apache.poi.xslf.extractor.TestXSLFPowerPointExtractor: void testGetMasterText()>
[1827] <org.apache.poi.xslf.extractor.TestXSLFPowerPointExtractor: void testGetSimpleText()>
[1828] <org.apache.poi.xslf.extractor.TestXSLFPowerPointExtractor: void testTable()>
[1829] <org.apache.poi.xslf.usermodel.TestXMLSlideShow: void testContainsMainContentType()>
[1830] <org.apache.poi.xslf.usermodel.TestXMLSlideShow: void testMetadataBasics()>
[1831] <org.apache.poi.xslf.usermodel.TestXMLSlideShow: void testSlideBasics()>
[1832] <org.apache.poi.xslf.usermodel.TestXSLFAutoShape: void testTextParagraph()>
[1833] <org.apache.poi.xslf.usermodel.TestXSLFAutoShape: void testTextRun()>
[1834] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testGetters()>
[1835] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testHSL()>
[1836] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testPresetColor()>
[1837] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testSRgb()>
[1838] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testSchemeColor()>
[1839] <org.apache.poi.xslf.usermodel.TestXSLFColor: void testSys()>
[1840] <org.apache.poi.xslf.usermodel.TestXSLFConnectorShape: void testLineDecorations()>
[1841] <org.apache.poi.xslf.usermodel.TestXSLFGroupShape: void testCreateShapes()>
[1842] <org.apache.poi.xslf.usermodel.TestXSLFHyperlink: void testRead()>
[1843] <org.apache.poi.xslf.usermodel.TestXSLFPictureShape: void testCreate()>
[1844] <org.apache.poi.xslf.usermodel.TestXSLFPictureShape: void testCreateMultiplePictures()>
[1845] <org.apache.poi.xslf.usermodel.TestXSLFPictureShape: void testImageCaching()>
[1846] <org.apache.poi.xslf.usermodel.TestXSLFPictureShape: void testMerge()>
[1847] <org.apache.poi.xslf.usermodel.TestXSLFShape: void testCreateShapes()>
[1848] <org.apache.poi.xslf.usermodel.TestXSLFShape: void testReadTextShapes()>
[1849] <org.apache.poi.xslf.usermodel.TestXSLFSheet: void testCreateShapes()>
[1850] <org.apache.poi.xslf.usermodel.TestXSLFSimpleShape: void testDefaultProperties()>
[1851] <org.apache.poi.xslf.usermodel.TestXSLFSimpleShape: void testFill()>
[1852] <org.apache.poi.xslf.usermodel.TestXSLFSimpleShape: void testLineStyles()>
[1853] <org.apache.poi.xslf.usermodel.TestXSLFSimpleShape: void testShadowEffects()>
[1854] <org.apache.poi.xslf.usermodel.TestXSLFSlide: void testCreateSlide()>
[1855] <org.apache.poi.xslf.usermodel.TestXSLFSlide: void testImportContent()>
[1856] <org.apache.poi.xslf.usermodel.TestXSLFSlide: void testMergeSlides()>
[1857] <org.apache.poi.xslf.usermodel.TestXSLFSlide: void testReadShapes()>
[1858] <org.apache.poi.xslf.usermodel.TestXSLFSlideShow: void testCreateSlide()>
[1859] <org.apache.poi.xslf.usermodel.TestXSLFSlideShow: void testDimension()>
[1860] <org.apache.poi.xslf.usermodel.TestXSLFSlideShow: void testRemoveSlide()>
[1861] <org.apache.poi.xslf.usermodel.TestXSLFSlideShow: void testSlideLayout()>
[1862] <org.apache.poi.xslf.usermodel.TestXSLFSlideShow: void testSlideMasters()>
[1863] <org.apache.poi.xslf.usermodel.TestXSLFTable: void testRead()>
[1864] <org.apache.poi.xslf.usermodel.TestXSLFTableStyles: void testRead()>
[1865] <org.apache.poi.xslf.usermodel.TestXSLFTextBox: void testDefaultTextStyle()>
[1866] <org.apache.poi.xslf.usermodel.TestXSLFTextParagraph: void testParagraphProperties()>
[1867] <org.apache.poi.xslf.usermodel.TestXSLFTextParagraph: void testThemeInheritance()>
[1868] <org.apache.poi.xslf.usermodel.TestXSLFTextRun: void testRunProperties()>
[1869] <org.apache.poi.xslf.usermodel.TestXSLFTextShape: void testBodyStyles()>
[1870] <org.apache.poi.xslf.usermodel.TestXSLFTextShape: void testTitleStyles()>
[1871] <org.apache.poi.xssf.TestSheetProtection: void testShouldReadWorkbookProtection()>
[1872] <org.apache.poi.xssf.TestSheetProtection: void testWriteAutoFilter()>
[1873] <org.apache.poi.xssf.TestSheetProtection: void testWriteDeleteColumns()>
[1874] <org.apache.poi.xssf.TestSheetProtection: void testWriteDeleteRows()>
[1875] <org.apache.poi.xssf.TestSheetProtection: void testWriteFormatCells()>
[1876] <org.apache.poi.xssf.TestSheetProtection: void testWriteFormatColumns()>
[1877] <org.apache.poi.xssf.TestSheetProtection: void testWriteFormatRows()>
[1878] <org.apache.poi.xssf.TestSheetProtection: void testWriteInsertColumns()>
[1879] <org.apache.poi.xssf.TestSheetProtection: void testWriteInsertHyperlinks()>
[1880] <org.apache.poi.xssf.TestSheetProtection: void testWriteInsertRows()>
[1881] <org.apache.poi.xssf.TestSheetProtection: void testWriteObjects()>
[1882] <org.apache.poi.xssf.TestSheetProtection: void testWritePivotTables()>
[1883] <org.apache.poi.xssf.TestSheetProtection: void testWriteScenarios()>
[1884] <org.apache.poi.xssf.TestSheetProtection: void testWriteSelectEnableLocking()>
[1885] <org.apache.poi.xssf.TestSheetProtection: void testWriteSelectLockedCells()>
[1886] <org.apache.poi.xssf.TestSheetProtection: void testWriteSelectUnlockedCells()>
[1887] <org.apache.poi.xssf.TestSheetProtection: void testWriteSort()>
[1888] <org.apache.poi.xssf.TestWorkbookProtection: void testIntegration()>
[1889] <org.apache.poi.xssf.TestWorkbookProtection: void testShouldReadWorkbookProtection()>
[1890] <org.apache.poi.xssf.TestWorkbookProtection: void testShouldWriteRevisionLock()>
[1891] <org.apache.poi.xssf.TestWorkbookProtection: void testShouldWriteStructureLock()>
[1892] <org.apache.poi.xssf.TestWorkbookProtection: void testShouldWriteWindowsLock()>
[1893] <org.apache.poi.xssf.eventusermodel.TestReadOnlySharedStringsTable: void testParse()>
[1894] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testComments()>
[1895] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testGetBits()>
[1896] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testOrderOfSheets()>
[1897] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testSheets()>
[1898] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testStrings()>
[1899] <org.apache.poi.xssf.eventusermodel.TestXSSFReader: void testStyles()>
[1900] <org.apache.poi.xssf.extractor.TestXSSFEventBasedExcelExtractor: void testComparedToOLE2()>
[1901] <org.apache.poi.xssf.extractor.TestXSSFEventBasedExcelExtractor: void testGetComplexText()>
[1902] <org.apache.poi.xssf.extractor.TestXSSFEventBasedExcelExtractor: void testGetSimpleText()>
[1903] <org.apache.poi.xssf.extractor.TestXSSFEventBasedExcelExtractor: void testInlineStrings()>
[1904] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testComments()>
[1905] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testComparedToOLE2()>
[1906] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testGetComplexText()>
[1907] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testGetSimpleText()>
[1908] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testHeaderFooter()>
[1909] <org.apache.poi.xssf.extractor.TestXSSFExcelExtractor: void testInlineStrings()>
[1910] <org.apache.poi.xssf.extractor.TestXSSFExportToXML: void testExportToXML()>
[1911] <org.apache.poi.xssf.extractor.TestXSSFExportToXML: void testExportToXMLInverseOrder()>
[1912] <org.apache.poi.xssf.extractor.TestXSSFExportToXML: void testMultiTable()>
[1913] <org.apache.poi.xssf.extractor.TestXSSFExportToXML: void testXPathOrdering()>
[1914] <org.apache.poi.xssf.extractor.TestXSSFImportFromXML: void testImportFromXML()>
[1915] <org.apache.poi.xssf.extractor.TestXSSFImportFromXML: void testMultiTable()>
[1916] <org.apache.poi.xssf.extractor.TestXSSFImportFromXML: void testSingleAttributeCellWithNamespace()>
[1917] <org.apache.poi.xssf.io.TestLoadSaveXSSF: void testLoadPictures()>
[1918] <org.apache.poi.xssf.io.TestLoadSaveXSSF: void testLoadSample()>
[1919] <org.apache.poi.xssf.model.TestCalculationChain: void test46535()>
[1920] <org.apache.poi.xssf.model.TestCommentsTable: void testFindAuthor()>
[1921] <org.apache.poi.xssf.model.TestCommentsTable: void testGetCellComment()>
[1922] <org.apache.poi.xssf.model.TestCommentsTable: void testReadWriteMultipleAuthors()>
[1923] <org.apache.poi.xssf.model.TestCommentsTable: void testRemoveComment()>
[1924] <org.apache.poi.xssf.model.TestCommentsTable: void testWriteRead()>
[1925] <org.apache.poi.xssf.model.TestMapInfo: void testMapInfoExists()>
[1926] <org.apache.poi.xssf.model.TestSharedStringsTable: void testBug48936()>
[1927] <org.apache.poi.xssf.model.TestSharedStringsTable: void testCreateNew()>
[1928] <org.apache.poi.xssf.model.TestSharedStringsTable: void testReadWrite()>
[1929] <org.apache.poi.xssf.model.TestStylesTable: void testCreateSaveLoad()>
[1930] <org.apache.poi.xssf.model.TestStylesTable: void testLoadExisting()>
[1931] <org.apache.poi.xssf.model.TestStylesTable: void testLoadSaveLoad()>
[1932] <org.apache.poi.xssf.model.TestStylesTable: void testPopulateExisting()>
[1933] <org.apache.poi.xssf.model.TestStylesTable: void testPopulateNew()>
[1934] <org.apache.poi.xssf.streaming.TestSXSSFCell: void testConvertStringFormulaCell()>
[1935] <org.apache.poi.xssf.streaming.TestSXSSFCell: void testEncodingbeloAscii()>
[1936] <org.apache.poi.xssf.streaming.TestSXSSFCell: void testSetTypeStringOnFormulaCell()>
[1937] <org.apache.poi.xssf.streaming.TestSXSSFCell: void testXmlEncoding()>
[1938] <org.apache.poi.xssf.streaming.TestSXSSFSheet: void test35084()>
[1939] <org.apache.poi.xssf.streaming.TestSXSSFSheet: void testCloneSheet()>
[1940] <org.apache.poi.xssf.streaming.TestSXSSFSheet: void testCloneSheetMultipleTimes()>
[1941] <org.apache.poi.xssf.streaming.TestSXSSFSheet: void testShiftMerged()>
[1942] <org.apache.poi.xssf.streaming.TestSXSSFWorkbook: void testAddToExistingWorkbook()>
[1943] <org.apache.poi.xssf.streaming.TestSXSSFWorkbook: void testCloneSheet()>
[1944] <org.apache.poi.xssf.streaming.TestSXSSFWorkbook: void testExistingWorkbook()>
[1945] <org.apache.poi.xssf.streaming.TestSXSSFWorkbook: void testGZipSheetdataWriter()>
[1946] <org.apache.poi.xssf.streaming.TestSXSSFWorkbook: void testSetSheetName()>
[1947] <org.apache.poi.xssf.usermodel.TestFormulaEvaluatorOnXSSF: void testOpen()>
[1948] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test45430()>
[1949] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test45431()>
[1950] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test47490()>
[1951] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test47504()>
[1952] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test47815()>
[1953] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test48539()>
[1954] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test48718()>
[1955] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test48779()>
[1956] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test48877()>
[1957] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test48923()>
[1958] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49253()>
[1959] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49325()>
[1960] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49609()>
[1961] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49783()>
[1962] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49941()>
[1963] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test49966()>
[1964] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test50440And51875()>
[1965] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test50786()>
[1966] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test50795()>
[1967] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test50846()>
[1968] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test50867()>
[1969] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test51037()>
[1970] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test51222()>
[1971] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test51470()>
[1972] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test51850()>
[1973] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test51963()>
[1974] <org.apache.poi.xssf.usermodel.TestXSSFBugs: void test5301()>
[1975] <org.apache.poi.xssf.usermodel.TestXSSFCell: void testFormulaString()>
[1976] <org.apache.poi.xssf.usermodel.TestXSSFCell: void testGetErrorCellValueFromFormulaCell()>
[1977] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testBug52348()>
[1978] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testCloneStyleDiffWB()>
[1979] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testCloneStyleSameWB()>
[1980] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testDefaultStyles()>
[1981] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetFillForegroundColor()>
[1982] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetFont()>
[1983] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetBorderBottom()>
[1984] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetBorderLeft()>
[1985] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetBorderRight()>
[1986] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetBorderTop()>
[1987] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetBottomBorderColor()>
[1988] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetFillBackgroundColor()>
[1989] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetHidden()>
[1990] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetLeftBorderColor()>
[1991] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetRightBorderColor()>
[1992] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetTopBorderColor()>
[1993] <org.apache.poi.xssf.usermodel.TestXSSFCellStyle: void testGetSetWrapText()>
[1994] <org.apache.poi.xssf.usermodel.TestXSSFChart: void testGetAccessors()>
[1995] <org.apache.poi.xssf.usermodel.TestXSSFChart: void testGetCharts()>
[1996] <org.apache.poi.xssf.usermodel.TestXSSFChartSheet: void testGetAccessors()>
[1997] <org.apache.poi.xssf.usermodel.TestXSSFChartSheet: void testGetCharts()>
[1998] <org.apache.poi.xssf.usermodel.TestXSSFChartSheet: void testXSSFFactory()>
[1999] <org.apache.poi.xssf.usermodel.TestXSSFColor: void testARGBColour()>
[2000] <org.apache.poi.xssf.usermodel.TestXSSFColor: void testRGBColour()>
[2001] <org.apache.poi.xssf.usermodel.TestXSSFComment: void testAuthor()>
[2002] <org.apache.poi.xssf.usermodel.TestXSSFComment: void testConstructor()>
[2003] <org.apache.poi.xssf.usermodel.TestXSSFComment: void testGetSetCol()>
[2004] <org.apache.poi.xssf.usermodel.TestXSSFComment: void testGetSetRow()>
[2005] <org.apache.poi.xssf.usermodel.TestXSSFComment: void testSetString()>
[2006] <org.apache.poi.xssf.usermodel.TestXSSFDataFormat: void test49928()>
[2007] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testAddRow()>
[2008] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testCreateDialogSheet()>
[2009] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetAllHeadersFooters()>
[2010] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetDialog()>
[2011] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetFooter()>
[2012] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetScenarioProtect()>
[2013] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetSetAutoBreaks()>
[2014] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetSetHorizontallyCentered()>
[2015] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testGetSetVerticallyCentered()>
[2016] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testIsSetDisplayFormulas()>
[2017] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testIsSetDisplayGridLines()>
[2018] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testIsSetDisplayRowColHeadings()>
[2019] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testIsSetFitToPage()>
[2020] <org.apache.poi.xssf.usermodel.TestXSSFDialogSheet: void testIsSetPrintGridlines()>
[2021] <org.apache.poi.xssf.usermodel.TestXSSFDrawing: void testClone()>
[2022] <org.apache.poi.xssf.usermodel.TestXSSFDrawing: void testMultipleDrawings()>
[2023] <org.apache.poi.xssf.usermodel.TestXSSFDrawing: void testNew()>
[2024] <org.apache.poi.xssf.usermodel.TestXSSFDrawing: void testRead()>
[2025] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testColor()>
[2026] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testConstructor()>
[2027] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testFamily()>
[2028] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testFontHeight()>
[2029] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testFontHeightInPoint()>
[2030] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testFontName()>
[2031] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testItalic()>
[2032] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testScheme()>
[2033] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testStrikeout()>
[2034] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testThemeColor()>
[2035] <org.apache.poi.xssf.usermodel.TestXSSFFont: void testUnderline()>
[2036] <org.apache.poi.xssf.usermodel.TestXSSFFormulaEvaluation: void testEvaluateColumnGreaterThan255()>
[2037] <org.apache.poi.xssf.usermodel.TestXSSFFormulaEvaluation: void testSharedFormulas_evaluateInCell()>
[2038] <org.apache.poi.xssf.usermodel.TestXSSFFormulaParser: void testBuiltInFormulas()>
[2039] <org.apache.poi.xssf.usermodel.TestXSSFFormulaParser: void testParse()>
[2040] <org.apache.poi.xssf.usermodel.TestXSSFHeaderFooter: void testGetSetCenterLeftRight()>
[2041] <org.apache.poi.xssf.usermodel.TestXSSFHeaderFooter: void testStripFields()>
[2042] <org.apache.poi.xssf.usermodel.TestXSSFHyperlink: void test52716()>
[2043] <org.apache.poi.xssf.usermodel.TestXSSFHyperlink: void testInvalidURLs()>
[2044] <org.apache.poi.xssf.usermodel.TestXSSFHyperlink: void testLoadExisting()>
[2045] <org.apache.poi.xssf.usermodel.TestXSSFHyperlink: void testLoadSave()>
[2046] <org.apache.poi.xssf.usermodel.TestXSSFName: void testRepeatingRowsAndColums()>
[2047] <org.apache.poi.xssf.usermodel.TestXSSFPicture: void testCreate()>
[2048] <org.apache.poi.xssf.usermodel.TestXSSFPicture: void testShapeId()>
[2049] <org.apache.poi.xssf.usermodel.TestXSSFPictureData: void testNew()>
[2050] <org.apache.poi.xssf.usermodel.TestXSSFPictureData: void testRead()>
[2051] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetCopies()>
[2052] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetDraft()>
[2053] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetFitWidthHeight()>
[2054] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetHVResolution()>
[2055] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetHeaderFooterMargin()>
[2056] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetLeftToRight()>
[2057] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetNoColor()>
[2058] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetNotes()>
[2059] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetPageStart()>
[2060] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetPaperSize()>
[2061] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetScale()>
[2062] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetUsePage()>
[2063] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetGetValidSettings()>
[2064] <org.apache.poi.xssf.usermodel.TestXSSFPrintSetup: void testSetSaveRead()>
[2065] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testApplyFont()>
[2066] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testApplyFont_usermodel()>
[2067] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testClearFormatting()>
[2068] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testCreate()>
[2069] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testLineBreaks_bug48877()>
[2070] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testPreserveSpaces()>
[2071] <org.apache.poi.xssf.usermodel.TestXSSFRichTextString: void testUtfDecode()>
[2072] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void test47804()>
[2073] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void test47862()>
[2074] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void test49966()>
[2075] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testAutoSizeColumn()>
[2076] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testColumnWidth_lowlevel()>
[2077] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testCommentsTable()>
[2078] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testCreateRow()>
[2079] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testGetActiveCell()>
[2080] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testGetAllHeadersFooters()>
[2081] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testGetCellComment()>
[2082] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testGroupUngroupColumn()>
[2083] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testNewMergedRegionAt()>
[2084] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testRemoveMergedRegion_lowlevel()>
[2085] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testSetCellComment()>
[2086] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testSetColumnGroupCollapsed()>
[2087] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testSetDefaultColumnStyle()>
[2088] <org.apache.poi.xssf.usermodel.TestXSSFSheet: void testTables()>
[2089] <org.apache.poi.xssf.usermodel.TestXSSFSheetUpdateArrayFormulas: void testXSSFSetArrayFormula_multiCell()>
[2090] <org.apache.poi.xssf.usermodel.TestXSSFSheetUpdateArrayFormulas: void testXSSFSetArrayFormula_singleCell()>
[2091] <org.apache.poi.xssf.usermodel.TestXSSFVMLDrawing: void testFindCommentShape()>
[2092] <org.apache.poi.xssf.usermodel.TestXSSFVMLDrawing: void testNew()>
[2093] <org.apache.poi.xssf.usermodel.TestXSSFVMLDrawing: void testRemoveCommentShape()>
[2094] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testBug47668()>
[2095] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testBug47737()>
[2096] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testBug47813()>
[2097] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testBug49702()>
[2098] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testExisting()>
[2099] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testGetCellStyleAt()>
[2100] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testGetFontAt()>
[2101] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testGetNumCellStyles()>
[2102] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testIncrementSheetId()>
[2103] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testLoadSave()>
[2104] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testRecalcId()>
[2105] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testSaveLoadNew()>
[2106] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testSetTabColor()>
[2107] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testStyles()>
[2108] <org.apache.poi.xssf.usermodel.TestXSSFWorkbook: void testWorkbookProperties()>
[2109] <org.apache.poi.xssf.usermodel.charts.TestXSSFChartAxis: void testLogBaseIllegalArgument()>
[2110] <org.apache.poi.xssf.usermodel.charts.TestXSSFChartAxis: void testLogBaseLegalArgument()>
[2111] <org.apache.poi.xssf.usermodel.charts.TestXSSFChartAxis: void testMaxAndMinAccessMethods()>
[2112] <org.apache.poi.xssf.usermodel.charts.TestXSSFChartAxis: void testNumberFormat()>
[2113] <org.apache.poi.xssf.usermodel.charts.TestXSSFChartLegend: void testLegendPositionAccessMethods()>
[2114] <org.apache.poi.xssf.usermodel.extensions.TestXSSFBorder: void testGetBorderStyle()>
[2115] <org.apache.poi.xssf.usermodel.extensions.TestXSSFCellFill: void testColorFromTheme()>
[2116] <org.apache.poi.xssf.usermodel.extensions.TestXSSFCellFill: void testGetFillBackgroundColor()>
[2117] <org.apache.poi.xssf.usermodel.extensions.TestXSSFCellFill: void testGetFillForegroundColor()>
[2118] <org.apache.poi.xssf.usermodel.extensions.TestXSSFCellFill: void testGetNotModifies()>
[2119] <org.apache.poi.xssf.usermodel.helpers.TestColumnHelper: void testAddCleanColIntoCols()>
[2120] <org.apache.poi.xssf.usermodel.helpers.TestColumnHelper: void testCleanColumns()>
[2121] <org.apache.poi.xssf.usermodel.helpers.TestColumnHelper: void testGetColumn()>
[2122] <org.apache.poi.xssf.usermodel.helpers.TestColumnHelper: void testSortColumns()>
[2123] <org.apache.poi.xssf.usermodel.helpers.TestHeaderFooterHelper: void testGetCenterLeftRightSection()>
[2124] <org.apache.poi.xssf.usermodel.helpers.TestHeaderFooterHelper: void testSetCenterLeftRightSection()>
[2125] <org.apache.poi.xssf.util.TestCTColComparator: void testArraysSort()>
[2126] <org.apache.poi.xssf.util.TestCTColComparator: void testCompare()>
[2127] <org.apache.poi.xssf.util.TestNumericRanges: void testGetOverlappingType()>
[2128] <org.apache.poi.xwpf.TestAllExtendedProperties: void testGetAllExtendedProperties()>
[2129] <org.apache.poi.xwpf.TestDocumentProtection: void testIntegration()>
[2130] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldEnforceForComments()>
[2131] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldEnforceForFillingForms()>
[2132] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldEnforceForReadOnly()>
[2133] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldEnforceForTrackedChanges()>
[2134] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldReadEnforcementProperties()>
[2135] <org.apache.poi.xwpf.TestDocumentProtection: void testShouldUnsetEnforcement()>
[2136] <org.apache.poi.xwpf.TestDocumentProtection: void testUpdateFields()>
[2137] <org.apache.poi.xwpf.TestPackageCorePropertiesGetKeywords: void testGetSetKeywords()>
[2138] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testDOCMFiles()>
[2139] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testDocTabs()>
[2140] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testDrawings()>
[2141] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testEndnotes()>
[2142] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testFldSimpleContent()>
[2143] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testFootnotes()>
[2144] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testFormFootnotes()>
[2145] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testGetComplexText()>
[2146] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testGetSimpleText()>
[2147] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testGetWithHyperlinks()>
[2148] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testHeadersFooters()>
[2149] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testInsertedDeletedText()>
[2150] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testNoFieldCodes()>
[2151] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testParagraphHeader()>
[2152] <org.apache.poi.xwpf.extractor.TestXWPFWordExtractor: void testTableFootnotes()>
[2153] <org.apache.poi.xwpf.model.TestXWPFDecorators: void testHyperlink()>
[2154] <org.apache.poi.xwpf.model.TestXWPFHeaderFooterPolicy: void testContents()>
[2155] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testAddParagraph()>
[2156] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testAddPicture()>
[2157] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testAllPictureFormats()>
[2158] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testContainsMainContentType()>
[2159] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testFindPackagePictureData()>
[2160] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testGetAllPackagePictures()>
[2161] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testGetAllPictures()>
[2162] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testMetadataBasics()>
[2163] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testMetadataComplex()>
[2164] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testPictureHandlingComplex()>
[2165] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testPictureHandlingHeaderDocumentImages()>
[2166] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testPictureHandlingSimpleFile()>
[2167] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testRegisterPackagePictureData()>
[2168] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testRemoveBodyElement()>
[2169] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testSettings()>
[2170] <org.apache.poi.xwpf.usermodel.TestXWPFDocument: void testWorkbookProperties()>
[2171] <org.apache.poi.xwpf.usermodel.TestXWPFFootnotes: void testAddFootnotesToDocument()>
[2172] <org.apache.poi.xwpf.usermodel.TestXWPFHeader: void testImageInHeader()>
[2173] <org.apache.poi.xwpf.usermodel.TestXWPFHeader: void testSetHeader()>
[2174] <org.apache.poi.xwpf.usermodel.TestXWPFHeader: void testSetWatermark()>
[2175] <org.apache.poi.xwpf.usermodel.TestXWPFHeader: void testSimpleHeader()>
[2176] <org.apache.poi.xwpf.usermodel.TestXWPFHeadings: void testSetParagraphStyle()>
[2177] <org.apache.poi.xwpf.usermodel.TestXWPFNumbering: void testAddNumberingToDoc()>
[2178] <org.apache.poi.xwpf.usermodel.TestXWPFNumbering: void testCompareAbstractNum()>
[2179] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testAddingRuns()>
[2180] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testBookmarks()>
[2181] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testGetSetNumID()>
[2182] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testPictures()>
[2183] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetAlignment()>
[2184] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetBorderTop()>
[2185] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetPageBreak()>
[2186] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetSpacing()>
[2187] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetSpacingLineRule()>
[2188] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetVerticalAlignment()>
[2189] <org.apache.poi.xwpf.usermodel.TestXWPFParagraph: void testSetGetWordWrap()>
[2190] <org.apache.poi.xwpf.usermodel.TestXWPFPictureData: void testNew()>
[2191] <org.apache.poi.xwpf.usermodel.TestXWPFPictureData: void testPictureInHeader()>
[2192] <org.apache.poi.xwpf.usermodel.TestXWPFPictureData: void testRead()>
[2193] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testAddCarriageReturn()>
[2194] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testAddPageBreak()>
[2195] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testAddPicture()>
[2196] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetBold()>
[2197] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetColor()>
[2198] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetFontFamily()>
[2199] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetFontSize()>
[2200] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetItalic()>
[2201] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetStrike()>
[2202] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetText()>
[2203] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetTextForegroundBackground()>
[2204] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetUnderline()>
[2205] <org.apache.poi.xwpf.usermodel.TestXWPFRun: void testSetGetVAlign()>
[2206] <org.apache.poi.xwpf.usermodel.TestXWPFSmartTag: void testSmartTags()>
[2207] <org.apache.poi.xwpf.usermodel.TestXWPFStyles: void test52449()>
[2208] <org.apache.poi.xwpf.usermodel.TestXWPFStyles: void testAddStylesToDocument()>
[2209] <org.apache.poi.xwpf.usermodel.TestXWPFStyles: void testGetUsedStyles()>
[2210] <org.apache.poi.xwpf.usermodel.TestXWPFStyles: void testLatentStyles()>
[2211] <org.apache.poi.xwpf.usermodel.TestXWPFStyles: void testType()>
[2212] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testConstructor()>
[2213] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testCreateRow()>
[2214] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testCreateTable()>
[2215] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testGetText()>
[2216] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testSetGetColBandSize()>
[2217] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testSetGetHeight()>
[2218] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testSetGetRowBandSize()>
[2219] <org.apache.poi.xwpf.usermodel.TestXWPFTable: void testSetGetWidth()>
[2220] <org.apache.poi.xwpf.usermodel.TestXWPFTableCell: void testSetGetColor()>
[2221] <org.apache.poi.xwpf.usermodel.TestXWPFTableCell: void testSetGetVertAlignment()>
[2222] <org.apache.poi.xwpf.usermodel.TestXWPFTableRow: void testCreateRow()>
[2223] <org.apache.poi.xwpf.usermodel.TestXWPFTableRow: void testSetGetCantSplitRow()>
[2224] <org.apache.poi.xwpf.usermodel.TestXWPFTableRow: void testSetGetRepeatHeader()>
