[1] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (12): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.engine.ColumnTitleTest: void testCreateAggregationColumnDescription()>
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:82, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:83, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:84, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:88, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:89, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:90, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:94, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:95, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:96, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:100, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:102, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:104, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest: void testCreateColumnDescription()>
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:101, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:102, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:103, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:106, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:108, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:110, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:114, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:116, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:118, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:123, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:125, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:127, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[2] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (11): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:313, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:314, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:315, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:316, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:317, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:318, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:321, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:322, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:323, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:324, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1492, 8.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1493, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1494, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1495, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1496, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1497, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1498, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1499, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1500, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1501, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1502, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 4, packages: 2, classes: 2): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:314, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:315, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:316, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:317, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:318, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1498, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1499, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1500, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1501, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1502, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:126, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:127, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:128, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildDataTableRows()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:366, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:367, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:368, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:369, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:370, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:371, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:372, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:373, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:374, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:436, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:482, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:530, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:571, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:624, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:675, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:728, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:775, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:919, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:959, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:119, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:210, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:230, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:276, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:313, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:369, 6.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:831, 9.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:867, 12.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1002, 10.87%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1057, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithEmptyTable()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1158, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1212, 8.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1273, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1330, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1368, 11.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1421, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1492, 8.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1570, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1610, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1649, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[3] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 4, controlFlowSize: 11, isHighPriority: true): 
Assertions (9): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testTimestampConstructor()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:176, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:177, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:180, 9.52%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:185, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:189, 28.57%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:195, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:196, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:199, 9.52%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testDateConstructor()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:123, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:124, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:127, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:132, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:133, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:136, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:141, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:142, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:145, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 2, classes: 6): 
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetNull()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testTimestampConstructor()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:177, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:196, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testDateConstructor()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:124, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:133, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:142, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:45, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:48, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:160, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:124, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:125, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:32, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:34, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:144, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:152, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
==============================================

[4] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 8, controlFlowSize: 36, isHighPriority: true): 
Assertions (8): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:66, 6.06%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:67, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:68, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:69, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:70, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:71, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:73, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null, ($i6 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:74, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null, ($i6 <= 0)=null, ($i7 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:59, 6.45%> (predicates:{($i0 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:60, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:61, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:62, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:63, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:64, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:66, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:67, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[5] Set (editDistance: 0, isComplete: true, packages: 1, classes: 5, uniqueness: 7, controlFlowSize: 23, isHighPriority: true): 
Assertions (8): 
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testComapreNullCases()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:82, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:88, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:97, 8.33%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:98, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:101, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:102, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:106, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:108, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:267, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:273, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:282, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:283, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:286, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:287, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:291, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:293, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:272, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:278, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:287, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:288, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:291, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:292, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:296, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:298, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testComapreNullCases()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:75, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:81, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:90, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:91, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:94, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:95, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:99, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:101, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:317, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:324, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:333, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:334, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:337, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:338, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:342, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:344, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[6] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 3, controlFlowSize: 0, isHighPriority: true): 
Assertions (7): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:607, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:609, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:611, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:615, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:616, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:617, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:619, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:660, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:662, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:664, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:668, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:669, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:670, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:672, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (6):
Set (score: 1.00, ccsize: 7, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:615, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:617, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:668, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:670, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:971, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 7, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:616, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:669, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:607, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testMultipleAndAssociativity()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:627, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:660, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReallyComplexFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:681, 4.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPrecedence()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:767, 5.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:944, 5.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:611, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testMultipleAndAssociativity()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:632, 13.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:664, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReallyComplexFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:685, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPrecedence()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:771, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:948, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 5, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:609, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testMultipleAndAssociativity()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:629, 13.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:662, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReallyComplexFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:683, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPrecedence()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:769, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:946, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 5, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:619, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:672, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[7] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 4, controlFlowSize: 0, isHighPriority: true): 
Assertions (6): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:537, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:539, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:541, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:543, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:544, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:545, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:579, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:581, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:583, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:585, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:586, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:587, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (6):
Set (score: 1.00, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:528, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:541, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:583, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnicodeInput()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:107, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:485, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:498, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:511, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:524, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:537, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:551, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:565, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:579, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 7, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:530, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:543, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:585, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnicodeInput()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:109, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:487, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:500, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:513, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:526, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:539, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:553, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:567, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:581, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 5, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:492, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:505, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:518, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:531, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:544, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:558, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:572, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:586, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 5, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:545, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:559, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:573, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:587, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[8] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<com.google.visualization.datasource.datatable.DataTableTest: void testColumnDistinctValues()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:198, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:200, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:201, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:202, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:203, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:205, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1559, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1570, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1571, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1572, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1573, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1579, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1598, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1610, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1611, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1612, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1613, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1621, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1637, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1649, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1650, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1651, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1652, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1659, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[9] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3, uniqueness: 1, controlFlowSize: 0, isHighPriority: true): 
Assertions (6): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.DataSourceHelperTest: void testGenerateResponse()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:186, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:200, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:214, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:228, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:243, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:252, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testSpecificPatternFormattingInUSLocale()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:237, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:241, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:245, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:249, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:254, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:258, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.CsvRendererTest: void testCustomPropertiesToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:225, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:228, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:231, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:236, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:239, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:242, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[10] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:831, 9.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:832, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:833, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:834, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:837, 5.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:867, 12.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:868, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:869, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:870, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:873, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1158, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1159, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1160, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1161, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1164, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:370, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:371, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:372, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:373, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:374, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:375, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:376, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:377, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:378, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:379, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:380, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:381, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:382, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:383, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:384, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:385, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:729, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:730, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:731, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:732, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:733, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:776, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:777, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:778, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:779, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:780, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:531, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:532, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:533, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:534, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:572, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:573, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:574, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:575, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:576, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:625, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:626, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:627, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:628, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:629, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:676, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:677, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:678, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:437, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:438, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:439, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:483, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:484, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:485, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:486, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1058, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1059, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1060, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1061, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1062, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1063, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1064, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1003, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1004, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1005, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1006, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1007, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1008, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:321, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:322, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:323, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:324, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:920, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:921, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:922, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:960, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:961, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:120, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:121, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:122, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:211, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:212, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:213, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:832, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:833, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:834, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:868, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:869, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:870, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1159, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1160, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1161, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1571, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1572, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1573, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1611, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1612, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1613, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1650, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1651, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1652, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:250, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:251, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1213, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1215, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1274, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1275, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1331, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1332, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1369, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1370, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1422, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1423, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:231, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:277, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:436, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:482, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:530, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:571, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:624, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:675, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:728, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:775, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:919, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:959, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:119, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:210, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:230, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:276, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:313, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:369, 6.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:831, 9.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:867, 12.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1002, 10.87%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1057, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithEmptyTable()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1158, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1212, 8.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1273, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1330, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1368, 11.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1421, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1492, 8.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1570, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1610, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1649, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[11] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 1, controlFlowSize: 0, isHighPriority: true): 
Assertions (5): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testNumberAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:41, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:42, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:43, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:44, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:45, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testGetValueFromEmptyAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:80, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:82, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:83, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:85, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:86, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testNumberAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:41, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:42, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:43, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:44, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:45, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testGetValueFromEmptyAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:80, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:82, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:83, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:85, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:86, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testStringAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:69, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:70, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:71, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[12] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 3, controlFlowSize: 0, isHighPriority: true): 
Assertions (5): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:498, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:500, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:502, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:504, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:505, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:511, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:513, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:515, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:517, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:518, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (5):
Set (score: 1.00, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:502, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:515, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:569, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 1.00, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnicodeInput()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:107, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:485, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:498, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:511, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:524, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:537, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:551, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:565, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:579, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 7, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:504, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:517, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:571, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnicodeInput()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:109, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:487, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:500, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:513, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:526, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:539, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:553, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:567, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:581, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 5, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:492, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:505, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:518, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:531, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:544, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:558, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:572, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:586, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[13] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 5, controlFlowSize: 15, isHighPriority: true): 
Assertions (5): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:251, 11.11%> (predicates:{($i0 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:252, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:255, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:256, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:259, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:41, 10.53%> (predicates:{($i0 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:42, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:43, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:44, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:45, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[14] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1212, 8.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1213, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1215, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1218, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1273, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1274, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1275, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1279, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1330, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1331, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1332, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1335, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1368, 11.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1369, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1370, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1373, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1421, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1422, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1423, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1426, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:370, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:371, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:372, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:373, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:374, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:375, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:376, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:377, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:378, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:379, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:380, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:381, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:382, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:383, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:384, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:385, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:729, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:730, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:731, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:732, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:733, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:776, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:777, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:778, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:779, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:780, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:531, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:532, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:533, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:534, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:572, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:573, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:574, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:575, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:576, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:625, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:626, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:627, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:628, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:629, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:676, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:677, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:678, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:437, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:438, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:439, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:483, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:484, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:485, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:486, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1058, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1059, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1060, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1061, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1062, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1063, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1064, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1003, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1004, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1005, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1006, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1007, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1008, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:321, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:322, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:323, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:324, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:920, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:921, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:922, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:960, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:961, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:120, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:121, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:122, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:211, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:212, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:213, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:832, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:833, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:834, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:868, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:869, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:870, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1159, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1160, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1161, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1571, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1572, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1573, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1611, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1612, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1613, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1650, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1651, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1652, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:250, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:251, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1213, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1215, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1274, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1275, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1331, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1332, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1369, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1370, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1422, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1423, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:231, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:277, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:436, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:482, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:530, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:571, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:624, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:675, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:728, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:775, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:919, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:959, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:119, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:210, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:230, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:276, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:313, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:369, 6.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:831, 9.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:867, 12.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1002, 10.87%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1057, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithEmptyTable()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1158, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1212, 8.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1273, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1330, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1368, 11.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1421, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1492, 8.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1570, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1610, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1649, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[15] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:144, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:145, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:146, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:147, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:161, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:162, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:163, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:164, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:178, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:179, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextDescnding()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:194, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:195, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:196, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:197, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 6, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:145, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:146, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:147, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:162, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:163, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:164, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:178, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:179, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextDescnding()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:195, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:196, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:197, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:280, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:281, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:282, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 2, classes: 2): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:130, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:144, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:161, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextDescnding()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:194, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:215, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:233, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:253, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:279, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildDataTableRowsWithEmptyTable()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:455, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[16] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 4, controlFlowSize: 10, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.base.BooleanFormatTest: void testFieldPosition()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:127, 7.41%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:128, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:134, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:135, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null, ($i6 != $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.TextFormatTest: void testFormatFieldPosition()>
		<com.google.visualization.datasource.base.TextFormatTest.java:103, 7.41%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:104, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:109, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:110, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[17] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 2, controlFlowSize: 4, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.scalarfunction.LowerTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:38, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:55, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:64, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.UpperTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:38, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:55, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:64, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[18] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.DataTableTest: void testCellList()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:136, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:137, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:140, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:141, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testScalarFunctions()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1091, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1092, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1099, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1100, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[19] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPivotAndGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1049, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1051, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1062, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1067, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testReadWithLocale()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:298, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:299, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:300, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:301, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[20] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 3, controlFlowSize: 0, isHighPriority: true): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:47, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:48, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:50, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:44, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:45, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:48, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[21] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 1, controlFlowSize: 3, isHighPriority: true): 
Assertions (3): 
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (2): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorSpecialValuesOfDate()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:138, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:145, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:152, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testConstructorSpecialDatesValues()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:85, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:92, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:99, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[22] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorString()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:66, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:67, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorBoolean()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:72, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:73, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorDouble()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:78, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:79, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 2, classes: 2): 
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:86, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:90, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorString()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:67, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorBoolean()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:73, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorDouble()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:79, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testMultipleAndAssociativity()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:648, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:649, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:650, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:651, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:652, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[23] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testColumnProperties()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:53, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:56, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.DataTableTest: void testTableProperties()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:316, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:319, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetFormattedValue()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:57, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:61, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[24] Set (editDistance: 0, isComplete: true, packages: 1, classes: 3, uniqueness: 2, controlFlowSize: 5, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:319, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:323, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:322, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:326, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:358, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:362, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[25] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.DataTableTest: void testGetCellAndGetValue()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:332, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:334, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:157, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:159, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[26] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetNull()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:160, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 1.00, ccsize: 2, packages: 2, classes: 6): 
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetNull()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testTimestampConstructor()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:177, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:196, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testDateConstructor()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:124, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:133, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:142, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:45, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:48, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:160, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:124, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:125, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:32, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:34, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:144, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:152, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
==============================================

[27] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3, uniqueness: 2, controlFlowSize: 3, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.base.BooleanFormatTest: void testParseParsePosition()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:179, 13.33%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:183, 13.33%> (predicates:{($i0 != $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:167, 20.00%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:168, 20.00%> (predicates:{(0 != $i0)=null, ($i1 != $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:86, 15.38%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:87, 15.38%> (predicates:{($i0 != $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[28] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3, uniqueness: 1, controlFlowSize: 2, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (3): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadDateLiteral()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:881, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:888, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
	<com.google.visualization.datasource.query.scalarfunction.DateDiffTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:47, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:60, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r19 := @caughtexception])
	<com.google.visualization.datasource.query.scalarfunction.ToDateTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:46, 4.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:56, 4.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[29] Set (editDistance: 0, isComplete: true, packages: 2, classes: 4, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (4): 
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitNone()>
		<com.google.visualization.datasource.QuerySplitterTest.java:346, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:347, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:335, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:308, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:369, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:373, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 2, packages: 1, classes: 3): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:369, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 3): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:335, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:308, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:373, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[30] Set (editDistance: 0, isComplete: true, packages: 3, classes: 4, uniqueness: 1, controlFlowSize: 2, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (9): 
	<com.google.visualization.datasource.base.TextFormatTest: void testParseNullCases()>
		<com.google.visualization.datasource.base.TextFormatTest.java:126, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:133, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOFRangeValuesMonth()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:41, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesDayOfMonth()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:57, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:63, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesHours()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:73, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:79, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesMinutes()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:89, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:95, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesSeconds()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:105, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:111, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesMilliseconds()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:121, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:127, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testConstructorOutOFRangeValuesMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:69, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:75, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.query.engine.AggregationTreeTest: void testGetNode()>
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:88, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r13 := @caughtexception])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:96, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r17 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[31] Set (editDistance: 0, isComplete: true, packages: 3, classes: 7, uniqueness: 2, controlFlowSize: 0, isHighPriority: true): 
Assertions (2): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testValue()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:37, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:38, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:124, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:125, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:32, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:34, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.CompoundFilterTest: void testAndFilter()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:61, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.CompoundFilterTest.java:62, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.CompoundFilterTest: void testOrFilter()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:89, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.CompoundFilterTest.java:90, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOptions()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:149, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:150, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[32] Set (editDistance: 0, isComplete: true, packages: 1, classes: 2, uniqueness: 1, controlFlowSize: 1, isHighPriority: true): 
Assertions (1): 
	<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (7): 
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetYearNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:209, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetMonthNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:219, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetDayOfMonthNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetHoursNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:231, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMinutesNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:241, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetSecondsNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:251, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMilliNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:261, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[33] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 1, controlFlowSize: 1, isHighPriority: true): 
Assertions (1): 
	<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (22): 
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testNullValueException()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:56, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadQuery1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:199, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadQuery2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:208, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLimit2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:233, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnspecifiedLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:242, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:256, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidOffset2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:265, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnspecifiedOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:274, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseLimitAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:289, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:298, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:307, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:323, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnorderedLimitSkippingAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLabel()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:377, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidEmptyLabel()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:386, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDuplicateLabelColumn()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:395, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidTwoLabelsNoComma()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:405, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidFormat()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:436, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidEmptyFormat()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:445, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidTwoFormatsNoComma()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:455, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDuplicateFormatColumn()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:464, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[34] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3, uniqueness: 1, controlFlowSize: 1, isHighPriority: true): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<com.google.visualization.datasource.base.TextFormatTest: void testParseParsePosition()>
		<com.google.visualization.datasource.base.TextFormatTest.java:143, 22.22%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testlGetYear()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:191, 40.00%> (predicates:{($i0 != 4000)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:197, 40.00%> (predicates:{($i0 != 7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testlGetDayOfMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:202, 40.00%> (predicates:{($i0 != 17)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetHours()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:209, 40.00%> (predicates:{($i0 != 12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMinutes()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:214, 40.00%> (predicates:{($i0 != 23)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetSeconds()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:219, 40.00%> (predicates:{($i0 != 31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMilliseconds()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:224, 40.00%> (predicates:{($i0 != 134)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[35] Set (editDistance: 0, isComplete: true, packages: 4, classes: 6, uniqueness: 1, controlFlowSize: 1, isHighPriority: true): 
Assertions (1): 
	<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

Methods (11): 
	<com.google.visualization.datasource.DataSourceHelperTest: void testVerifyAccessApprovedTest()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:283, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testJavaMonthConvention()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:165, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testJavaMonthConvention()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:112, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
	<com.google.visualization.datasource.query.QueryTest: void testValidateDuplicates()>
		<com.google.visualization.datasource.query.QueryTest.java:85, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
	<com.google.visualization.datasource.query.QueryTest: void testValidateGroupAndPivotBySameColumn()>
		<com.google.visualization.datasource.query.QueryTest.java:98, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInGroup()>
		<com.google.visualization.datasource.query.QueryTest.java:108, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInPivot()>
		<com.google.visualization.datasource.query.QueryTest.java:118, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInFilter()>
		<com.google.visualization.datasource.query.QueryTest.java:129, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testAddChild()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:133, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNoSuchElement()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:87, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNoElementNull()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:177, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])

Relevant Assertion clone sets (0):
==============================================

[36] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (2): 
	<com.google.visualization.datasource.ResponseWriterTest: void testSetServletResponseJson()>
		<com.google.visualization.datasource.ResponseWriterTest.java:110, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:115, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:133, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:137, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildLimitAndOffsetClauses()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:279, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:285, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:293, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:299, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[37] Set (editDistance: 0, isComplete: true, packages: 3, classes: 4, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (4): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDateLiterals()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:863, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:867, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:871, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:874, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAdvancedStringOperators()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:902, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:904, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:906, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:908, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.DateDiffTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:81, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:82, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:83, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:84, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.ToDateTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:74, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:75, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:76, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:77, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testEmptyDataTableToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:131, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:132, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:133, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:134, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<com.google.visualization.datasource.query.scalarfunction.DateDiffTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:81, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:82, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:83, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:84, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.ToDateTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:74, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:75, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:76, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:77, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[38] Set (editDistance: 0, isComplete: true, packages: 4, classes: 4, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (8): 
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseDate()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:328, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:331, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:332, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseTimeOfDay()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:337, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:341, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:343, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseDateTime()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:348, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:352, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:354, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:150, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:151, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:152, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testGroupingAndPivoting()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:159, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:164, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:165, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testStrangeAggregations()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:175, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:180, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:181, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSimpleGroupAndPivot()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:851, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:855, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:857, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.CsvRendererTest: void testEmptyDataTableToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:129, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:130, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:131, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testGroupingAndPivoting()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:164, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testStrangeAggregations()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:180, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSimpleGroupAndPivot()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:855, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 4, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testGroupingAndPivoting()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:165, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testStrangeAggregations()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:181, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSimpleGroupAndPivot()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:857, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[39] Set (editDistance: 0, isComplete: true, packages: 5, classes: 8, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (3): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (9): 
	<com.google.visualization.datasource.base.LocaleUtilTest: void testGetLocalizedMessageFromBundle()>
		<com.google.visualization.datasource.base.LocaleUtilTest.java:30, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.LocaleUtilTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.LocaleUtilTest.java:36, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseNumber()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:307, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:308, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:309, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:236, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:238, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:241, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:182, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:184, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:186, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:186, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:187, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:188, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:200, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:202, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:204, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNullValues()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:147, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:150, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:153, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.CsvRendererTest: void testSimpleDataTableToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:174, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:181, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:188, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.CsvRendererTest: void testRenderError()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:250, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:256, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:262, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[40] Set (editDistance: 0, isComplete: true, packages: 3, classes: 3, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testLocalizedComparator()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:139, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:140, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithEmptyTable()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1124, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testLimitAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:282, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:283, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[41] Set (editDistance: 0, isComplete: true, packages: 6, classes: 9, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<com.google.visualization.datasource.DataSourceHelperTest: void testGetLocaleFromReuqest()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:265, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:266, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseBoolean()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:316, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:317, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:228, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:230, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:175, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:177, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testGetColumnType()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:130, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:131, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:193, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:195, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetValue()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:105, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:114, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.AggregationPathTest: void testReverse()>
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:47, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:48, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelect()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:83, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:85, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:186, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:187, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNullQuery()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:192, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:193, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.67, ccsize: 2, packages: 1, classes: 3): 
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:228, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:230, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:175, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:177, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:193, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:195, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[42] Set (editDistance: 0, isComplete: true, packages: 8, classes: 19, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (2): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (26): 
	<com.google.visualization.datasource.ResponseWriterTest: void testGenerateJsonResponseError()>
		<com.google.visualization.datasource.ResponseWriterTest.java:153, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:159, 45.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.ResponseStatusTest: void testBasic()>
		<com.google.visualization.datasource.base.ResponseStatusTest.java:29, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:32, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.TextFormatTest: void testFormat()>
		<com.google.visualization.datasource.base.TextFormatTest.java:48, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:49, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testFormatting()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:42, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:43, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:342, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:343, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:333, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:334, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:151, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:152, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:78, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:79, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:94, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:95, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:380, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:381, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ColumnColumnFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:72, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:73, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ColumnValueFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:71, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:72, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.QueryTest: void testToQueryString()>
		<com.google.visualization.datasource.query.QueryTest.java:145, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.QueryTest.java:148, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.AggregationTreeTest: void testAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:118, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:122, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testLabels()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1457, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1458, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testScalarFunctions()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1551, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1552, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testTwoValidLabels()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:370, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:371, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testTwoValidFormats()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:429, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:430, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.LowerTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.UpperTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testEscaping()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:299, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:317, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testRenderError()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:337, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:355, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testAppendColumnDescriptionJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:203, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:209, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testSimpleDataTableToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:252, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:264, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testSimpleDataTableWithDatesInJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:313, 7.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:329, 7.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testCustomPropertiesToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:416, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:426, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 1.00, ccsize: 28, packages: 1, classes: 1): 
	<com.google.visualization.datasource.render.HtmlRendererTest: void testEscaping()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:299, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:317, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testRenderError()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:337, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:355, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 3, packages: 1, classes: 2): 
	<com.google.visualization.datasource.query.scalarfunction.LowerTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.scalarfunction.UpperTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[43] Set (editDistance: 0, isComplete: true, packages: 1, classes: 1, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildSelectClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:130, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildFromClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:143, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildOrderByClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:259, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (1):
Set (score: 0.75, ccsize: 2, packages: 1, classes: 1): 
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildWhereClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:182, 7.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:211, 7.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildSelectClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:130, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildFromClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:143, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildOrderByClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:259, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

[44] Set (editDistance: 0, isComplete: true, packages: 2, classes: 2, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (5): 
	<com.google.visualization.datasource.query.engine.AggregationPathTest: void testEmptyPath()>
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:55, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testValidLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:218, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testValidOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:250, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:317, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testZeroSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:332, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[45] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.base.BooleanFormatTest: void testConstructor()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:53, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.TextFormatTest: void testConstructor()>
		<com.google.visualization.datasource.base.TextFormatTest.java:39, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:32, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[46] Set (editDistance: 0, isComplete: true, packages: 2, classes: 3, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (3): 
	<com.google.visualization.datasource.query.ColumnColumnFilterTest: void testMatch()>
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:45, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.CompoundFilterTest: void testGetAllColumnIds()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:123, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelectAll()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:92, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[47] Set (editDistance: 0, isComplete: true, packages: 5, classes: 7, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (11): 
	<com.google.visualization.datasource.base.TextFormatTest: void testParse()>
		<com.google.visualization.datasource.base.TextFormatTest.java:116, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetType()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:42, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetType()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:95, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseText()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:322, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:71, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllSimpleColumnIds()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:78, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllSimpleColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:136, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllAggregationColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:148, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllScalarFunctionColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:171, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetValueType()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:183, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.CsvRendererTest: void testRenderDataTableWithCommas()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:308, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (0):
==============================================

[48] Set (editDistance: 0, isComplete: true, packages: 8, classes: 15, uniqueness: 1, controlFlowSize: 0, isHighPriority: false): 
Assertions (1): 
	<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

Methods (25): 
	<com.google.visualization.datasource.base.ReasonTypeTest: void testBasic()>
		<com.google.visualization.datasource.base.ReasonTypeTest.java:29, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.ReasonTypeTest: void testLowerString()>
		<com.google.visualization.datasource.base.ReasonTypeTest.java:34, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.StatusTypeTest: void testBasic()>
		<com.google.visualization.datasource.base.StatusTypeTest.java:27, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetId()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:37, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetLabel()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:48, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.DataTableTest: void testToString()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:324, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.TableCellTest: void testToString()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:107, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testValue()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:32, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.CompoundFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:158, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetId()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:187, 166.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testEmptyAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:146, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatStoresPattern()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1525, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testQueryDoesntRuinDataSourcePatterns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1534, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testShortPath()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:122, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testlongPath()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:136, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testElementNull()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:163, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidLabelWithDoubleQuotes()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:357, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidLabelWithSingleQuote()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:363, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidFormatWithDoubleQuotes()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:416, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidFormatWithSingleQuote()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:422, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testEmptyDataTableToHtml()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:149, 68.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testSimpleDataTableToHtml()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:232, 49.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.HtmlRendererTest: void testWarnings()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:293, 52.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.render.JsonRendererTest: void testEntireResponseWithWarnings()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:371, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildGroupByClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:242, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])

Relevant Assertion clone sets (2):
Set (score: 0.67, ccsize: 3, packages: 1, classes: 1): 
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatStoresPattern()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1525, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testQueryDoesntRuinDataSourcePatterns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1534, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
Set (score: 0.67, ccsize: 2, packages: 1, classes: 2): 
	<com.google.visualization.datasource.base.ReasonTypeTest: void testLowerString()>
		<com.google.visualization.datasource.base.ReasonTypeTest.java:34, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
	<com.google.visualization.datasource.base.StatusTypeTest: void testBasic()>
		<com.google.visualization.datasource.base.StatusTypeTest.java:27, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
==============================================

