[1]
	<com.google.visualization.datasource.DataSourceHelperTest: void testApplyQuery()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:79, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:80, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:81, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:88, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:89, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:90, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:91, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:98, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:99, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:100, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:101, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:108, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:109, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:110, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:111, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:118, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:119, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:120, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:121, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:122, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:123, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:130, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:131, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:132, 6.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:140, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:141, 3.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:142, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:145, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r83 := @caughtexception])
		<com.google.visualization.datasource.DataSourceHelperTest.java:150, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r83 := @caughtexception])
		<com.google.visualization.datasource.DataSourceHelperTest.java:159, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r87 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(float,float,float)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[2]
	<com.google.visualization.datasource.DataSourceHelperTest: void testGenerateResponse()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:186, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:200, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:214, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:228, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:243, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:252, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[3]
	<com.google.visualization.datasource.DataSourceHelperTest: void testGetLocaleFromReuqest()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:265, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceHelperTest.java:266, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[4]
	<com.google.visualization.datasource.DataSourceHelperTest: void testVerifyAccessApprovedTest()>
		<com.google.visualization.datasource.DataSourceHelperTest.java:283, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[5]
	<com.google.visualization.datasource.DataSourceRequestTest: void testGetDefaultDataSourceRequest()>
		<com.google.visualization.datasource.DataSourceRequestTest.java:96, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:97, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:98, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:111, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:112, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:113, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:125, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:126, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:127, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[6]
	<com.google.visualization.datasource.DataSourceRequestTest: void testConstructor()>
		<com.google.visualization.datasource.DataSourceRequestTest.java:56, 4.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:57, 10.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:58, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:59, 12.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:76, 4.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:77, 10.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:78, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:79, 12.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[7]
	<com.google.visualization.datasource.DataSourceRequestTest: void testDetermineSameOrigin()>
		<com.google.visualization.datasource.DataSourceRequestTest.java:135, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.DataSourceRequestTest.java:143, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[8]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitSQLWithoutPivot()>
		<com.google.visualization.datasource.QuerySplitterTest.java:163, 7.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:164, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:165, 9.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:166, 9.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:168, 7.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:169, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:171, 7.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:172, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:173, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:174, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:175, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:176, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:177, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:179, 7.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:180, 8.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:182, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:183, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:184, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:185, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:186, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:187, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:188, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:197, 7.00%> (predicates:{($z11 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:198, 4.00%> (predicates:{($z11 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:200, 3.00%> (predicates:{($z11 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:201, 5.00%> (predicates:{($z11 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:202, 6.00%> (predicates:{($z11 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:210, 7.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:211, 4.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:213, 3.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:214, 5.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:215, 6.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:217, 4.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:218, 4.00%> (predicates:{($z11 == 0)=null, ($z13 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[9]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitSQLWithPivot()>
		<com.google.visualization.datasource.QuerySplitterTest.java:105, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:106, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:107, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:108, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:109, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:110, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:112, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:113, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:114, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:115, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:116, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:117, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:118, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:119, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:121, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:122, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:123, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:127, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:128, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:129, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:130, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:131, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:133, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:134, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:135, 5.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:136, 5.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:137, 5.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:138, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:139, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:141, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:142, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:144, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:145, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[10]
	<com.google.visualization.datasource.QuerySplitterTest: void testSortAndPaginationOnSimpleQuery()>
		<com.google.visualization.datasource.QuerySplitterTest.java:262, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:263, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:265, 16.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:266, 18.60%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:267, 11.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:268, 11.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:269, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:270, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:271, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:272, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:273, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:276, 16.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:277, 18.60%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:278, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:279, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:280, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:281, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:282, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:283, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:284, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:285, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:286, 9.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[11]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplittingWithScalarFunctions()>
		<com.google.visualization.datasource.QuerySplitterTest.java:362, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:363, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:364, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:365, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:366, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:367, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:368, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:369, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:370, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:371, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:372, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:377, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:378, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:379, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:380, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:381, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:382, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:383, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:384, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:385, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:386, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:387, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[12]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitSelection()>
		<com.google.visualization.datasource.QuerySplitterTest.java:298, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:299, 27.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:300, 27.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:301, 27.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:302, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:303, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:304, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:305, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:306, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:307, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:308, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:309, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:310, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:311, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:313, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[13]
	<com.google.visualization.datasource.QuerySplitterTest: void testSortAndPagination()>
		<com.google.visualization.datasource.QuerySplitterTest.java:230, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:231, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:232, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:233, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:234, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:235, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:236, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:237, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:238, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:239, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:240, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:242, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[14]
	<com.google.visualization.datasource.QuerySplitterTest: void testSortAndPaginationWithSkipping()>
		<com.google.visualization.datasource.QuerySplitterTest.java:425, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:426, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:427, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:428, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:429, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:430, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:431, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:432, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:433, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:434, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:435, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:438, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[15]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitAll()>
		<com.google.visualization.datasource.QuerySplitterTest.java:324, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:326, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:327, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:328, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:329, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:330, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:331, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:332, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:333, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:334, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:335, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[16]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplittingSQLWithPivotWithLabel()>
		<com.google.visualization.datasource.QuerySplitterTest.java:397, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:398, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:399, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:400, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:401, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:402, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:403, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:404, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:405, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:406, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:407, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[17]
	<com.google.visualization.datasource.QuerySplitterTest: void testSplitNone()>
		<com.google.visualization.datasource.QuerySplitterTest.java:346, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.QuerySplitterTest.java:347, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[18]
	<com.google.visualization.datasource.ResponseWriterTest: void testSetServletResponseJson()>
		<com.google.visualization.datasource.ResponseWriterTest.java:110, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:115, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:133, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:137, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[19]
	<com.google.visualization.datasource.ResponseWriterTest: void testGenerateJsonResponseError()>
		<com.google.visualization.datasource.ResponseWriterTest.java:153, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.ResponseWriterTest.java:159, 45.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[20]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testFormatThrowsException()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:77, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:83, 4.00%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:84, 4.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:89, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:91, 4.00%> (predicates:{(0 != $i2)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:92, 4.00%> (predicates:{(0 != $i2)=null, (0 != $i3)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[$r20 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:97, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:105, 4.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:106, 4.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:107, 4.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:113, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r34 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:115, 4.00%> (predicates:{(0 != $i7)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:116, 4.00%> (predicates:{(0 != $i7)=null, (0 != $i8)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:117, 4.00%> (predicates:{(0 != $i7)=null, (0 != $i8)=null, (0 != $i9)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[21]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testParse()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:141, 19.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:143, 25.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:144, 32.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:145, 38.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:146, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:149, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:150, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:152, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:153, 70.97%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:154, 77.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[22]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testFormat()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:59, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:60, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:61, 36.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:62, 44.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:64, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:65, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:66, 68.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:67, 76.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[23]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testFieldPosition()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:127, 7.41%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:128, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:134, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:135, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null, ($i6 != $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[24]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testParseNullCases()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:161, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:167, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:172, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:173, 15.38%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[25]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testParseParsePosition()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:179, 13.33%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.BooleanFormatTest.java:183, 13.33%> (predicates:{($i0 != $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[26]
	<com.google.visualization.datasource.base.BooleanFormatTest: void testConstructor()>
		<com.google.visualization.datasource.base.BooleanFormatTest.java:53, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[27]
	<com.google.visualization.datasource.base.DataSourceParametersTest: void testRequestParsing()>
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:32, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:33, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:34, 6.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:35, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:36, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:41, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:42, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:43, 6.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:44, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:45, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:54, 4.94%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:55, 6.17%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:57, 2.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:67, 4.94%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:68, 6.17%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:70, 2.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:79, 4.94%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:80, 6.17%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:82, 2.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:91, 4.94%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:92, 6.17%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:94, 2.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:99, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:104, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:109, 6.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:110, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:115, 6.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:116, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:121, 6.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.DataSourceParametersTest.java:122, 4.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[28]
	<com.google.visualization.datasource.base.LocaleUtilTest: void testGetLocalizedMessageFromBundle()>
		<com.google.visualization.datasource.base.LocaleUtilTest.java:30, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.LocaleUtilTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.LocaleUtilTest.java:36, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[29]
	<com.google.visualization.datasource.base.ReasonTypeTest: void testBasic()>
		<com.google.visualization.datasource.base.ReasonTypeTest.java:29, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[30]
	<com.google.visualization.datasource.base.ReasonTypeTest: void testLowerString()>
		<com.google.visualization.datasource.base.ReasonTypeTest.java:34, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[31]
	<com.google.visualization.datasource.base.ResponseStatusTest: void testGetModifiedResponseStatus()>
		<com.google.visualization.datasource.base.ResponseStatusTest.java:46, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:49, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:55, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:56, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:58, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[32]
	<com.google.visualization.datasource.base.ResponseStatusTest: void testCreateResponseStatus()>
		<com.google.visualization.datasource.base.ResponseStatusTest.java:65, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:66, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:67, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[33]
	<com.google.visualization.datasource.base.ResponseStatusTest: void testBasic()>
		<com.google.visualization.datasource.base.ResponseStatusTest.java:29, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.ResponseStatusTest.java:32, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[34]
	<com.google.visualization.datasource.base.StatusTypeTest: void testBasic()>
		<com.google.visualization.datasource.base.StatusTypeTest.java:27, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[35]
	<com.google.visualization.datasource.base.TextFormatTest: void testFormatThrowsException()>
		<com.google.visualization.datasource.base.TextFormatTest.java:60, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:62, 3.85%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:63, 3.85%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:69, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:78, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r23 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:80, 3.85%> (predicates:{(0 != $i2)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:81, 3.85%> (predicates:{(0 != $i2)=null, (0 != $i3)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:82, 3.85%> (predicates:{(0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:89, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r35 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:91, 3.85%> (predicates:{(0 != $i5)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:92, 3.85%> (predicates:{(0 != $i5)=null, (0 != $i6)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:93, 3.85%> (predicates:{(0 != $i5)=null, (0 != $i6)=null, (0 != $i7)=null}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[36]
	<com.google.visualization.datasource.base.TextFormatTest: void testFormatFieldPosition()>
		<com.google.visualization.datasource.base.TextFormatTest.java:103, 7.41%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:104, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:109, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:110, 7.41%> (predicates:{(0 != $i0)=null, ($i2 != $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[37]
	<com.google.visualization.datasource.base.TextFormatTest: void testFormat()>
		<com.google.visualization.datasource.base.TextFormatTest.java:48, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.base.TextFormatTest.java:49, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[38]
	<com.google.visualization.datasource.base.TextFormatTest: void testParseNullCases()>
		<com.google.visualization.datasource.base.TextFormatTest.java:126, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.base.TextFormatTest.java:133, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[39]
	<com.google.visualization.datasource.base.TextFormatTest: void testConstructor()>
		<com.google.visualization.datasource.base.TextFormatTest.java:39, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[40]
	<com.google.visualization.datasource.base.TextFormatTest: void testParse()>
		<com.google.visualization.datasource.base.TextFormatTest.java:116, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[41]
	<com.google.visualization.datasource.base.TextFormatTest: void testParseParsePosition()>
		<com.google.visualization.datasource.base.TextFormatTest.java:143, 22.22%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[42]
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testColumnProperties()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:53, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:56, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[43]
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:32, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[44]
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetId()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:37, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[45]
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetType()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:42, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[46]
	<com.google.visualization.datasource.datatable.ColumnDescriptionTest: void testGetLabel()>
		<com.google.visualization.datasource.datatable.ColumnDescriptionTest.java:48, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[47]
	<com.google.visualization.datasource.datatable.DataTableTest: void testColumnDistinctCellsSorted()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:215, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:216, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:217, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:218, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:222, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:223, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:224, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:229, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:230, 22.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:231, 22.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:232, 22.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:233, 22.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[48]
	<com.google.visualization.datasource.datatable.DataTableTest: void testClone()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:292, 18.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:293, 20.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:294, 19.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:295, 19.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:298, 2.20%> (predicates:{(r7 == $r59)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:299, 2.20%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:300, 2.20%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:301, 2.20%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null, ($r67 == $r70)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:308, 23.08%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null, ($r67 == $r70)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:309, 25.27%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null, ($r67 == $r70)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:310, 24.18%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null, ($r67 == $r70)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:311, 27.47%> (predicates:{(r7 == $r59)=null, ($r60 == $r62)=null, ($r63 == $r65)=null, ($r67 == $r70)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[49]
	<com.google.visualization.datasource.datatable.DataTableTest: void testAddRowFromValues()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:163, 9.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:171, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:173, 13.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:174, 20.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:175, 22.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:176, 24.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:177, 26.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:178, 28.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:179, 30.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[50]
	<com.google.visualization.datasource.datatable.DataTableTest: void testReplaceCell()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:349, 22.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:350, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:352, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:354, 22.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:355, 22.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:356, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r32 := @caughtexception])
		<com.google.visualization.datasource.datatable.DataTableTest.java:361, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r32 := @caughtexception])
		<com.google.visualization.datasource.datatable.DataTableTest.java:368, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r35 := @caughtexception])
		<com.google.visualization.datasource.datatable.DataTableTest.java:375, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r39 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[51]
	<com.google.visualization.datasource.datatable.DataTableTest: void testColumnDistinctValues()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:198, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:200, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:201, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:202, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:203, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:205, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[52]
	<com.google.visualization.datasource.datatable.DataTableTest: void testCellList()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:136, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:137, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:140, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:141, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[53]
	<com.google.visualization.datasource.datatable.DataTableTest: void testAddRow()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:148, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:153, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:156, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[54]
	<com.google.visualization.datasource.datatable.DataTableTest: void testGetSetRows()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:188, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:189, 58.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:190, 88.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[55]
	<com.google.visualization.datasource.datatable.DataTableTest: void testContainsAll()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:241, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:245, 57.14%> (predicates:{($z1 != 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:248, 78.57%> (predicates:{($z1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[56]
	<com.google.visualization.datasource.datatable.DataTableTest: void testTableProperties()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:316, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:319, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[57]
	<com.google.visualization.datasource.datatable.DataTableTest: void testGetCellAndGetValue()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:332, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.DataTableTest.java:334, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[58]
	<com.google.visualization.datasource.datatable.DataTableTest: void testToString()>
		<com.google.visualization.datasource.datatable.DataTableTest.java:324, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[59]
	<com.google.visualization.datasource.datatable.TableCellTest: void testClone()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:142, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:143, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:144, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:150, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:151, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:152, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:153, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:154, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[60]
	<com.google.visualization.datasource.datatable.TableCellTest: void testLocalizedComparator()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:121, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:122, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:127, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r18 := @caughtexception])
		<com.google.visualization.datasource.datatable.TableCellTest.java:131, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r18 := @caughtexception])
		<com.google.visualization.datasource.datatable.TableCellTest.java:132, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r18 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[61]
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:85, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:86, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:89, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:90, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[62]
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetFormattedValue()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:57, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:61, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[63]
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorString()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:66, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:67, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[64]
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorBoolean()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:72, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:73, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[65]
	<com.google.visualization.datasource.datatable.TableCellTest: void testConstructorDouble()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:78, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:79, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[66]
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetNull()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:100, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableCellTest.java:102, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[67]
	<com.google.visualization.datasource.datatable.TableCellTest: void testGetType()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:95, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[68]
	<com.google.visualization.datasource.datatable.TableCellTest: void testToString()>
		<com.google.visualization.datasource.datatable.TableCellTest.java:107, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[69]
	<com.google.visualization.datasource.datatable.TableRowTest: void testClone()>
		<com.google.visualization.datasource.datatable.TableRowTest.java:53, 12.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:54, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:55, 7.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:56, 12.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:57, 12.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:58, 10.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:59, 10.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:60, 12.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:62, 3.64%> (predicates:{(r3 == r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:63, 3.64%> (predicates:{(r3 == r2)=null, ($r30 == $r31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:64, 3.64%> (predicates:{(r3 == r2)=null, ($r30 == $r31)=null, ($r32 == $r33)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:65, 3.64%> (predicates:{(r3 == r2)=null, ($r30 == $r31)=null, ($r32 == $r33)=null, ($r35 == $r37)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:68, 10.91%> (predicates:{(r3 == r2)=null, ($r30 == $r31)=null, ($r32 == $r33)=null, ($r35 == $r37)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.TableRowTest.java:71, 9.09%> (predicates:{(r3 == r2)=null, ($r30 == $r31)=null, ($r32 == $r33)=null, ($r35 == $r37)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[70]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testDefaultAndNullCases()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:144, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:145, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:146, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:147, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:148, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:149, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:151, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:152, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:153, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:154, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:155, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:156, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:158, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:159, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:160, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:161, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:162, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:163, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:165, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:166, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:167, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:168, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:169, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:170, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:172, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:173, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:174, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:175, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:176, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:177, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:182, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:184, 7.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[71]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testValueFormatterFromPatternAndLocale()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:83, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:87, 3.64%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:90, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=false, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:95, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:99, 3.64%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:102, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=false, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:107, 3.64%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:110, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=false, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:115, 3.64%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:118, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:122, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:123, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:124, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:125, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:126, 7.27%> (predicates:{(i1 >= i0)=false, ($z1 == 0)=null, ($z4 == 0)=null, ($z7 == 0)=null, ($z10 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[72]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testSpecificPatternFormattingInUSLocale()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:237, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:241, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:245, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:249, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:254, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:258, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[73]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseAll()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:286, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:289, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:292, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:295, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:298, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:301, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[74]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testAFewMoreCases()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:194, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:198, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:202, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:205, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[75]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testGetDefaultValueForamtters()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:276, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:277, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:280, 43.75%> (predicates:{(i1 >= i0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:281, 43.75%> (predicates:{(i1 >= i0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[76]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseNumber()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:307, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:308, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:309, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[77]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseDate()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:328, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:331, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:332, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[78]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseTimeOfDay()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:337, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:341, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:343, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[79]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseDateTime()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:348, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:352, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:354, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[80]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testHindiLocale()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:270, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:271, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[81]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseBoolean()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:316, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:317, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[82]
	<com.google.visualization.datasource.datatable.ValueFormatterTest: void testParseText()>
		<com.google.visualization.datasource.datatable.ValueFormatterTest.java:322, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[83]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testEquals()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:117, 11.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:118, 17.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:119, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:120, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:121, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:122, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:124, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:125, 34.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:126, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:127, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:128, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:129, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:132, 48.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:133, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[84]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:66, 6.06%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:67, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:68, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:69, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:70, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:71, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:73, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null, ($i6 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:74, 6.06%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 != 0)=null, ($i5 != 0)=null, ($i6 <= 0)=null, ($i7 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[85]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testComapreNullCases()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:82, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:88, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:97, 8.33%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:98, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:101, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:102, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:106, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:108, 8.33%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 != $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[86]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:47, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:48, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:50, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[87]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:137, 20.00%> (predicates:{(1 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:138, 20.00%> (predicates:{(1 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:139, 20.00%> (predicates:{(1 != $i0)=null, (0 != $i1)=null, (-1 != $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[88]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:144, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:145, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:146, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[89]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:150, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:151, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:152, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[90]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:156, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:157, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:160, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[91]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testValue()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:37, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:38, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[92]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testFormatting()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:42, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:43, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[93]
	<com.google.visualization.datasource.datatable.value.BooleanValueTest: void testNullValueException()>
		<com.google.visualization.datasource.datatable.value.BooleanValueTest.java:56, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[94]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testTimestampConstructor()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:176, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:177, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:180, 9.52%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:185, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:186, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:189, 28.57%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:195, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:196, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:199, 9.52%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[95]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:267, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:273, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:282, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:283, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:286, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:287, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:291, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:293, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[96]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:251, 11.11%> (predicates:{($i0 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:252, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:255, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:256, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:259, 11.11%> (predicates:{($i0 != 0)=null, ($i1 != 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[97]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorSpecialValuesOfDate()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:138, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:145, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:152, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[98]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testCalendarConstructor()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:211, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:220, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:223, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[99]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:236, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:238, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:241, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[100]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[101]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOFRangeValuesMonth()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:41, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[102]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesDayOfMonth()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:57, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:63, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[103]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesHours()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:73, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:79, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[104]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesMinutes()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:89, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:95, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[105]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesSeconds()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:105, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:111, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[106]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testConstructorOutOfRangeValuesMilliseconds()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:121, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:127, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[107]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:228, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:230, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[108]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetCalendar()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:299, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:302, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[109]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:319, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:323, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[110]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:334, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:335, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[111]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:342, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:343, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[112]
	<com.google.visualization.datasource.datatable.value.DateTimeValueTest: void testJavaMonthConvention()>
		<com.google.visualization.datasource.datatable.value.DateTimeValueTest.java:165, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[113]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testDateConstructor()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:123, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:124, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:127, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:132, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:133, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:136, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:141, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:142, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:145, 12.50%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[114]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:272, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:278, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:287, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:288, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:291, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:292, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:296, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:298, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[115]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:241, 5.41%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:242, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:249, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:250, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:257, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:258, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:264, 5.41%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[116]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testCalendarConstructor()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:156, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:165, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:168, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:169, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:170, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[117]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testConstructorOutOFRangeValuesDayOfMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:43, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:50, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:56, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[118]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testConstructorSpecialDatesValues()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:85, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:92, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:99, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[119]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:182, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:184, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:186, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[120]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:31, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:33, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[121]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testConstructorOutOFRangeValuesMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:69, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:75, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[122]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:175, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:177, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[123]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:305, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:308, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[124]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:322, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:326, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[125]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:333, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:334, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[126]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testJavaMonthConvention()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:112, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[127]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testlGetYear()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:191, 40.00%> (predicates:{($i0 != 4000)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[128]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:197, 40.00%> (predicates:{($i0 != 7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[129]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testlGetDayOfMonth()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:202, 40.00%> (predicates:{($i0 != 17)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[130]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetYearNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:209, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[131]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetMonthNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:219, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[132]
	<com.google.visualization.datasource.datatable.value.DateValueTest: void testGetDayOfMonthNull()>
		<com.google.visualization.datasource.datatable.value.DateValueTest.java:229, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[133]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:59, 6.45%> (predicates:{($i0 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:60, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:61, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:62, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:63, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:64, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:66, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:67, 6.45%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[134]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testComapreNullCases()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:75, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:81, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:90, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:91, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:94, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:95, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:99, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:101, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[135]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testEquals()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:113, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:114, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:115, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:117, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:118, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:119, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:122, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:123, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[136]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:44, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:45, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:48, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[137]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:176, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:177, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:178, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[138]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:186, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:187, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:188, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[139]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testGetColumnType()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:130, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:131, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[140]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testGetValue()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:138, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:141, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[141]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:151, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:152, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[142]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:159, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:160, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[143]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:167, 20.00%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:168, 20.00%> (predicates:{(0 != $i0)=null, ($i1 != $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[144]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testValue()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:30, 33.33%> (predicates:{(i1 >= i0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[145]
	<com.google.visualization.datasource.datatable.value.NumberValueTest: void testFormatting()>
		<com.google.visualization.datasource.datatable.value.NumberValueTest.java:38, 45.45%> (predicates:{(i1 >= i0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[146]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testEquals()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:57, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:58, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:59, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:60, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:62, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:63, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:66, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[147]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:41, 10.53%> (predicates:{($i0 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:42, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:43, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:44, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:45, 10.53%> (predicates:{($i0 >= 0)=null, ($i1 <= 0)=null, ($i2 != 0)=null, ($i3 != 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[148]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testComapreNullCases()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:103, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:109, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:114, 14.29%> (predicates:{(0 != $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:118, 14.29%> (predicates:{(0 != $i2)=null, (0 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[149]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:149, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:150, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:151, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:155, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[150]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:78, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:79, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[151]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:86, 15.38%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:87, 15.38%> (predicates:{($i0 != $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[152]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:94, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:95, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[153]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testIsNull()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:124, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:125, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[154]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testLocalizedComparator()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:139, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:140, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[155]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testValue()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:32, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[156]
	<com.google.visualization.datasource.datatable.value.TextValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.TextValueTest.java:71, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[157]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testConstructorIllegalValues()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:42, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:49, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:56, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:63, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:70, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r19 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:77, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r23 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:84, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r27 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:91, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r31 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:98, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r35 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:105, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r39 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:112, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r43 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:119, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r47 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:126, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r51 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:133, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r55 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[158]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testCompare()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:273, 3.51%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:274, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:281, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:282, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:289, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:290, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:297, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:298, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:307, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null, ($i8 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:308, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null, ($i8 != 0)=null, ($i9 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:309, 3.51%> (predicates:{($i0 <= 0)=null, ($i1 >= 0)=null, ($i2 <= 0)=null, ($i3 >= 0)=null, ($i4 <= 0)=null, ($i5 >= 0)=null, ($i6 <= 0)=null, ($i7 >= 0)=null, ($i8 != 0)=null, ($i9 != 0)=null, ($i10 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:10, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:11, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[159]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testCompareNullCases()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:317, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:324, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:333, 7.41%> (predicates:{(0 >= $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:334, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:337, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:338, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:342, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:344, 7.41%> (predicates:{(0 >= $i2)=null, (0 <= $i3)=null, (0 != $i4)=null, (0 != $i5)=null, (0 <= $i6)=null, (0 >= $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[160]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testCalendarConstructor()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:168, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:177, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:180, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:181, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:182, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:183, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:188, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[161]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testConstructor()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:143, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:144, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:147, 18.18%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:151, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:152, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:155, 18.18%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[162]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testToString()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:200, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:202, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:204, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[163]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testNullValue()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:32, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:34, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[164]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetType()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:193, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:195, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[165]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testHashCode()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:358, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:362, 13.33%> (predicates:{($i0 == $i1)=null, ($i2 != $i3)=null, ($i4 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[166]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetValueToFormat()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:369, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:373, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[167]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testToQueryString()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:380, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:381, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[168]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetHours()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:209, 40.00%> (predicates:{($i0 != 12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[169]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMinutes()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:214, 40.00%> (predicates:{($i0 != 23)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[170]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetSeconds()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:219, 40.00%> (predicates:{($i0 != 31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[171]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMilliseconds()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:224, 40.00%> (predicates:{($i0 != 134)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[172]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetHoursNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:231, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[173]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMinutesNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:241, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[174]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetSecondsNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:251, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[175]
	<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest: void testGetMilliNull()>
		<com.google.visualization.datasource.datatable.value.TimeOfDayValueTest.java:261, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[176]
	<com.google.visualization.datasource.datatable.value.ValueTest: void testEquals()>
		<com.google.visualization.datasource.datatable.value.ValueTest.java:59, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:62, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:63, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:64, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:67, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:70, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:73, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:74, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[177]
	<com.google.visualization.datasource.datatable.value.ValueTest: void testCompareTo()>
		<com.google.visualization.datasource.datatable.value.ValueTest.java:34, 9.52%> (predicates:{(0 != $i0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:35, 9.52%> (predicates:{(0 != $i0)=null, (0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:36, 9.52%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:39, 9.52%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 >= $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:40, 9.52%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 >= $i3)=null, (0 <= $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTest.java:45, 0.00%> (predicates:{(0 != $i0)=null, (0 != $i1)=null, (0 != $i2)=null, (0 >= $i3)=null, (0 <= $i4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[178]
	<com.google.visualization.datasource.datatable.value.ValueTypeTest: void testCreateValue()>
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:37, 1.39%> (predicates:{($r5 != $r6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:39, 3.47%> (predicates:{($r5 != $r6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:41, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r13 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:47, 0.00%> (predicates:{($r5 != $r6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r13 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:55, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r21 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:57, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r21 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:65, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r31 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:67, 2.78%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r31 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:69, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r35 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:75, 0.00%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r35 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:83, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r43 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:85, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r43 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:93, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r51 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:95, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r51 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:97, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r55 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:103, 0.00%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r55 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:111, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r63 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:113, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r63 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:123, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r73 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:125, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r73 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:127, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r77 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:133, 0.00%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r77 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:141, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r85 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:143, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r85 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:153, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r96 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:155, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r96 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:157, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r100 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:163, 0.00%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r100 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:171, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r108 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:173, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r108 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:183, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null, ($r115 != $r116)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r119 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:185, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null, ($r115 != $r116)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r119 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:187, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[$r123 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:193, 0.00%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null, ($r115 != $r116)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r123 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:201, 1.39%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null, ($r115 != $r116)=null, ($r127 != $r128)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r131 := @caughtexception])
		<com.google.visualization.datasource.datatable.value.ValueTypeTest.java:203, 3.47%> (predicates:{($r5 != $r6)=null, ($r17 != $r18)=null, ($r26 != $r27)=null, ($r39 != $r40)=null, ($r48 != $r49)=null, ($r59 != $r60)=null, ($r70 != $r71)=null, ($r81 != $r82)=null, ($r92 != $r93)=null, ($r104 != $r105)=null, ($r115 != $r116)=null, ($r127 != $r128)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r131 := @caughtexception])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:10, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:10, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:11, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:11, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:11, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:12, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:12, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[179]
	<com.google.visualization.datasource.query.ColumnColumnFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:72, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:73, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[180]
	<com.google.visualization.datasource.query.ColumnColumnFilterTest: void testMatch()>
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:45, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[181]
	<com.google.visualization.datasource.query.ColumnColumnFilterTest: void testNoMatch()>
		<com.google.visualization.datasource.query.ColumnColumnFilterTest.java:61, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[182]
	<com.google.visualization.datasource.query.ColumnValueFilterTest: void testVariousFilters()>
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:49, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:52, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:55, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:58, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:61, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[183]
	<com.google.visualization.datasource.query.ColumnValueFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:71, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ColumnValueFilterTest.java:72, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[184]
	<com.google.visualization.datasource.query.ComparisonFilterTest: void testCheck()>
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:124, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:126, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:128, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:130, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:132, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:135, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:137, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:139, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:141, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:143, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:145, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:148, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:150, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:152, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:154, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:156, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:158, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:160, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:162, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:164, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:166, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:168, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:171, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:173, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:175, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:177, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:179, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:182, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:184, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:186, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:188, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:190, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:192, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:195, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:197, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:199, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:201, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:203, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:205, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:207, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:209, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:211, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:213, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:215, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:219, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:221, 1.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[185]
	<com.google.visualization.datasource.query.ComparisonFilterTest: void testStringOperators()>
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:240, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:242, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:244, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:246, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:249, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:251, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:254, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:256, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:259, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:261, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:263, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:265, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:268, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:271, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:273, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:275, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:277, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:279, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:281, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:283, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:285, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:287, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:289, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:291, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:293, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:295, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:297, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:299, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:303, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:307, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:309, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:311, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:314, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:317, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:320, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ComparisonFilterTest.java:323, 2.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[186]
	<com.google.visualization.datasource.query.CompoundFilterTest: void testAndFilter()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:61, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.CompoundFilterTest.java:62, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[187]
	<com.google.visualization.datasource.query.CompoundFilterTest: void testOrFilter()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:89, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.CompoundFilterTest.java:90, 8.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[188]
	<com.google.visualization.datasource.query.CompoundFilterTest: void testGetAllColumnIds()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:123, 10.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[189]
	<com.google.visualization.datasource.query.CompoundFilterTest: void testToQueryString()>
		<com.google.visualization.datasource.query.CompoundFilterTest.java:158, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[190]
	<com.google.visualization.datasource.query.QueryTest: void testToQueryString()>
		<com.google.visualization.datasource.query.QueryTest.java:145, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.QueryTest.java:148, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[191]
	<com.google.visualization.datasource.query.QueryTest: void testValidateDuplicates()>
		<com.google.visualization.datasource.query.QueryTest.java:85, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[192]
	<com.google.visualization.datasource.query.QueryTest: void testValidateGroupAndPivotBySameColumn()>
		<com.google.visualization.datasource.query.QueryTest.java:98, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[193]
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInGroup()>
		<com.google.visualization.datasource.query.QueryTest.java:108, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[194]
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInPivot()>
		<com.google.visualization.datasource.query.QueryTest.java:118, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[195]
	<com.google.visualization.datasource.query.QueryTest: void testAggregationsNotAllowedInFilter()>
		<com.google.visualization.datasource.query.QueryTest.java:129, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[196]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetValue()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:105, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:114, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[197]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllSimpleColumnIds()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:78, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[198]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllSimpleColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:136, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[199]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllAggregationColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:148, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[200]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetAllScalarFunctionColumns()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:171, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[201]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetValueType()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:183, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[202]
	<com.google.visualization.datasource.query.ScalarFunctionColumnTest: void testGetId()>
		<com.google.visualization.datasource.query.ScalarFunctionColumnTest.java:187, 166.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[203]
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testContainsChild()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:106, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:107, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[204]
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testGetChild()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:116, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:119, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[205]
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:157, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:159, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[206]
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testAddChild()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:133, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[207]
	<com.google.visualization.datasource.query.engine.AggregationNodeTest: void testEmptyAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationNodeTest.java:146, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[208]
	<com.google.visualization.datasource.query.engine.AggregationPathTest: void testReverse()>
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:47, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:48, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[209]
	<com.google.visualization.datasource.query.engine.AggregationPathTest: void testEmptyPath()>
		<com.google.visualization.datasource.query.engine.AggregationPathTest.java:55, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[210]
	<com.google.visualization.datasource.query.engine.AggregationTreeTest: void testPathsToLeaves()>
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:139, 12.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:143, 23.08%> (predicates:{($z0 == 0)=false, ($i1 != 3)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:144, 10.26%> (predicates:{($z0 == 0)=false, ($i1 != 3)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:145, 10.26%> (predicates:{($z0 == 0)=false, ($i1 != 3)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:147, 20.51%> (predicates:{($z0 == 0)=false, ($i1 != 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:148, 23.08%> (predicates:{($z0 == 0)=false, ($i1 != 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[211]
	<com.google.visualization.datasource.query.engine.AggregationTreeTest: void testGetNode()>
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:88, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r13 := @caughtexception])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:96, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r17 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[212]
	<com.google.visualization.datasource.query.engine.AggregationTreeTest: void testAggregation()>
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:118, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.AggregationTreeTest.java:122, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[213]
	<com.google.visualization.datasource.query.engine.ColumnTitleTest: void testCreateAggregationColumnDescription()>
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:82, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:83, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:84, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:88, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:89, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:90, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:94, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:95, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:96, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:100, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:102, 9.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnTitleTest.java:104, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[214]
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testNumberAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:41, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:42, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:43, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:44, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:45, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[215]
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testStringAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:58, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:64, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:69, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:70, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:71, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[216]
	<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest: void testGetValueFromEmptyAggregation()>
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:80, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:82, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:83, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:85, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ColumnValueAggregatorTest.java:86, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[217]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:369, 6.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:370, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:371, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:372, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:373, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:374, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:375, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:376, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:377, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:378, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:379, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:380, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:381, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:382, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:383, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:384, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:385, 7.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:388, 3.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[218]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:728, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:729, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:730, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:731, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:732, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:733, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:736, 3.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:775, 5.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:776, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:777, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:778, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:779, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:780, 6.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:783, 3.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[219]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:530, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:531, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:532, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:533, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:534, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:537, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:571, 5.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:572, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:573, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:574, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:575, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:576, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:579, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[220]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:624, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:625, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:626, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:627, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:628, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:629, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:632, 2.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:675, 4.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:676, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:677, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:678, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:681, 2.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[221]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:119, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:120, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:121, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:122, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:123, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:124, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:125, 17.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:126, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:127, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:128, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:130, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[222]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:313, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:314, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:315, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:316, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:317, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:318, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:321, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:322, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:323, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:324, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[223]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:436, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:437, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:438, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:439, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:442, 2.97%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:482, 4.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:483, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:484, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:485, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:486, 5.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:489, 2.97%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[224]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatAndLabelOnPivotColumns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1492, 8.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1493, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1494, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1495, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1496, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1497, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1498, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1499, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1500, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1501, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1502, 9.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[225]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGrouping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:919, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:920, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:921, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:922, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:925, 4.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:959, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:960, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:961, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:965, 4.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[226]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithGroupingAndPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1057, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1058, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1059, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1060, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1061, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1062, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1063, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1064, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1067, 4.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[227]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithPivoting()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1002, 10.87%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1003, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1004, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1005, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1006, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1007, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1008, 13.04%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1011, 6.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[228]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testAggregationAppearsTwice()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1511, 12.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1512, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1513, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1514, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1515, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1516, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1517, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[229]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectWithNoCols()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:210, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:211, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:212, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:213, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:215, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:216, 26.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[230]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfAllButFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:249, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:250, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:251, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:253, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:254, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:257, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[231]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionAndSortByTextDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:276, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:277, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:279, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:280, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:281, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:282, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[232]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkipping()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1559, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1570, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1571, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1572, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1573, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1579, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[233]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithPagination()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1598, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1610, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1611, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1612, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1613, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1621, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[234]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSkippingWithFiltering()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1637, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1649, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1650, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1651, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1652, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1659, 10.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[235]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupingAndPivotingByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:831, 9.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:832, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:833, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:834, 11.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:837, 5.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[236]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:867, 12.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:868, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:869, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:870, 14.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:873, 7.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[237]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testOrderByScalarFunction()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1158, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1159, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1160, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1161, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1164, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[238]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:144, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:145, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:146, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:147, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[239]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByNumberDescending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:161, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:162, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:163, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:164, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[240]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextAscending()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:177, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:178, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:179, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:180, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[241]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSortByTextDescnding()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:194, 14.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:195, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:196, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:197, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[242]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfFirstCol()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:230, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:231, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:233, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:234, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[243]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1212, 8.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1213, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1215, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1218, 5.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[244]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1273, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1274, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1275, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1279, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[245]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFilterArithmeticExpression()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1330, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1331, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1332, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1335, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[246]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInSelection()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1368, 11.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1369, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1370, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1373, 6.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[247]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testModuloInFilter()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1421, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1422, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1423, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1426, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[248]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testSelectionOfScalarFunctionWithEmptyTable()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1122, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1124, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[249]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testLabels()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1457, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1458, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[250]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testQueryWithLikeOperator()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1541, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1543, 38.46%> (predicates:{(i0 >= $i2)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[251]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testScalarFunctions()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1551, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1552, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[252]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testFormatStoresPattern()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1525, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[253]
	<com.google.visualization.datasource.query.engine.QueryEngineTest: void testQueryDoesntRuinDataSourcePatterns()>
		<com.google.visualization.datasource.query.engine.QueryEngineTest.java:1534, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[254]
	<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest: void testCreateColumnDescription()>
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:101, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:102, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:103, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:106, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:108, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:110, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:114, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:116, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:118, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:123, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:125, 7.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.ScalarFunctionColumnTitleTest.java:127, 8.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[255]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testGetRowPath()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:201, 31.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:202, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:206, 31.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:207, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:208, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[256]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNoSuchColumn()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:100, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:102, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:108, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:110, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[257]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNullValues()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:147, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:150, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:153, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[258]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNoSuchElement()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:87, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[259]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testShortPath()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:122, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[260]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testlongPath()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:136, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[261]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testElementNull()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:163, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[262]
	<com.google.visualization.datasource.query.engine.TableAggregatorTest: void testNoElementNull()>
		<com.google.visualization.datasource.query.engine.TableAggregatorTest.java:177, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[263]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReallyComplexFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:681, 4.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:683, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:685, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:691, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:694, 7.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:696, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:698, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:699, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:700, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:702, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:704, 10.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:705, 12.40%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:709, 6.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:711, 7.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:713, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:715, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:716, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:717, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:718, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:721, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:723, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:724, 13.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:728, 5.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:730, 8.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:732, 8.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:733, 8.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:734, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:736, 7.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:738, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:740, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:741, 9.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:742, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:744, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:747, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:748, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:749, 11.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:750, 13.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:752, 13.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[264]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPrecedence()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:767, 5.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:769, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:771, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:778, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:781, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:782, 13.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:785, 7.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:787, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:789, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:790, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:791, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:793, 11.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:794, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:796, 11.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:797, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:800, 7.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:802, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:804, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:805, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:806, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:807, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:808, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:810, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:812, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:816, 7.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:818, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:820, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:821, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:822, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:823, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:825, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[265]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testMultipleAndAssociativity()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:627, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:629, 13.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:632, 13.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:636, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:637, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:638, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:639, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:640, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:642, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:643, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:644, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:645, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:646, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:648, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:649, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:650, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:651, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:652, 8.47%> (predicates:{(i0 >= 5)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[266]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:944, 5.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:946, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:948, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:971, 8.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:973, 12.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:974, 12.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:977, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:979, 10.99%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:981, 10.99%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:982, 10.99%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:983, 10.99%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:984, 13.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:988, 13.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:990, 13.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:992, 13.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:994, 13.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[267]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrderBy()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:118, 16.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:121, 22.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:122, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:123, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:124, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:125, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:126, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:127, 29.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[268]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAndFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:607, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:609, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:611, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:615, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:616, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:617, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:619, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[269]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrFilterWithExtraneousParantheses()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:660, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:662, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:664, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:668, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:669, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:670, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:672, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[270]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnicodeInput()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:99, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:101, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:107, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:109, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:111, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:112, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[271]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:537, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:539, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:541, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:543, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:544, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:545, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[272]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:551, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:553, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:555, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:557, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:558, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:559, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[273]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:565, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:567, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:569, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:571, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:572, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:573, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[274]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseColumnValueFilter3()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:579, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:581, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:583, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:585, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:586, 53.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:587, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[275]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithNumber()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:485, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:487, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:489, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:491, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:492, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[276]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:498, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:500, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:502, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:504, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:505, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[277]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithText2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:511, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:513, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:515, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:517, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:518, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[278]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnValueFilterWithBoolean1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:524, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:526, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:528, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:530, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:531, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[279]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegationFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:593, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:596, 46.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:598, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:599, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:600, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[280]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelectAndOrderBy()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:134, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:139, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:140, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:141, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[281]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testColumnColumnFilter()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:475, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:477, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:478, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:479, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[282]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDateLiterals()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:863, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:867, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:871, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:874, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[283]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testAdvancedStringOperators()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:902, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:904, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:906, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:908, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[284]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testPivotAndGroupByArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1049, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1051, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1062, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1067, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[285]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testScalarFunctions()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1091, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1092, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1099, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1100, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[286]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testGroupingAndPivoting()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:159, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:164, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:165, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[287]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testStrangeAggregations()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:175, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:180, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:181, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[288]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSkippingLimitAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:337, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:338, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:339, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[289]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testIsNotNull()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:839, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:841, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:843, 61.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[290]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSimpleGroupAndPivot()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:851, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:855, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:857, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[291]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadFilterOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1002, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1010, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1018, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[292]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOrderByOfArithmeticExpression()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1029, 21.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1039, 28.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1040, 28.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[293]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testLikeOperator()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1108, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1109, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:1110, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[294]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelect()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:83, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:85, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[295]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOptions()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:149, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:150, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[296]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testEmptyQuery()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:186, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:187, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[297]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNullQuery()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:192, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:193, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[298]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testLimitAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:282, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:283, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[299]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testTwoValidLabels()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:370, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:371, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[300]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testTwoValidFormats()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:429, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:430, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[301]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testIsNull()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:832, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:834, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[302]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadDateLiteral()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:881, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:888, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[303]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelectionOfArithmeticExpressions()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:936, 14.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:937, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[304]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSelectAll()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:92, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[305]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadQuery1()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:199, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[306]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testBadQuery2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:208, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[307]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testValidLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:218, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[308]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:224, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[309]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLimit2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:233, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[310]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnspecifiedLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:242, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[311]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testValidOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:250, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[312]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:256, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[313]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidOffset2()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:265, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[314]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnspecifiedOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:274, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[315]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testReverseLimitAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:289, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[316]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeLimit()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:298, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[317]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:307, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[318]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:317, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[319]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testNegativeSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:323, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[320]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testZeroSkipping()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:332, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[321]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testUnorderedLimitSkippingAndOffset()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:345, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[322]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidLabelWithDoubleQuotes()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:357, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[323]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidLabelWithSingleQuote()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:363, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[324]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidLabel()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:377, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[325]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidEmptyLabel()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:386, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[326]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDuplicateLabelColumn()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:395, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[327]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidTwoLabelsNoComma()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:405, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[328]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidFormatWithDoubleQuotes()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:416, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[329]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testOneValidFormatWithSingleQuote()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:422, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[330]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidFormat()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:436, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[331]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidEmptyFormat()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:445, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[332]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testInvalidTwoFormatsNoComma()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:455, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[333]
	<com.google.visualization.datasource.query.parser.QueryBuilderTest: void testDuplicateFormatColumn()>
		<com.google.visualization.datasource.query.parser.QueryBuilderTest.java:464, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[334]
	<com.google.visualization.datasource.query.scalarfunction.DateDiffTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:81, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:82, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:83, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:84, 19.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[335]
	<com.google.visualization.datasource.query.scalarfunction.DateDiffTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:47, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.DateDiffTest.java:60, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r19 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[336]
	<com.google.visualization.datasource.query.scalarfunction.LowerTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:38, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:55, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:64, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[337]
	<com.google.visualization.datasource.query.scalarfunction.LowerTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.LowerTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[338]
	<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:160, 4.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:161, 4.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:162, 5.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:167, 6.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:168, 6.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:169, 7.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:170, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:171, 8.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:172, 9.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:173, 10.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:177, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:178, 11.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:179, 12.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:180, 12.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:184, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:197, 14.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:198, 14.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:199, 15.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:200, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:201, 16.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:203, 17.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:204, 18.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:205, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:206, 19.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:207, 20.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:225, 20.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:226, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:227, 22.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:228, 22.97%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:229, 23.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:231, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:232, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:233, 25.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:234, 26.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:235, 27.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[339]
	<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest: void testSingelton()>
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:262, 5.41%> (predicates:{($r19 != r2)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:263, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:264, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:265, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:266, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null, ($r23 != r6)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:267, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null, ($r23 != r6)=null, ($r24 != r7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:268, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null, ($r23 != r6)=null, ($r24 != r7)=null, ($r25 != r8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:269, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null, ($r23 != r6)=null, ($r24 != r7)=null, ($r25 != r8)=null, ($r26 != r9)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:270, 5.41%> (predicates:{($r19 != r2)=null, ($r20 != r3)=null, ($r21 != r4)=null, ($r22 != r5)=null, ($r23 != r6)=null, ($r24 != r7)=null, ($r25 != r8)=null, ($r26 != r9)=null, ($r27 != r10)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:8, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:9, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[340]
	<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:83, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:101, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r24 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:117, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r34 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:126, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r40 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:135, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r46 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.TimeComponentExtractorTest.java:150, 1.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r55 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[341]
	<com.google.visualization.datasource.query.scalarfunction.ToDateTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:74, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:75, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:76, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:77, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[342]
	<com.google.visualization.datasource.query.scalarfunction.ToDateTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:46, 4.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r15 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.ToDateTest.java:56, 4.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[343]
	<com.google.visualization.datasource.query.scalarfunction.UpperTest: void testValidateParameters()>
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:38, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:47, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:55, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r14 := @caughtexception])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:64, 0.00%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)

[344]
	<com.google.visualization.datasource.query.scalarfunction.UpperTest: void testEvaluate()>
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:74, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.query.scalarfunction.UpperTest.java:79, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[345]
	<com.google.visualization.datasource.render.CsvRendererTest: void testCustomPropertiesToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:225, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:228, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:231, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:236, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:239, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:242, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[346]
	<com.google.visualization.datasource.render.CsvRendererTest: void testEmptyDataTableToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:129, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:130, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:131, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[347]
	<com.google.visualization.datasource.render.CsvRendererTest: void testSimpleDataTableToCsv()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:174, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:181, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:188, 7.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[348]
	<com.google.visualization.datasource.render.CsvRendererTest: void testRenderError()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:250, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:256, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.CsvRendererTest.java:262, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[349]
	<com.google.visualization.datasource.render.CsvRendererTest: void testRenderDataTableWithCommas()>
		<com.google.visualization.datasource.render.CsvRendererTest.java:308, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[350]
	<com.google.visualization.datasource.render.EscapeUtilTest: void testJsonEscape()>
		<com.google.visualization.datasource.render.EscapeUtilTest.java:29, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:30, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:31, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:32, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:33, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:38, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:43, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:47, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.EscapeUtilTest.java:51, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[351]
	<com.google.visualization.datasource.render.HtmlRendererTest: void testEscaping()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:299, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:317, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[352]
	<com.google.visualization.datasource.render.HtmlRendererTest: void testRenderError()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:337, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.HtmlRendererTest.java:355, 33.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[353]
	<com.google.visualization.datasource.render.HtmlRendererTest: void testEmptyDataTableToHtml()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:149, 68.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[354]
	<com.google.visualization.datasource.render.HtmlRendererTest: void testSimpleDataTableToHtml()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:232, 49.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[355]
	<com.google.visualization.datasource.render.HtmlRendererTest: void testWarnings()>
		<com.google.visualization.datasource.render.HtmlRendererTest.java:293, 52.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[356]
	<com.google.visualization.datasource.render.JsonRendererTest: void testAppendCellJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:146, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:149, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:152, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:155, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:158, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:161, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:164, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:167, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:172, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:180, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:185, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:192, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:196, 6.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[357]
	<com.google.visualization.datasource.render.JsonRendererTest: void testEmptyDataTableToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:131, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:132, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:133, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:134, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[358]
	<com.google.visualization.datasource.render.JsonRendererTest: void testAppendColumnDescriptionJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:203, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:209, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[359]
	<com.google.visualization.datasource.render.JsonRendererTest: void testSimpleDataTableToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:252, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:264, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[360]
	<com.google.visualization.datasource.render.JsonRendererTest: void testSimpleDataTableWithDatesInJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:313, 7.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:329, 7.02%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[361]
	<com.google.visualization.datasource.render.JsonRendererTest: void testCustomPropertiesToJson()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:416, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.render.JsonRendererTest.java:426, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[362]
	<com.google.visualization.datasource.render.JsonRendererTest: void testEntireResponseWithWarnings()>
		<com.google.visualization.datasource.render.JsonRendererTest.java:371, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[363]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testRead()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:62, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:67, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:72, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:73, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:74, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:75, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:76, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:77, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:78, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:79, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:88, 1.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:89, 1.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:93, 0.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:102, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:103, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:104, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:105, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:106, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:107, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:108, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:109, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:110, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:111, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:112, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:121, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:122, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:123, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:124, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:125, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:126, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:127, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:128, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:129, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:130, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:131, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:132, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:133, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:134, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:135, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:136, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:137, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:146, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:147, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:148, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:149, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:150, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:151, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:152, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:153, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:154, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:155, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:156, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:157, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:158, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:159, 1.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:169, 1.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:170, 1.33%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:174, 0.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:180, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:181, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:182, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:183, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:184, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:185, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:186, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:187, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:188, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:189, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:197, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:198, 1.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:199, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:200, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:201, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:202, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:203, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:204, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:205, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:206, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[364]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testEmptyStrings()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:269, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:270, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:271, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:272, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:273, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:274, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:275, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:276, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:277, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:278, 10.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:279, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:280, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:281, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:282, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:283, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:284, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:285, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:286, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[365]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testPatterns()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:221, 7.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:222, 7.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:223, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:224, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:225, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:226, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:227, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:228, 13.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:229, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:230, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:231, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:232, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:233, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:234, 9.80%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[366]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testWhitespaces()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:246, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:247, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:248, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:249, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:250, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:251, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:252, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:253, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:254, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:255, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:256, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[367]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testReadWithLocale()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:298, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:299, 14.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:300, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:301, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[368]
	<com.google.visualization.datasource.util.CsvDataSourceHelperTest: void testReaderFromUrl()>
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:51, 41.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:52, 66.67%> (predicates:{}, inLoop:false, inCatch:true, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.CsvDataSourceHelperTest.java:55, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:true, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[369]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildDataTableRows()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:346, 0.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:349, 1.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:355, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:356, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:357, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:358, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:359, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:360, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:361, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:362, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:363, 3.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:366, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:367, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:368, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:369, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:370, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:371, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:372, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:373, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:374, 2.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:379, 0.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:382, 1.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:386, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:388, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:390, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:392, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:394, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:396, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:398, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:400, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:402, 3.62%> (predicates:{(i0 >= $i14)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:409, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:411, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:412, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:413, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:414, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:415, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:417, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:419, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:420, 5.43%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:422, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:424, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:426, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:428, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:430, 3.17%> (predicates:{(i0 >= $i14)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[370]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildWhereClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:182, 7.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:194, 4.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:200, 4.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:211, 7.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:219, 4.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:228, 4.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[371]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildLimitAndOffsetClauses()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:279, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:285, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:293, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:299, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[372]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildDataTableRowsWithEmptyTable()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:448, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:454, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:455, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[373]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildSelectClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:130, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[374]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildFromClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:143, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[375]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildGroupByClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:242, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[376]
	<com.google.visualization.datasource.util.SqlDataSourceHelperTest: void testBuildOrderByClause()>
		<com.google.visualization.datasource.util.SqlDataSourceHelperTest.java:259, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

