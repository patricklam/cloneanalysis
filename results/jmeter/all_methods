[1]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2PartParse()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:714, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:719, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:720, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:724, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:729, 8.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:730, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:731, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:732, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:733, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:734, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:735, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:736, 11.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[2]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2ArgsParse4()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:651, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:656, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:658, 21.88%> (predicates:{(i1 < i0)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:663, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:664, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:667, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:668, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:671, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:672, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:675, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:676, 18.75%> (predicates:{(i1 < i0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[3]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2PartPartialParse()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:753, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:758, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:759, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:760, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:761, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:762, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:764, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:768, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:773, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:774, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:775, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[4]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testFullParse()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:309, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:314, 10.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:315, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:316, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:317, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:318, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:319, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:320, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:321, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:322, 14.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[5]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2ArgsParse()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:586, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:591, 13.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:592, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:593, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:594, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:595, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:596, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:599, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:600, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[6]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgWithSpace()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:140, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:145, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:148, 29.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:149, 27.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:152, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:153, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:156, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:157, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[7]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgLong()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:168, 13.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:173, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:176, 29.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:177, 27.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:180, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:181, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:184, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:185, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[8]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testCombinedArgs4()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:567, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:571, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:572, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:573, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:574, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:575, 17.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:576, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:577, 17.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[9]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testDuplicateOptions()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:331, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:336, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:337, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:338, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:339, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:340, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:341, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[10]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testIncompatableOptions()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:349, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:354, 15.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:355, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:356, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:357, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:358, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:359, 21.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[11]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testArgumentLookup()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:854, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:857, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:858, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:859, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:862, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:863, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:864, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[12]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgLongEquals()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:196, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:201, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:204, 34.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:205, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:208, 21.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:209, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[13]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testShortOptArgUnenteredBeforeOtherOpt()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:219, 15.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:224, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:227, 34.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:228, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:231, 21.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:232, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[14]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgsWithArgShortBeforeOtherOpt()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:243, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:248, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:250, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:251, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:254, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:255, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[15]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgsWithArgShortEqualsBeforeOtherOpt()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:266, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:271, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:273, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:274, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:277, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:278, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[16]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testOptionalArgsNoArgShortBeforeOtherOpt()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:289, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:294, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:296, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:297, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:300, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:301, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[17]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testCombinedArgs1()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:510, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:514, 18.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:515, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:516, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:517, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:518, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[18]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testCombinedArgs2()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:526, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:530, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:531, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:532, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:533, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:534, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[19]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testCombinedArgs3()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:547, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:551, 17.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:552, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:553, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:554, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:555, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[20]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testIncomplete2ArgsMixed()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:812, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:817, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:818, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:820, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:821, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:822, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[21]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testIncomplete2ArgsMixedNoEq()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:833, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:838, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:839, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:841, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:842, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:843, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[22]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2ArgsParse2()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:614, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:619, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:620, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:623, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:624, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[23]
	<org.apache.commons.cli.avalon.ClutilTestCase: void test2ArgsParse3()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:632, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:637, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:638, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:641, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:642, 31.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[24]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testIncomplete2Args()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:792, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:797, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:799, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:800, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:801, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[25]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:367, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:372, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:373, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:374, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[26]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg2()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:386, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:391, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:392, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:393, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[27]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg3()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:405, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:410, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:411, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:412, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[28]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg4()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:420, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:425, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:426, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:427, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[29]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg5()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:435, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:440, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:441, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:442, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[30]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg6()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:450, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:455, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:456, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:457, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[31]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg7()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:465, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:470, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:471, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:472, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[32]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg8()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:480, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:485, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:486, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:487, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[33]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testSingleArg9()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:495, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:500, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:501, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:502, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[34]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testNullLongForm()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:878, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:881, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:882, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:885, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[35]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testNullDescription()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:899, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:902, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:903, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:907, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[36]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testPartParse()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:691, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:696, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.commons.cli.avalon.ClutilTestCase.java:697, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[37]
	<org.apache.commons.cli.avalon.ClutilTestCase: void testDuplicatesFail()>
		<org.apache.commons.cli.avalon.ClutilTestCase.java:783, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[38]
	<org.apache.jmeter.assertions.MD5HexAssertionTest: void testMD5()>
		<org.apache.jmeter.assertions.MD5HexAssertionTest.java:33, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[39]
	<org.apache.jmeter.assertions.ResponseAssertionTest: void testThreadSafety()>
		<org.apache.jmeter.assertions.ResponseAssertionTest.java:220, 42.86%> (predicates:{(i0 < $i1)=false, (i2 < $i5)=false, ($i6 > 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:3, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[40]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionBadXSDFile()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:102, 7.69%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:103, 26.92%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:104, 26.92%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[41]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionNoFile()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:113, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:114, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:115, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[42]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionNoResult()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:124, 31.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:125, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:126, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[43]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionEmptyResult()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:135, 34.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:136, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:137, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[44]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionBlankResult()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:146, 8.00%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:147, 28.00%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:148, 28.00%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[45]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testXMLTrailingcontent()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:159, 6.67%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:160, 23.33%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:161, 23.33%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[46]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionOK()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:82, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:83, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[47]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testAssertionFail()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:92, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:93, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[48]
	<org.apache.jmeter.assertions.XMLSchemaAssertionTest: void testXMLTrailingwhitespace()>
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:172, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XMLSchemaAssertionTest.java:173, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[49]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionNoResult()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:177, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:178, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:179, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[50]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionEmptyResult()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:187, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:188, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:189, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[51]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionBlankResult()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:197, 8.70%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:198, 30.43%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:199, 30.43%> (predicates:{($i0 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[52]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionOK()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:95, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:96, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[53]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionFail()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:104, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:105, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[54]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionPath1()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:113, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:114, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[55]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionPath2()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:122, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:123, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[56]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionBool1()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:131, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:132, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[57]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionBool2()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:140, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:141, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[58]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionBool3()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:149, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:150, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[59]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionBool4()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:158, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:159, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[60]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertionNumber()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:167, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:168, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[61]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testNoTolerance()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:215, 61.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:216, 61.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[62]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testAssertion()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:225, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:226, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[63]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testNegateAssertion()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:237, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:238, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[64]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testValidationFailure()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:248, 38.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:249, 38.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[65]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testValidationSuccess()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:274, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:275, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[66]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testValidationFailureWithDTD()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:301, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:302, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[67]
	<org.apache.jmeter.assertions.XPathAssertionTest: void testTolerance()>
		<org.apache.jmeter.assertions.XPathAssertionTest.java:318, 61.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.assertions.XPathAssertionTest.java:319, 61.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[68]
	<org.apache.jmeter.config.TestCVSDataSet: void testopen()>
		<org.apache.jmeter.config.TestCVSDataSet.java:61, 11.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:62, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:63, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:71, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:72, 21.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:73, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:76, 26.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:77, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:78, 30.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:81, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:82, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:83, 38.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:87, 40.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:88, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:89, 45.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:92, 47.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:93, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:94, 52.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[69]
	<org.apache.jmeter.config.TestCVSDataSet: void testHeaderQuotes()>
		<org.apache.jmeter.config.TestCVSDataSet.java:178, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:180, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:181, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:182, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:183, 21.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:184, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:186, 24.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:187, 29.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:188, 32.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:189, 35.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:190, 37.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:192, 37.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:193, 43.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:194, 45.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:195, 48.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:196, 51.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r36 := @caughtexception])
		<org.apache.jmeter.config.TestCVSDataSet.java:199, 2.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r36 := @caughtexception])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[70]
	<org.apache.jmeter.config.TestCVSDataSet: void testutf8()>
		<org.apache.jmeter.config.TestCVSDataSet.java:107, 13.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:108, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:109, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:110, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:113, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:114, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:115, 30.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:116, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:119, 36.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:120, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:121, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:122, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:125, 47.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:126, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:127, 52.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:128, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[71]
	<org.apache.jmeter.config.TestCVSDataSet: void testHeaderOpen()>
		<org.apache.jmeter.config.TestCVSDataSet.java:136, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:138, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:139, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:140, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:141, 32.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:142, 36.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:144, 36.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:145, 44.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:146, 48.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:147, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:148, 56.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[72]
	<org.apache.jmeter.config.TestCVSDataSet: void testShareMode()>
		<org.apache.jmeter.config.TestCVSDataSet.java:218, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:220, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:222, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:224, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:227, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:229, 38.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:231, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:233, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[73]
	<org.apache.jmeter.config.TestCVSDataSet: void testHeaderOpenAndRecycle()>
		<org.apache.jmeter.config.TestCVSDataSet.java:157, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:164, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:165, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:166, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.config.TestCVSDataSet.java:167, 61.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[74]
	<org.apache.jmeter.config.gui.TestArgumentsPanel: void testArgumentCreation()>
		<org.apache.jmeter.config.gui.TestArgumentsPanel.java:57, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[75]
	<org.apache.jmeter.control.TestGenericController: void testProcessing()>
		<org.apache.jmeter.control.TestGenericController.java:50, 7.41%> (predicates:{(i1 < 2)=true, ($r21 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestGenericController.java:54, 22.22%> (predicates:{(i1 < 2)=true, ($r21 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[76]
	<org.apache.jmeter.control.TestIfController: void testProcessingTrue()>
		<org.apache.jmeter.control.TestIfController.java:96, 35.29%> (predicates:{($r14 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestIfController.java:99, 17.65%> (predicates:{($r14 != null)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[77]
	<org.apache.jmeter.control.TestIfController: void testEvaluateAllChildrenWithoutSubController()>
		<org.apache.jmeter.control.TestIfController.java:132, 28.57%> (predicates:{($r17 != null)=true, ($z0 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestIfController.java:135, 14.29%> (predicates:{($r17 != null)=false, ($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[78]
	<org.apache.jmeter.control.TestIfController: void testEvaluateAllChildrenWithSubController()>
		<org.apache.jmeter.control.TestIfController.java:171, 26.09%> (predicates:{($r19 != null)=true, ($z0 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestIfController.java:174, 13.04%> (predicates:{($r19 != null)=false, ($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[79]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing()>
		<org.apache.jmeter.control.TestInterleaveControl.java:58, 6.45%> (predicates:{(i1 < 4)=true, ($r25 != null)=false, (i0 != 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestInterleaveControl.java:63, 19.35%> (predicates:{(i1 < 4)=true, ($r25 != null)=true, (i0 != 0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestInterleaveControl.java:65, 19.35%> (predicates:{(i1 < 4)=true, ($r25 != null)=true, (i0 != 0)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:3, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:3, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[80]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing6()>
		<org.apache.jmeter.control.TestInterleaveControl.java:88, 13.33%> (predicates:{(i1 < 4)=true, ($r10 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestInterleaveControl.java:92, 33.33%> (predicates:{(i1 < 4)=true, ($r10 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[81]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing2()>
		<org.apache.jmeter.control.TestInterleaveControl.java:127, 34.48%> (predicates:{(i0 < $i1)=true, ($r24 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[82]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing3()>
		<org.apache.jmeter.control.TestInterleaveControl.java:162, 34.48%> (predicates:{(i0 < $i1)=true, ($r24 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[83]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing4()>
		<org.apache.jmeter.control.TestInterleaveControl.java:192, 38.46%> (predicates:{(i0 < $i1)=true, ($r21 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[84]
	<org.apache.jmeter.control.TestInterleaveControl: void testProcessing5()>
		<org.apache.jmeter.control.TestInterleaveControl.java:222, 38.46%> (predicates:{(i0 < $i1)=true, ($r21 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[85]
	<org.apache.jmeter.control.TestLoopController: void testProcessing()>
		<org.apache.jmeter.control.TestLoopController.java:55, 7.69%> (predicates:{(i1 < 2)=true, ($r20 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestLoopController.java:59, 23.08%> (predicates:{(i1 < 2)=true, ($r20 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[86]
	<org.apache.jmeter.control.TestLoopController: void testLoopZeroTimes()>
		<org.apache.jmeter.control.TestLoopController.java:69, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[87]
	<org.apache.jmeter.control.TestLoopController: void testInfiniteLoop()>
		<org.apache.jmeter.control.TestLoopController.java:79, 50.00%> (predicates:{(i0 < 42)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[88]
	<org.apache.jmeter.control.TestOnceOnlyController: void testProcessing()>
		<org.apache.jmeter.control.TestOnceOnlyController.java:56, 6.90%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=false, (i1 != 0)=null, (i0 >= 2)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:64, 20.69%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=true, (i1 != 0)=false, (i0 >= 2)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:66, 20.69%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=true, (i1 != 0)=null, (i0 >= 2)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:4, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:3, nulls:2, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[89]
	<org.apache.jmeter.control.TestOnceOnlyController: void testProcessing2()>
		<org.apache.jmeter.control.TestOnceOnlyController.java:100, 6.90%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=false, (i1 != 0)=null, (i0 >= 2)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:108, 20.69%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=true, (i1 != 0)=false, (i0 >= 2)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:110, 20.69%> (predicates:{(i1 < 4)=true, (i1 <= 0)=null, ($r24 != null)=true, (i1 != 0)=null, (i0 >= 2)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:3, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:4, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:3, nulls:2, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[90]
	<org.apache.jmeter.control.TestOnceOnlyController: void testInOuterLoop()>
		<org.apache.jmeter.control.TestOnceOnlyController.java:168, 15.38%> (predicates:{(i4 < $i10)=false, ($r24 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:172, 10.26%> (predicates:{(i4 < $i10)=false, ($r24 != null)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[91]
	<org.apache.jmeter.control.TestOnceOnlyController: void testInsideInnerLoop()>
		<org.apache.jmeter.control.TestOnceOnlyController.java:230, 15.38%> (predicates:{(i4 < $i10)=false, ($r24 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestOnceOnlyController.java:234, 10.26%> (predicates:{(i4 < $i10)=false, ($r24 != null)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[92]
	<org.apache.jmeter.control.TestRandomOrderController: void testRandomOrder()>
		<org.apache.jmeter.control.TestRandomOrderController.java:45, 12.50%> (predicates:{($r11 != null)=true, ($z0 == 0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRandomOrderController.java:49, 31.25%> (predicates:{($r11 != null)=false, ($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[93]
	<org.apache.jmeter.control.TestRandomOrderController: void testRandomOrderOneElement()>
		<org.apache.jmeter.control.TestRandomOrderController.java:67, 16.67%> (predicates:{($r7 != null)=true, ($z0 == 0)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRandomOrderController.java:71, 41.67%> (predicates:{($r7 != null)=false, ($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[94]
	<org.apache.jmeter.control.TestRandomOrderController: void testRandomOrderNoElements()>
		<org.apache.jmeter.control.TestRandomOrderController.java:55, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[95]
	<org.apache.jmeter.control.TestRunTime: void testProcessing()>
		<org.apache.jmeter.control.TestRunTime.java:63, 14.63%> (predicates:{($r12 != null)=false, (i0 < 20)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRunTime.java:64, 14.63%> (predicates:{($r12 != null)=false, (i0 < 20)=null, (i0 >= 30)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRunTime.java:65, 14.63%> (predicates:{($r12 != null)=false, (i0 < 20)=null, (i0 >= 30)=null, ($b4 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRunTime.java:66, 14.63%> (predicates:{($r12 != null)=false, (i0 < 20)=null, (i0 >= 30)=null, ($b4 < 0)=null, ($b5 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRunTime.java:67, 12.20%> (predicates:{($r12 != null)=false, (i0 < 20)=null, (i0 >= 30)=null, ($b4 < 0)=null, ($b5 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestRunTime.java:68, 9.76%> (predicates:{($r12 != null)=false, (i0 < 20)=null, (i0 >= 30)=null, ($b4 < 0)=null, ($b5 > 0)=null, ($b8 < 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,long,long)> (bools:1, nulls:4, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[96]
	<org.apache.jmeter.control.TestSwitchController: void testFunction()>
		<org.apache.jmeter.control.TestSwitchController.java:281, 7.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:284, 11.59%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:285, 15.94%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:286, 17.39%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:287, 11.59%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:288, 4.35%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:291, 11.59%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:292, 11.59%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:293, 17.39%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:294, 11.59%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:295, 4.35%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestSwitchController.java:296, 7.25%> (predicates:{(i0 <= 3)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[97]
	<org.apache.jmeter.control.TestThroughputController: void testByNumber()>
		<org.apache.jmeter.control.TestThroughputController.java:65, 13.64%> (predicates:{(i0 < $i1)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:66, 45.45%> (predicates:{(i0 < $i1)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:68, 13.64%> (predicates:{(i0 < $i1)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[98]
	<org.apache.jmeter.control.TestThroughputController: void testByNumberZero()>
		<org.apache.jmeter.control.TestThroughputController.java:96, 50.00%> (predicates:{(i1 < 3)=true, ($r18 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:99, 16.67%> (predicates:{(i1 < 3)=true, ($r18 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[99]
	<org.apache.jmeter.control.TestThroughputController: void testByPercent33()>
		<org.apache.jmeter.control.TestThroughputController.java:144, 50.00%> (predicates:{(i1 < 3)=true, ($r18 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:147, 16.67%> (predicates:{(i1 < 3)=true, ($r18 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[100]
	<org.apache.jmeter.control.TestThroughputController: void testByPercentZero()>
		<org.apache.jmeter.control.TestThroughputController.java:176, 44.44%> (predicates:{(i1 < 3)=true, ($r18 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:179, 14.81%> (predicates:{(i1 < 3)=true, ($r18 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[101]
	<org.apache.jmeter.control.TestThroughputController: void testByPercent100()>
		<org.apache.jmeter.control.TestThroughputController.java:208, 44.44%> (predicates:{(i1 < 3)=true, ($r18 != null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestThroughputController.java:211, 14.81%> (predicates:{(i1 < 3)=true, ($r18 != null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[102]
	<org.apache.jmeter.control.TestWhileController: void testVariable1()>
		<org.apache.jmeter.control.TestWhileController.java:191, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:192, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:193, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:194, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:195, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:196, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:197, 8.89%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:201, 11.11%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:202, 11.11%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:203, 10.00%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:207, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:209, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:210, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:211, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:213, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:215, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:216, 12.22%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[103]
	<org.apache.jmeter.control.TestWhileController: void testVariable2()>
		<org.apache.jmeter.control.TestWhileController.java:241, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:242, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:243, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:244, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:245, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:246, 10.00%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:247, 8.89%> (predicates:{(i0 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:251, 11.11%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:252, 11.11%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:253, 10.00%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:257, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:259, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:260, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:263, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:264, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:266, 13.33%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:267, 12.22%> (predicates:{(i0 <= 3)=false, (i1 <= 3)=false, (i2 <= 3)=true, (i2 != 1)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:4, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:3, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[104]
	<org.apache.jmeter.control.TestWhileController: void testBlankPrevFailed()>
		<org.apache.jmeter.control.TestWhileController.java:149, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:150, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:151, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:152, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:154, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:155, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:156, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.control.TestWhileController.java:157, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[105]
	<org.apache.jmeter.engine.TestTreeCloner: void testCloning()>
		<org.apache.jmeter.engine.TestTreeCloner.java:52, 2.56%> (predicates:{(r2 == r8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:53, 8.97%> (predicates:{(r2 == r8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:54, 11.54%> (predicates:{(r2 == r8)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:55, 2.56%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:56, 6.41%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:58, 3.85%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:63, 2.56%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:64, 5.13%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:69, 2.56%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null, ($z8 != 0)=true, ($z5 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:70, 11.54%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null, ($z8 != 0)=true, ($z5 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:73, 12.82%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null, ($z8 != 0)=true, ($z5 == 0)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.TestTreeCloner.java:78, 8.97%> (predicates:{(r2 == r8)=null, ($r29 == $r31)=null, ($z2 == 0)=null, ($z8 != 0)=false, ($z5 == 0)=null, ($z10 != 0)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:1, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:2, nulls:4, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[106]
	<org.apache.jmeter.engine.util.PackageTest: void testFunctionParse1()>
		<org.apache.jmeter.engine.util.PackageTest.java:69, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:71, 15.38%> (predicates:{($i0 <= -1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:72, 53.85%> (predicates:{($i0 <= -1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[107]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample1()>
		<org.apache.jmeter.engine.util.PackageTest.java:79, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:80, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[108]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample2()>
		<org.apache.jmeter.engine.util.PackageTest.java:87, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:88, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[109]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample3()>
		<org.apache.jmeter.engine.util.PackageTest.java:96, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:97, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[110]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample4()>
		<org.apache.jmeter.engine.util.PackageTest.java:104, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:105, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[111]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample6()>
		<org.apache.jmeter.engine.util.PackageTest.java:112, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:113, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[112]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample5()>
		<org.apache.jmeter.engine.util.PackageTest.java:120, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:121, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[113]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample7()>
		<org.apache.jmeter.engine.util.PackageTest.java:128, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:129, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[114]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample8()>
		<org.apache.jmeter.engine.util.PackageTest.java:136, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:137, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[115]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample9()>
		<org.apache.jmeter.engine.util.PackageTest.java:144, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:145, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[116]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample10()>
		<org.apache.jmeter.engine.util.PackageTest.java:153, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:154, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[117]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample11()>
		<org.apache.jmeter.engine.util.PackageTest.java:162, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:163, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[118]
	<org.apache.jmeter.engine.util.PackageTest: void testNestedExample1()>
		<org.apache.jmeter.engine.util.PackageTest.java:202, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:203, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[119]
	<org.apache.jmeter.engine.util.PackageTest: void testNestedExample2()>
		<org.apache.jmeter.engine.util.PackageTest.java:210, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.PackageTest.java:211, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[120]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample12()>
		<org.apache.jmeter.engine.util.PackageTest.java:176, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[121]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample13()>
		<org.apache.jmeter.engine.util.PackageTest.java:185, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[122]
	<org.apache.jmeter.engine.util.PackageTest: void testParseExample14()>
		<org.apache.jmeter.engine.util.PackageTest.java:194, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[123]
	<org.apache.jmeter.engine.util.TestValueReplacer: void testReverseReplacement()>
		<org.apache.jmeter.engine.util.TestValueReplacer.java:59, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.TestValueReplacer.java:60, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.TestValueReplacer.java:68, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.TestValueReplacer.java:71, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.engine.util.TestValueReplacer.java:72, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[124]
	<org.apache.jmeter.engine.util.TestValueReplacer: void testReplace()>
		<org.apache.jmeter.engine.util.TestValueReplacer.java:83, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[125]
	<org.apache.jmeter.engine.util.TestValueReplacer: void testReplaceStringWithBackslash()>
		<org.apache.jmeter.engine.util.TestValueReplacer.java:95, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[126]
	<org.apache.jmeter.engine.util.TestValueReplacer: void testReplaceFunctionWithBackslash()>
		<org.apache.jmeter.engine.util.TestValueReplacer.java:114, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[127]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction5()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:166, 8.99%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:167, 11.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:168, 11.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:169, 12.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:170, 13.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:174, 16.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:175, 17.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:176, 19.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:177, 20.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:178, 22.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:179, 23.60%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:180, 24.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:181, 25.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:182, 26.97%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:183, 28.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:184, 29.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:185, 30.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:186, 31.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:187, 31.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:192, 35.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:193, 37.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:194, 38.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:195, 39.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:196, 40.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:197, 41.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:198, 42.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:199, 43.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:200, 44.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:201, 46.07%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:202, 47.19%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:203, 48.31%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:204, 49.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:205, 50.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:206, 51.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:211, 55.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:212, 56.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:213, 57.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:214, 58.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:215, 59.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[128]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction7()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:222, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:223, 26.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:224, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:226, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:227, 38.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:228, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:230, 47.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:231, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:232, 52.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:234, 58.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:236, 64.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:237, 67.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:238, 70.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[129]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction9()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:261, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:262, 30.30%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:263, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:264, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:265, 39.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:267, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:269, 51.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:270, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:271, 57.58%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:272, 60.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:273, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:276, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[130]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testScope2()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:365, 23.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:369, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:372, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:377, 40.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:385, 47.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:388, 51.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:391, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:397, 61.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:401, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:404, 70.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:409, 2.78%> (predicates:{($z0 != 0)=null, ($z1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[131]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testStaleVariables()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:309, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:310, 42.31%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:311, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:312, 46.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:313, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:317, 65.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:318, 65.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:319, 69.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:320, 73.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[132]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:81, 52.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:82, 58.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:83, 64.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:84, 70.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:85, 70.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:86, 82.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[133]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate1()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:98, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:99, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:100, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:101, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:102, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:103, 78.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[134]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction8()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:246, 47.37%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:247, 52.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:248, 57.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:250, 63.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:253, 84.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[135]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testDefault()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:296, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:298, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:299, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:300, 86.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[136]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testScope1()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:331, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:334, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:337, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[137]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testNoDefault()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:285, 90.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestRegexExtractor.java:287, 110.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[138]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction0()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:73, 128.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[139]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate2()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:108, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[140]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate3()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:113, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[141]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate4()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:118, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[142]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate5()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:123, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[143]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate6()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:128, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[144]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testTemplate7()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:133, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[145]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction2()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:141, 128.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[146]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction6()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:150, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[147]
	<org.apache.jmeter.extractor.TestRegexExtractor: void testVariableExtraction3()>
		<org.apache.jmeter.extractor.TestRegexExtractor.java:158, 128.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[148]
	<org.apache.jmeter.extractor.TestXPathExtractor: void testVariableExtraction()>
		<org.apache.jmeter.extractor.TestXPathExtractor.java:95, 9.21%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:96, 10.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:97, 11.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:98, 11.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:102, 17.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:103, 18.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:104, 19.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:105, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:106, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:110, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:111, 27.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:112, 28.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:113, 28.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:114, 30.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:118, 35.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:119, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:120, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:125, 42.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:126, 43.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:127, 43.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:132, 48.68%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:133, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:134, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:139, 55.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:145, 60.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:149, 64.47%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:154, 68.42%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[149]
	<org.apache.jmeter.extractor.TestXPathExtractor: void testScope()>
		<org.apache.jmeter.extractor.TestXPathExtractor.java:160, 12.07%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:161, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:162, 15.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:163, 15.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:167, 22.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:168, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:169, 24.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:173, 31.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:174, 32.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:175, 34.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:176, 34.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:191, 48.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:192, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:193, 51.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:194, 53.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:195, 53.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:200, 60.34%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:201, 62.07%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:202, 63.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:203, 63.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[150]
	<org.apache.jmeter.extractor.TestXPathExtractor: void testAttributeExtraction()>
		<org.apache.jmeter.extractor.TestXPathExtractor.java:66, 17.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:67, 20.51%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:68, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:69, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:73, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:74, 35.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:75, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:76, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:80, 48.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:81, 51.28%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:82, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:83, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:87, 64.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:88, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:89, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[151]
	<org.apache.jmeter.extractor.TestXPathExtractor: void testInvalidXpath()>
		<org.apache.jmeter.extractor.TestXPathExtractor.java:210, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:211, 114.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[152]
	<org.apache.jmeter.extractor.TestXPathExtractor: void testInvalidDocument()>
		<org.apache.jmeter.extractor.TestXPathExtractor.java:218, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.extractor.TestXPathExtractor.java:219, 112.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[153]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testEmptyCols()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:119, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:120, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:123, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:124, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:125, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:128, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:129, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:130, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:133, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:134, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:135, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:138, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:139, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:140, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:141, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[154]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testColumns()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:56, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:57, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:60, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:61, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:62, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:66, 6.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:70, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:71, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:72, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[155]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testColumnsComma()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:77, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:78, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:81, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:82, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:83, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:87, 6.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:91, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:92, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:93, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[156]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testColumnsTab()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:98, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:99, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:102, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:103, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:104, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:108, 6.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[$r9 := @caughtexception])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:112, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:113, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:114, 26.67%> (predicates:{($i1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[157]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testrowNum()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:43, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:44, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:46, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:47, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:48, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:49, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestFileRowColContainer.java:50, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[158]
	<org.apache.jmeter.functions.TestFileRowColContainer: void testNull()>
		<org.apache.jmeter.functions.TestFileRowColContainer.java:36, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[159]
	<org.apache.jmeter.functions.TestJexlFunction: void testSumVar()>
		<org.apache.jmeter.functions.TestJexlFunction.java:75, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestJexlFunction.java:76, 91.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[160]
	<org.apache.jmeter.functions.TestJexlFunction: void testReplace2()>
		<org.apache.jmeter.functions.TestJexlFunction.java:93, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestJexlFunction.java:94, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[161]
	<org.apache.jmeter.functions.TestJexlFunction: void testSum()>
		<org.apache.jmeter.functions.TestJexlFunction.java:67, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[162]
	<org.apache.jmeter.functions.TestJexlFunction: void testReplace1()>
		<org.apache.jmeter.functions.TestJexlFunction.java:84, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[163]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction1a()>
		<org.apache.jmeter.functions.TestRegexFunction.java:89, 51.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:90, 44.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:91, 55.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:92, 58.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:93, 62.07%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:94, 65.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[164]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable()>
		<org.apache.jmeter.functions.TestRegexFunction.java:123, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:124, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:125, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:126, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:127, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:128, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[165]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable2()>
		<org.apache.jmeter.functions.TestRegexFunction.java:142, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:143, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:144, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:145, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:146, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:147, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[166]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable3()>
		<org.apache.jmeter.functions.TestRegexFunction.java:161, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:162, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:163, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:164, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:165, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:166, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[167]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable4()>
		<org.apache.jmeter.functions.TestRegexFunction.java:180, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:181, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:182, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:183, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:184, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:185, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[168]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable5()>
		<org.apache.jmeter.functions.TestRegexFunction.java:199, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:200, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:201, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:202, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:203, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:204, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[169]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable6()>
		<org.apache.jmeter.functions.TestRegexFunction.java:218, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:219, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:220, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:221, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:222, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:223, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[170]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable7()>
		<org.apache.jmeter.functions.TestRegexFunction.java:237, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:238, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:239, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:240, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:241, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:242, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[171]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable8()>
		<org.apache.jmeter.functions.TestRegexFunction.java:256, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:257, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:258, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:259, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:260, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:261, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[172]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtractionFromVariable9()>
		<org.apache.jmeter.functions.TestRegexFunction.java:275, 51.61%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:276, 45.16%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:277, 54.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:278, 58.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:279, 61.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:280, 64.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[173]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction1b()>
		<org.apache.jmeter.functions.TestRegexFunction.java:108, 61.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestRegexFunction.java:109, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[174]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction()>
		<org.apache.jmeter.functions.TestRegexFunction.java:75, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[175]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction2()>
		<org.apache.jmeter.functions.TestRegexFunction.java:290, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[176]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction5()>
		<org.apache.jmeter.functions.TestRegexFunction.java:301, 73.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[177]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction6()>
		<org.apache.jmeter.functions.TestRegexFunction.java:313, 70.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[178]
	<org.apache.jmeter.functions.TestRegexFunction: void testComma()>
		<org.apache.jmeter.functions.TestRegexFunction.java:323, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[179]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction3()>
		<org.apache.jmeter.functions.TestRegexFunction.java:333, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[180]
	<org.apache.jmeter.functions.TestRegexFunction: void testVariableExtraction4()>
		<org.apache.jmeter.functions.TestRegexFunction.java:343, 76.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[181]
	<org.apache.jmeter.functions.TestRegexFunction: void testDefaultValue()>
		<org.apache.jmeter.functions.TestRegexFunction.java:355, 70.59%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[182]
	<org.apache.jmeter.functions.TestTimeFunction: void testYMD()>
		<org.apache.jmeter.functions.TestTimeFunction.java:114, 73.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestTimeFunction.java:115, 86.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[183]
	<org.apache.jmeter.functions.TestTimeFunction: void testYMDnoV()>
		<org.apache.jmeter.functions.TestTimeFunction.java:122, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.functions.TestTimeFunction.java:123, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[184]
	<org.apache.jmeter.functions.TestTimeFunction: void testDefault()>
		<org.apache.jmeter.functions.TestTimeFunction.java:66, 15.38%> (predicates:{($b3 < 0)=null, ($b4 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[185]
	<org.apache.jmeter.functions.TestTimeFunction: void testDefault1()>
		<org.apache.jmeter.functions.TestTimeFunction.java:76, 13.33%> (predicates:{($b3 < 0)=null, ($b4 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[186]
	<org.apache.jmeter.functions.TestTimeFunction: void testDefault2()>
		<org.apache.jmeter.functions.TestTimeFunction.java:87, 11.76%> (predicates:{($b3 < 0)=null, ($b4 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[187]
	<org.apache.jmeter.functions.TestTimeFunction: void testDefaultNone()>
		<org.apache.jmeter.functions.TestTimeFunction.java:95, 18.18%> (predicates:{($b3 < 0)=null, ($b4 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[188]
	<org.apache.jmeter.functions.TestTimeFunction: void testTooMany()>
		<org.apache.jmeter.functions.TestTimeFunction.java:104, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[189]
	<org.apache.jmeter.functions.TestTimeFunction: void testHMS()>
		<org.apache.jmeter.functions.TestTimeFunction.java:130, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[190]
	<org.apache.jmeter.functions.TestTimeFunction: void testYMDHMS()>
		<org.apache.jmeter.functions.TestTimeFunction.java:137, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[191]
	<org.apache.jmeter.functions.TestTimeFunction: void testUSER1()>
		<org.apache.jmeter.functions.TestTimeFunction.java:144, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[192]
	<org.apache.jmeter.functions.TestTimeFunction: void testUSER2()>
		<org.apache.jmeter.functions.TestTimeFunction.java:151, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[193]
	<org.apache.jmeter.functions.TestTimeFunction: void testFixed()>
		<org.apache.jmeter.functions.TestTimeFunction.java:158, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[194]
	<org.apache.jmeter.functions.TestTimeFunction: void testMixed()>
		<org.apache.jmeter.functions.TestTimeFunction.java:168, 81.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[195]
	<org.apache.jmeter.functions.TestTimeFunction: void testDivisor()>
		<org.apache.jmeter.functions.TestTimeFunction.java:178, 11.76%> (predicates:{($b5 < 0)=null, ($b6 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[196]
	<org.apache.jmeter.functions.TestTimeFunction: void testDivisorNoMatch()>
		<org.apache.jmeter.functions.TestTimeFunction.java:185, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[197]
	<org.apache.jmeter.gui.action.TestSave: void testTreeConversion()>
		<org.apache.jmeter.gui.action.TestSave.java:44, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.gui.action.TestSave.java:46, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.gui.action.TestSave.java:47, 25.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[198]
	<org.apache.jmeter.monitor.model.TestObjectFactory: void testStatus()>
		<org.apache.jmeter.monitor.model.TestObjectFactory.java:38, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[199]
	<org.apache.jmeter.monitor.model.TestObjectFactory: void testNoStatus()>
		<org.apache.jmeter.monitor.model.TestObjectFactory.java:43, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[200]
	<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest: void testParseArgumentsLF()>
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:76, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:78, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:79, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:80, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:82, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:84, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:85, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:87, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:88, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:90, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:91, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[201]
	<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest: void testParseArgumentsCRLF()>
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:124, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:126, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:127, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:128, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:130, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:132, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:133, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:135, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:136, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:138, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:139, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[202]
	<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest: void testConstructors()>
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:37, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:38, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:40, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:41, 35.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.MultipartUrlConfigTest.java:42, 28.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[203]
	<org.apache.jmeter.protocol.http.config.UrlConfigTest: void testOverRide()>
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:69, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:70, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:72, 72.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:73, 81.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[204]
	<org.apache.jmeter.protocol.http.config.UrlConfigTest: void testSimpleConfig()>
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:63, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.config.UrlConfigTest.java:64, 120.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[205]
	<org.apache.jmeter.protocol.http.control.TestAuthManager: void testFile()>
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:42, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:44, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:47, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:48, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:50, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:51, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:53, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:55, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:56, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:57, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:58, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:60, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:61, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:62, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:63, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:65, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:66, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:68, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:69, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:71, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:72, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:74, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:75, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:77, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:78, 10.20%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[206]
	<org.apache.jmeter.protocol.http.control.TestAuthManager: void testHttp()>
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:32, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[207]
	<org.apache.jmeter.protocol.http.control.TestAuthManager: void testHttps()>
		<org.apache.jmeter.protocol.http.control.TestAuthManager.java:36, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[208]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testExpiresJava()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:193, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:194, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:197, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:198, 54.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:200, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:201, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[209]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testCacheJava()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:219, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:220, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:224, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:225, 56.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:227, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:228, 64.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[210]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testExpiresHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:234, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:235, 29.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:238, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:239, 54.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:241, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:242, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[211]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testCacheHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:249, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:250, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:254, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:255, 56.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:257, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:258, 64.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[212]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testPrivateCacheHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:264, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:265, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:269, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:270, 56.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:272, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:273, 64.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[213]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testPrivateCacheNoMaxAgeNoExpireHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:279, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:280, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:285, 48.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:286, 51.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:288, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:289, 59.26%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[214]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testPrivateCacheExpireNoMaxAgeHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:295, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:296, 26.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:300, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:301, 53.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:303, 57.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:304, 61.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[215]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testCacheHttpClientBug51932()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:321, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:322, 28.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:326, 52.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:327, 56.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:329, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:330, 64.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[216]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testNoExpiresJava()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:208, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:209, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:212, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:213, 65.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[217]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testNoCacheHttpClient()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:310, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:311, 43.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:314, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:315, 81.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[218]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testGetClearEachIteration()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:334, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:336, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:338, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[219]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSaveDetailsURLConnectionWithSampleResultWithResponseCode200GivesCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:349, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:350, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:351, 114.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[220]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSaveDetailsHttpMethodWithSampleResultWithResponseCode200GivesCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:357, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:358, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:359, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[221]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testClearCache()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:404, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:406, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:408, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[222]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSaveDetailsWithEmptySampleResultGivesNoCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:343, 166.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[223]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSaveDetailsURLConnectionWithSampleResultWithResponseCode404GivesNoCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:364, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[224]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSaveDetailsHttpMethodWithSampleResultWithResponseCode404GivesNoCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:369, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[225]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSetHeadersHttpMethodWithSampleResultWithResponseCode404GivesNoCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:386, 116.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[226]
	<org.apache.jmeter.protocol.http.control.TestCacheManager: void testSetHeadersHttpURLConnectionWithSampleResultWithResponseCode404GivesNoCacheEntry()>
		<org.apache.jmeter.protocol.http.control.TestCacheManager.java:400, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[227]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testLoad()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:381, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:383, 10.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:386, 13.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:387, 15.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:388, 16.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:389, 18.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:390, 18.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:391, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:394, 23.08%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:395, 24.62%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:396, 26.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:397, 27.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:398, 27.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:399, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:402, 32.31%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:403, 33.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:404, 35.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:405, 36.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:406, 36.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:407, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[228]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookiePolicyNetscape()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:332, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:333, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:334, 32.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:335, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:337, 32.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:343, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:344, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:345, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:346, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:347, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:348, 7.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:349, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[229]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookieOrdering2()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:281, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:282, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:283, 30.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:284, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:286, 30.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:291, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:292, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:293, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:294, 8.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:295, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:296, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[230]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookiePolicy2109()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:306, 27.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:308, 32.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:309, 35.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:311, 32.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:316, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:317, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:318, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:319, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:320, 10.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:321, 8.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:322, 35.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[231]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookiePolicyIgnore()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:359, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:367, 35.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:368, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:369, 42.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:370, 45.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:372, 42.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:377, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[232]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookieMatching()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:245, 22.73%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:246, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:250, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:254, 31.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:258, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:262, 40.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[233]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testRemoveCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:53, 36.36%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:57, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:60, 59.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:63, 68.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[234]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookieWithEquals()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:128, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:129, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:131, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:132, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[235]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testDuplicateCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:177, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:178, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:181, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:182, 88.89%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[236]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testDuplicateCookie2()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:189, 54.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:190, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:194, 81.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:195, 90.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[237]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCrossDomainHandling()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:96, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:98, 63.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:100, 81.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[238]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testNewCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:147, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:149, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:150, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[239]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookies1()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:157, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:159, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:160, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[240]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookies2()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:166, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:168, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:169, 87.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[241]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testCookieOrdering1()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:270, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:272, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:273, 90.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[242]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testSessionCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:119, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:120, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[243]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testMissingPath0()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:207, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:208, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[244]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testMissingPath1()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:218, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:219, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[245]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testRootPath0()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:227, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:228, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[246]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testRootPath1()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:236, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:237, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[247]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testSendCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:72, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[248]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testSendCookie2()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:81, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[249]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testDomainHandling()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:91, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[250]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testSimilarHostNames()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:111, 62.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[251]
	<org.apache.jmeter.protocol.http.control.TestCookieManager: void testOldCookie()>
		<org.apache.jmeter.protocol.http.control.TestCookieManager.java:140, 83.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[252]
	<org.apache.jmeter.protocol.http.control.gui.TestHttpTestSampleGui: void testCloneSampler()>
		<org.apache.jmeter.protocol.http.control.gui.TestHttpTestSampleGui.java:43, 81.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[253]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testProcessingHTMLFile(java.lang.String)>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:67, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:77, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[254]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testFailSimpleParse2()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:254, 11.11%> (predicates:{($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:255, 44.44%> (predicates:{($z0 == 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[255]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleFormParse()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:274, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:275, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[256]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testBadCharParse()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:294, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:295, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[257]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSpecialCharParse()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:318, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:319, 34.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[258]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:113, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[259]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse1()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:133, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[260]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse2()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:151, 10.53%> (predicates:{($z0 != 0)=null, ($z1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[261]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse3()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:170, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[262]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse4()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:187, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[263]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testSimpleParse5()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:204, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[264]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testFailSimpleParse1()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:221, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[265]
	<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier: void testFailSimpleParse3()>
		<org.apache.jmeter.protocol.http.modifier.TestAnchorModifier.java:238, 45.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[266]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionId()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:70, 64.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:72, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[267]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionId5()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:175, 64.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:177, 41.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[268]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionId2()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:85, 68.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[269]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionId3()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:107, 68.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[270]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionIdFromXMLNonPatExtension()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:120, 68.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[271]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionIdFromXMLPatExtension()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:133, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[272]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionIdEndedInTab()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:146, 68.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[273]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionId4()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:161, 69.23%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[274]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionIdFromForm()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:203, 75.00%> (predicates:{(i0 < $i1)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[275]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testGrabSessionIdURLinJSON()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:220, 68.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[276]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testCache()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:242, 75.00%> (predicates:{(i0 < $i1)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[277]
	<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier: void testNoCache()>
		<org.apache.jmeter.protocol.http.modifier.TestURLRewritingModifier.java:264, 65.52%> (predicates:{(i0 < $i5)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:1, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[278]
	<org.apache.jmeter.protocol.http.parser.TestHTMLParser: void testParserMissing()>
		<org.apache.jmeter.protocol.http.parser.TestHTMLParser.java:188, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[279]
	<org.apache.jmeter.protocol.http.parser.TestHTMLParser: void testNotParser()>
		<org.apache.jmeter.protocol.http.parser.TestHTMLParser.java:201, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[280]
	<org.apache.jmeter.protocol.http.parser.TestHTMLParser: void testNotCreatable()>
		<org.apache.jmeter.protocol.http.parser.TestHTMLParser.java:213, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[281]
	<org.apache.jmeter.protocol.http.parser.TestHTMLParser: void testNotCreatableStatic()>
		<org.apache.jmeter.protocol.http.parser.TestHTMLParser.java:225, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[282]
	<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils: void testIsAnchorMatched()>
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:64, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:67, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:70, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:73, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:76, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:79, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:82, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:85, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:88, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:91, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[283]
	<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils: void testisEqualOrMatches()>
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:95, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:96, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:97, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:98, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[284]
	<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils: void testisEqualOrMatchesCaseBlind()>
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:102, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:103, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:104, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:105, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[285]
	<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils: void testIsArgumentMatched()>
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:49, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:53, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.parser.TestHtmlParsingUtils.java:57, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[286]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testRepeatedArguments()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:51, 2.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:52, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:55, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:80, 2.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:81, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:82, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:85, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:109, 2.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:110, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:111, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:115, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:131, 2.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:132, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:133, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:137, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:164, 2.91%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:165, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:171, 3.49%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[287]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testEncodedArguments(java.lang.String)>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:196, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:197, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:198, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:202, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:215, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:217, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:218, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:222, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:239, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:240, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:241, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:242, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:246, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:262, 5.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:264, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:265, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:266, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:270, 6.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[288]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testPostMultipartFormData()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:430, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:431, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:432, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:436, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:450, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:451, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:452, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:456, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:470, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:471, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:472, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:476, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:490, 7.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:491, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:492, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:496, 9.38%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[289]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testGetRequestEncodings(java.lang.String)>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:297, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:298, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:301, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:316, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:317, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:320, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:334, 7.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:335, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:338, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[290]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testPostRequestEncodings()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:362, 5.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:363, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:366, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:386, 5.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:387, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:390, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:409, 5.10%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:410, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:413, 6.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[291]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testPostMultipartFileUpload()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:544, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:545, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:546, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:547, 17.39%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:551, 26.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:553, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:554, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:555, 21.74%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[292]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testParse1()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:511, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:512, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[293]
	<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr: void testParse2()>
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:526, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr.java:527, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[294]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testContentTypeNoFilters()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:69, 25.93%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:71, 29.63%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:73, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:80, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:82, 48.15%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:84, 51.85%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:91, 62.96%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:93, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:95, 70.37%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[295]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testContentTypeIncludeAndExclude()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:129, 30.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:131, 34.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:133, 39.13%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:135, 43.48%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:142, 56.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:144, 60.87%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:146, 65.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:148, 69.57%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[296]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testContentTypeInclude()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:103, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:105, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:107, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[297]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testContentTypeExclude()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:115, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:117, 70.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:119, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[298]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testFilter1()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:47, 116.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[299]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testFilter2()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:53, 116.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[300]
	<org.apache.jmeter.protocol.http.proxy.TestProxyControl: void testFilter3()>
		<org.apache.jmeter.protocol.http.proxy.TestProxyControl.java:59, 116.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[301]
	<org.apache.jmeter.protocol.http.sampler.PostWriterTest: void testSendFormData_Urlencoded()>
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:409, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:426, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:446, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:469, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:489, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:518, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:536, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PostWriterTest.java:553, 1.54%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[302]
	<org.apache.jmeter.protocol.http.sampler.PutWriterTest: void testSetHeaders()>
		<org.apache.jmeter.protocol.http.sampler.PutWriterTest.java:39, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.PutWriterTest.java:43, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[303]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testFileList()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:253, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:254, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:258, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:259, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:263, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:264, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:265, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:266, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:267, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:271, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:272, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:273, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:274, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:275, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:282, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:283, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:290, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:291, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:300, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:301, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:313, 5.66%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:314, 7.55%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[304]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testParseArguments()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:40, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:41, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:45, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:46, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:50, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:52, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:53, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:54, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:55, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:59, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:61, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:62, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:63, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:64, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:68, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:70, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:71, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:72, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:73, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[305]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testParseArguments2()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:83, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:84, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:88, 20.83%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:89, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:92, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:93, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:94, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:95, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:98, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:99, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:100, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:101, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:104, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:105, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:106, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:107, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[306]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testRedirect()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:142, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:146, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:150, 41.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[307]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testSetAndGetFileField()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:321, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:325, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[308]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testSetAndGetFilename()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:332, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:336, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[309]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testSetAndGetMimetype()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:343, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:347, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[310]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testArgumentWithoutEquals()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:116, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[311]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:126, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[312]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl2()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:160, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[313]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl3()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:170, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[314]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl4()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:183, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[315]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl5()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:193, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[316]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl6()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:203, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[317]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl7()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:216, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[318]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl8()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:226, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[319]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl9()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:236, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[320]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers: void testMakingUrl10()>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplers.java:246, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[321]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer: void testPostRequest_UrlEncoded(int,java.lang.String,int)>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer.java:281, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer.java:282, 9.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer.java:317, 6.06%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[322]
	<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer: void testGetRequest_Parameters(int,int)>
		<org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer.java:763, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[323]
	<org.apache.jmeter.protocol.http.util.TestHTTPArgument: void testEncoding()>
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:61, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:62, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:63, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:64, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:67, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:68, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:72, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:73, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:74, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:75, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:77, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:78, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:82, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:83, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:84, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:85, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:88, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:89, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:93, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:94, 13.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[324]
	<org.apache.jmeter.protocol.http.util.TestHTTPArgument: void testCloning()>
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:33, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:34, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:35, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:36, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:38, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:39, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:40, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:41, 38.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[325]
	<org.apache.jmeter.protocol.http.util.TestHTTPArgument: void testConversion()>
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:51, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:52, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:54, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPArgument.java:55, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[326]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArg: void testConstructors()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:30, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:31, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:32, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:34, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:35, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:36, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:38, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:39, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:40, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:42, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:43, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:44, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[327]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArg: void testGettersSetters()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:49, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:50, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:51, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:56, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:57, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:58, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:59, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[328]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArg: void testToString()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArg.java:64, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[329]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs: void testRemoving()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:68, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:70, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:72, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:80, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:82, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:84, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:85, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:86, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:87, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:88, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:90, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:92, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:93, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:94, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:95, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:97, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:99, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:100, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:101, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:103, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:105, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:106, 9.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:108, 5.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[330]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs: void testAdding()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:39, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:41, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:42, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:45, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:47, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:48, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:50, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:52, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:53, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:54, 19.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[331]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs: void testSetHTTPFileArgs()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:62, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:63, 58.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[332]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs: void testConstructors()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:34, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[333]
	<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs: void testToString()>
		<org.apache.jmeter.protocol.http.util.TestHTTPFileArgs.java:116, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[334]
	<org.apache.jmeter.protocol.http.util.TestHTTPUtils: void testRemoveSlashDotDot()>
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:65, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:66, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:67, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:68, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:69, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:70, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:71, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:72, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:73, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:74, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:75, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:76, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:77, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:78, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:79, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:80, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:81, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[335]
	<org.apache.jmeter.protocol.http.util.TestHTTPUtils: void testgetEncoding()>
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:31, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:32, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:33, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:34, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:35, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:36, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:37, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:38, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[336]
	<org.apache.jmeter.protocol.http.util.TestHTTPUtils: void testMakeRelativeURL()>
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:43, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:44, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:45, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:46, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:47, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:48, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:49, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[337]
	<org.apache.jmeter.protocol.http.util.TestHTTPUtils: void testMakeRelativeURL2()>
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:54, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:55, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:56, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:57, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:58, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:59, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.TestHTTPUtils.java:60, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[338]
	<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter: void testExcludePattern()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:132, 38.10%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:135, 28.57%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:137, 28.57%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:1, nulls:2, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:2, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[339]
	<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter: void testIncludePattern()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:149, 38.10%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:152, 28.57%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:154, 28.57%> (predicates:{(i0 < $i1)=true, (z0 == 0)=null, (r4 == null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:1, nulls:2, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:2, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[340]
	<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter: void testExcludeFiles()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:100, 31.58%> (predicates:{(i0 < $i1)=true, (r4 == null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:102, 31.58%> (predicates:{(i0 < $i1)=true, (r4 == null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[341]
	<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter: void testIncludeFiles()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:117, 31.58%> (predicates:{(i0 < $i1)=true, (r4 == null)=false}, inLoop:true, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:119, 31.58%> (predicates:{(i0 < $i1)=true, (r4 == null)=true}, inLoop:true, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:2, nulls:0, inLoop:true, inCatch:false, exceptionalSuccsSize:0)

[342]
	<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter: void testReplaceExtension()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestLogFilter.java:87, 140.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[343]
	<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser: void testConstruct()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:38, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:42, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNull(java.lang.String,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[344]
	<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser: void testcleanURL()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:47, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:48, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[345]
	<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser: void testcheckURL()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:52, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:53, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[346]
	<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser: void testHEAD()>
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:58, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.http.util.accesslog.TestTCLogParser.java:59, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[347]
	<org.apache.jmeter.protocol.ldap.config.gui.PackageTest: void testLDAPArgumentCreation()>
		<org.apache.jmeter.protocol.ldap.config.gui.PackageTest.java:48, 75.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[348]
	<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest: void testHexStringToByteArray()>
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:38, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:41, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:42, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:45, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:46, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:47, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:48, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:49, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:50, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:51, 16.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:54, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:60, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[349]
	<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest: void testRoundTrip()>
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:75, 7.69%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:82, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:84, 30.77%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[350]
	<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest: void testLoopBack()>
		<org.apache.jmeter.protocol.tcp.sampler.BinaryTCPClientImplTest.java:67, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[351]
	<org.apache.jmeter.protocol.tcp.sampler.LengthPrefixedBinaryTCPClientImplTest: void testValid()>
		<org.apache.jmeter.protocol.tcp.sampler.LengthPrefixedBinaryTCPClientImplTest.java:50, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.LengthPrefixedBinaryTCPClientImplTest.java:52, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[352]
	<org.apache.jmeter.protocol.tcp.sampler.LengthPrefixedBinaryTCPClientImplTest: void testError()>
		<org.apache.jmeter.protocol.tcp.sampler.LengthPrefixedBinaryTCPClientImplTest.java:38, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[353]
	<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest: void testIntToByteArray()>
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:34, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:35, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:36, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:39, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:40, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:41, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:44, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:45, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:46, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:49, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:50, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:51, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:54, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:55, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:56, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:59, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:60, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:61, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:64, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:65, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:66, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:70, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:76, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:82, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:83, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:84, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:85, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:86, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:89, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:90, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:91, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:92, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:93, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:96, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:97, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:98, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:99, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:100, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:103, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:104, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:105, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:106, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:107, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:110, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:111, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:112, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:113, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:114, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:117, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:118, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:119, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:120, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:121, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:124, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:125, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:126, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:127, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:128, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:131, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:132, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:133, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:134, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:135, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:138, 4.12%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:139, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:140, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:141, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:142, 3.09%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r24 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:147, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r24 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:153, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r27 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:159, 0.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r30 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:164, 1.03%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r33 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail()> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[354]
	<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest: void testByteArrayToInt()>
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:173, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:176, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:179, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:182, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:185, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:188, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:191, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:194, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:197, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:200, 6.98%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:205, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:212, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r22 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:219, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r25 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:226, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r28 := @caughtexception])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:233, 2.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r31 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[355]
	<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest: void testLoopBack()>
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:242, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:243, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:244, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.protocol.tcp.sampler.TCPClientDecoratorTest.java:245, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[356]
	<org.apache.jmeter.samplers.TestSampleResult: void testSubResults(boolean,long,long)>
		<org.apache.jmeter.samplers.TestSampleResult.java:195, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:196, 6.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:218, 3.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:219, 4.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:220, 4.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:221, 4.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:222, 4.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:241, 3.33%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:242, 4.44%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:243, 4.44%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:244, 4.44%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:245, 4.44%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:250, 5.56%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:251, 6.67%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:252, 6.67%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:253, 6.67%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:254, 6.67%> (predicates:{($b17 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:269, 14.44%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:280, 14.44%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=null, ($b32 < 0)=null, ($b33 <= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:287, 4.44%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=null, ($b32 < 0)=null, ($b33 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:288, 4.44%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=null, ($b32 < 0)=null, ($b33 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:289, 6.67%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=null, ($b32 < 0)=null, ($b33 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:291, 2.22%> (predicates:{($b17 <= 0)=null, (z0 == 0)=null, ($b29 < 0)=null, ($b30 <= 0)=null, ($b32 < 0)=null, ($b33 <= 0)=null, ($b36 > 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(double,double,double)> (bools:0, nulls:6, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:7, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[357]
	<org.apache.jmeter.samplers.TestSampleResult: void testEncodingAndType()>
		<org.apache.jmeter.samplers.TestSampleResult.java:299, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:300, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:301, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:305, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:306, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:307, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:311, 23.81%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:312, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:313, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:317, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:318, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:319, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:323, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:324, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:325, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[358]
	<org.apache.jmeter.samplers.TestSampleResult: void testPause2True()>
		<org.apache.jmeter.samplers.TestSampleResult.java:117, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:119, 20.00%> (predicates:{($i1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[359]
	<org.apache.jmeter.samplers.TestSampleResult: void testPause2False()>
		<org.apache.jmeter.samplers.TestSampleResult.java:127, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:129, 20.00%> (predicates:{($i1 != 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[360]
	<org.apache.jmeter.samplers.TestSampleResult: void testByteCount()>
		<org.apache.jmeter.samplers.TestSampleResult.java:139, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleResult.java:140, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[361]
	<org.apache.jmeter.samplers.TestSampleResult: void testElapsedTrue()>
		<org.apache.jmeter.samplers.TestSampleResult.java:47, 50.00%> (predicates:{($b1 >= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[362]
	<org.apache.jmeter.samplers.TestSampleResult: void testElapsedFalse()>
		<org.apache.jmeter.samplers.TestSampleResult.java:60, 50.00%> (predicates:{($b1 >= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[363]
	<org.apache.jmeter.samplers.TestSampleResult: void testPauseFalse()>
		<org.apache.jmeter.samplers.TestSampleResult.java:79, 50.00%> (predicates:{($b1 < 0)=null, ($b2 <= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[364]
	<org.apache.jmeter.samplers.TestSampleResult: void testPauseTrue()>
		<org.apache.jmeter.samplers.TestSampleResult.java:98, 50.00%> (predicates:{($b1 < 0)=null, ($b2 <= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[365]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testClone()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:38, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:39, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:40, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:41, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:45, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:46, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:47, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:48, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:49, 27.27%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:53, 13.64%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:54, 18.18%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:55, 9.09%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:59, 18.18%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:60, 13.64%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:61, 18.18%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:62, 27.27%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[366]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testEqualsAndHashCode()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:80, 16.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:81, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:82, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:83, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:84, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:85, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:86, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:87, 24.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:91, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:92, 12.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:93, 8.00%> (predicates:{($i2 != $i3)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:94, 8.00%> (predicates:{($i2 != $i3)=null, ($z11 != $z12)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(boolean,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[367]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testFormatter()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:124, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:125, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:126, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:128, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:129, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:130, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:133, 36.84%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:134, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:135, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[368]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testFalse()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:100, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:101, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:102, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[369]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testTrue()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:108, 77.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:109, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:110, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[370]
	<org.apache.jmeter.samplers.TestSampleSaveConfiguration: void testFalseTrue()>
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:115, 36.36%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:116, 36.36%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.samplers.TestSampleSaveConfiguration.java:117, 36.36%> (predicates:{($i0 != $i1)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[371]
	<org.apache.jmeter.save.TestCSVSaveService: void testSplitBadQuote()>
		<org.apache.jmeter.save.TestCSVSaveService.java:91, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r2 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[372]
	<org.apache.jmeter.save.TestCSVSaveService: void testSplitMultiLine()>
		<org.apache.jmeter.save.TestCSVSaveService.java:106, 31.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[373]
	<org.apache.jmeter.save.TestCSVSaveService: void testBlankLine()>
		<org.apache.jmeter.save.TestCSVSaveService.java:118, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[374]
	<org.apache.jmeter.save.TestCSVSaveService: void testBlankLineQuoted()>
		<org.apache.jmeter.save.TestCSVSaveService.java:125, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[375]
	<org.apache.jmeter.save.TestCSVSaveService: void testEmptyFile()>
		<org.apache.jmeter.save.TestCSVSaveService.java:132, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[376]
	<org.apache.jmeter.save.TestCSVSaveService: void testShortFile()>
		<org.apache.jmeter.save.TestCSVSaveService.java:139, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[377]
	<org.apache.jmeter.save.TestSaveService: void testPropfile()>
		<org.apache.jmeter.save.TestSaveService.java:74, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.save.TestSaveService.java:75, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[378]
	<org.apache.jmeter.save.TestSaveService: void testVersions()>
		<org.apache.jmeter.save.TestSaveService.java:79, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[379]
	<org.apache.jmeter.save.TestSaveService: void testLoadAndSave()>
		<org.apache.jmeter.save.TestSaveService.java:145, 1.28%> (predicates:{(i0 < $i9)=false, (r4 == null)=null, ($i1 != $i2)=null, ($i3 == $i4)=null, ($z1 == 0)=null, (r9 == null)=null, (z0 == 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:2, nulls:5, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[380]
	<org.apache.jmeter.save.TestSaveService: void testLoad()>
		<org.apache.jmeter.save.TestSaveService.java:177, 13.33%> (predicates:{(i0 < $i1)=true, (r1 == null)=null}, inLoop:true, inCatch:false, exceptionalSuccs:[$r11 := @caughtexception])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:1, nulls:1, inLoop:true, inCatch:false, exceptionalSuccsSize:1)

[381]
	<org.apache.jmeter.save.TestSaveService: void testClasses()>
		<org.apache.jmeter.save.TestSaveService.java:190, 66.67%> (predicates:{($i0 <= 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[382]
	<org.apache.jmeter.services.TestFileServer: void testopen()>
		<org.apache.jmeter.services.TestFileServer.java:55, 1.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:60, 1.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r7 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:63, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:65, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:68, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:69, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:70, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:71, 5.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:72, 5.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:73, 5.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:74, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:75, 5.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r29 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:78, 1.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r29 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:82, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:83, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:84, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:86, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r39 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:89, 1.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r39 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:94, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:95, 6.90%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r47 := @caughtexception])
		<org.apache.jmeter.services.TestFileServer.java:98, 1.72%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r47 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertFalse(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[383]
	<org.apache.jmeter.services.TestFileServer: void testRelative()>
		<org.apache.jmeter.services.TestFileServer.java:110, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:112, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:114, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.services.TestFileServer.java:117, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[384]
	<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor: void testBooleanEditor()>
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:38, 13.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:40, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:41, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:42, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:45, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:47, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:49, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:52, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:54, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testbeans.gui.TestBooleanPropertyEditor.java:56, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[385]
	<org.apache.jmeter.testbeans.gui.TestComboStringEditor: void testSetGet(org.apache.jmeter.testbeans.gui.ComboStringEditor,java.lang.Object)>
		<org.apache.jmeter.testbeans.gui.TestComboStringEditor.java:26, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[386]
	<org.apache.jmeter.testbeans.gui.TestComboStringEditor: void testSetGetAsText(org.apache.jmeter.testbeans.gui.ComboStringEditor,java.lang.String)>
		<org.apache.jmeter.testbeans.gui.TestComboStringEditor.java:31, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[387]
	<org.apache.jmeter.testbeans.gui.TestComboStringEditor: void testSetGetAsText()>
		<org.apache.jmeter.testbeans.gui.TestComboStringEditor.java:53, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[388]
	<org.apache.jmeter.testbeans.gui.TestFieldStringEditor: void testSetGet(org.apache.jmeter.testbeans.gui.ComboStringEditor,java.lang.Object)>
		<org.apache.jmeter.testbeans.gui.TestFieldStringEditor.java:27, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[389]
	<org.apache.jmeter.testbeans.gui.TestFieldStringEditor: void testSetGetAsText(org.apache.jmeter.testbeans.gui.ComboStringEditor,java.lang.String)>
		<org.apache.jmeter.testbeans.gui.TestFieldStringEditor.java:32, 125.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[390]
	<org.apache.jmeter.testelement.BarChartTest: void testGenerateBarChart()>
		<org.apache.jmeter.testelement.BarChartTest.java:59, 3.92%> (predicates:{($b1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.BarChartTest.java:60, 3.92%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.BarChartTest.java:61, 3.92%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.BarChartTest.java:78, 5.88%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.BarChartTest.java:85, 7.84%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null, ($z6 != 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[391]
	<org.apache.jmeter.testelement.LineGraphTest: void testGenerateLineChart()>
		<org.apache.jmeter.testelement.LineGraphTest.java:59, 3.92%> (predicates:{($b1 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.LineGraphTest.java:60, 3.92%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.LineGraphTest.java:61, 3.92%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.LineGraphTest.java:78, 5.88%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.LineGraphTest.java:85, 7.84%> (predicates:{($b1 <= 0)=null, ($b4 <= 0)=null, ($i5 <= 0)=null, ($z6 != 0)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:2, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:1, nulls:3, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[392]
	<org.apache.jmeter.testelement.PackageTest: void testRecovery()>
		<org.apache.jmeter.testelement.PackageTest.java:80, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:82, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:84, 35.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:86, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:87, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[393]
	<org.apache.jmeter.testelement.PackageTest: void testArguments()>
		<org.apache.jmeter.testelement.PackageTest.java:103, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:104, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:107, 21.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.PackageTest.java:108, 26.32%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[394]
	<org.apache.jmeter.testelement.property.PackageTest: void testStringProperty()>
		<org.apache.jmeter.testelement.property.PackageTest.java:38, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:40, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:43, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:45, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[395]
	<org.apache.jmeter.testelement.property.PackageTest: void testElementProperty()>
		<org.apache.jmeter.testelement.property.PackageTest.java:58, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:60, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:69, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:71, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[396]
	<org.apache.jmeter.testelement.property.PackageTest: void testIntegerEquality()>
		<org.apache.jmeter.testelement.property.PackageTest.java:208, 3.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r23 := @caughtexception])
		<org.apache.jmeter.testelement.property.PackageTest.java:213, 3.70%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r25 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[397]
	<org.apache.jmeter.testelement.property.PackageTest: void testStringEquality()>
		<org.apache.jmeter.testelement.property.PackageTest.java:297, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r21 := @caughtexception])
		<org.apache.jmeter.testelement.property.PackageTest.java:302, 4.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r23 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[398]
	<org.apache.jmeter.testelement.property.PackageTest: void testAddingProperties()>
		<org.apache.jmeter.testelement.property.PackageTest.java:311, 55.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.testelement.property.PackageTest.java:312, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[399]
	<org.apache.jmeter.testelement.property.PackageTest: void testLongEquality()>
		<org.apache.jmeter.testelement.property.PackageTest.java:242, 4.17%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r23 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[400]
	<org.apache.jmeter.testelement.property.PackageTest: void testMapEquality()>
		<org.apache.jmeter.testelement.property.PackageTest.java:250, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[401]
	<org.apache.jmeter.testelement.property.PackageTest: void testNullEquality()>
		<org.apache.jmeter.testelement.property.PackageTest.java:261, 6.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[402]
	<org.apache.jmeter.threads.TestJMeterContextService: void testCounts()>
		<org.apache.jmeter.threads.TestJMeterContextService.java:30, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:31, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:33, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:34, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:36, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:37, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:40, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.threads.TestJMeterContextService.java:41, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[403]
	<org.apache.jmeter.threads.TestTestCompiler: void testConfigGathering()>
		<org.apache.jmeter.threads.TestTestCompiler.java:47, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[404]
	<org.apache.jmeter.timers.PackageTest: void testTimer3()>
		<org.apache.jmeter.timers.PackageTest.java:63, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:67, 17.65%> (predicates:{(i0 <= 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:69, 23.53%> (predicates:{(i0 <= 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:71, 23.53%> (predicates:{(i0 <= 10)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:75, 17.65%> (predicates:{(i0 <= 10)=false, (i5 <= 990)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:77, 23.53%> (predicates:{(i0 <= 10)=false, (i5 <= 990)=false}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:2, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:2, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[405]
	<org.apache.jmeter.timers.PackageTest: void testTimer1()>
		<org.apache.jmeter.timers.PackageTest.java:41, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:44, 57.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:46, 85.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,float,float,float)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[406]
	<org.apache.jmeter.timers.PackageTest: void testTimer2()>
		<org.apache.jmeter.timers.PackageTest.java:51, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:53, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:55, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[407]
	<org.apache.jmeter.timers.PackageTest: void testTimerBSH()>
		<org.apache.jmeter.timers.PackageTest.java:91, 44.44%> (predicates:{($z0 != 0)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:95, 44.44%> (predicates:{($z0 != 0)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jmeter.timers.PackageTest.java:99, 44.44%> (predicates:{($z0 != 0)=true}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:1, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[408]
	<org.apache.jmeter.util.PackageTest: void testServer()>
		<org.apache.jmeter.util.PackageTest.java:35, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[409]
	<org.apache.jmeter.util.PackageTest: void testSub1()>
		<org.apache.jmeter.util.PackageTest.java:42, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[410]
	<org.apache.jmeter.util.PackageTest: void testSub2()>
		<org.apache.jmeter.util.PackageTest.java:49, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[411]
	<org.apache.jmeter.util.PackageTest: void testSub3()>
		<org.apache.jmeter.util.PackageTest.java:56, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[412]
	<org.apache.jmeter.util.PackageTest: void testSub4()>
		<org.apache.jmeter.util.PackageTest.java:63, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[413]
	<org.apache.jorphan.TestFunctorUsers: void testSummaryReport()>
		<org.apache.jorphan.TestFunctorUsers.java:42, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[414]
	<org.apache.jorphan.TestFunctorUsers: void testTableVisualizer()>
		<org.apache.jorphan.TestFunctorUsers.java:46, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[415]
	<org.apache.jorphan.TestFunctorUsers: void testStatGraphVisualizer()>
		<org.apache.jorphan.TestFunctorUsers.java:50, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[416]
	<org.apache.jorphan.TestFunctorUsers: void testStatVisualizer()>
		<org.apache.jorphan.TestFunctorUsers.java:55, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[417]
	<org.apache.jorphan.TestFunctorUsers: void testArgumentsPanel()>
		<org.apache.jorphan.TestFunctorUsers.java:59, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[418]
	<org.apache.jorphan.TestFunctorUsers: void testHTTPArgumentsPanel()>
		<org.apache.jorphan.TestFunctorUsers.java:63, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[419]
	<org.apache.jorphan.TestFunctorUsers: void testLDAPArgumentsPanel()>
		<org.apache.jorphan.TestFunctorUsers.java:67, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(java.lang.String,boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[420]
	<org.apache.jorphan.TestXMLBuffer: void test1()>
		<org.apache.jorphan.TestXMLBuffer.java:33, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[421]
	<org.apache.jorphan.TestXMLBuffer: void test2()>
		<org.apache.jorphan.TestXMLBuffer.java:39, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[422]
	<org.apache.jorphan.TestXMLBuffer: void test3()>
		<org.apache.jorphan.TestXMLBuffer.java:45, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[423]
	<org.apache.jorphan.TestXMLBuffer: void test4()>
		<org.apache.jorphan.TestXMLBuffer.java:52, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[424]
	<org.apache.jorphan.collections.PackageTest: void testEqualsAndHashCode2()>
		<org.apache.jorphan.collections.PackageTest.java:110, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:111, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:112, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:113, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:114, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:116, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:117, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:118, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:119, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:120, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:122, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:123, 9.52%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:124, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:125, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:126, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:127, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:129, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:130, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:131, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:132, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:135, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:136, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:139, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:140, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:141, 14.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:149, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:150, 7.14%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:158, 7.14%> (predicates:{($i6 != $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:159, 7.14%> (predicates:{($i6 != $i7)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[425]
	<org.apache.jorphan.collections.PackageTest: void testEqualsAndHashCode1()>
		<org.apache.jorphan.collections.PackageTest.java:52, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:53, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:54, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:55, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:56, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:58, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:59, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:60, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:61, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:62, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:64, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:65, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:66, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:67, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:68, 11.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:70, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:71, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:72, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:73, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:75, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:76, 5.88%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:79, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:80, 8.82%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:86, 8.82%> (predicates:{($i4 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:87, 8.82%> (predicates:{($i4 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:88, 17.65%> (predicates:{($i4 != $i5)=null}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotSame(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:1, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[426]
	<org.apache.jorphan.collections.PackageTest: void testAddObjectAndTree()>
		<org.apache.jorphan.collections.PackageTest.java:96, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:97, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:98, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:99, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:100, 15.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:101, 20.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertNotNull(java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[427]
	<org.apache.jorphan.collections.PackageTest: void testAdd1()>
		<org.apache.jorphan.collections.PackageTest.java:42, 29.41%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.collections.PackageTest.java:43, 17.65%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[428]
	<org.apache.jorphan.collections.PackageTest: void testSearch()>
		<org.apache.jorphan.collections.PackageTest.java:172, 45.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[429]
	<org.apache.jorphan.math.TestStatCalculator: void testCalculation()>
		<org.apache.jorphan.math.TestStatCalculator.java:60, 16.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:61, 18.92%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:72, 45.95%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:73, 51.35%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:74, 54.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:75, 56.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:76, 59.46%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(float,float,float)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[430]
	<org.apache.jorphan.math.TestStatCalculator: void testInteger()>
		<org.apache.jorphan.math.TestStatCalculator.java:93, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:94, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:98, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:99, 27.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:101, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:102, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[431]
	<org.apache.jorphan.math.TestStatCalculator: void testLong()>
		<org.apache.jorphan.math.TestStatCalculator.java:84, 64.29%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:85, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:87, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:88, 71.43%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[432]
	<org.apache.jorphan.math.TestStatCalculator: void testBug52125_1()>
		<org.apache.jorphan.math.TestStatCalculator.java:113, 64.71%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:114, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:115, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[433]
	<org.apache.jorphan.math.TestStatCalculator: void testBug52125_2()>
		<org.apache.jorphan.math.TestStatCalculator.java:124, 56.25%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:125, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:126, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[434]
	<org.apache.jorphan.math.TestStatCalculator: void testBug52125_2A()>
		<org.apache.jorphan.math.TestStatCalculator.java:135, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:136, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:137, 26.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[435]
	<org.apache.jorphan.math.TestStatCalculator: void testBug52125_3()>
		<org.apache.jorphan.math.TestStatCalculator.java:150, 52.94%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:151, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:152, 23.53%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[436]
	<org.apache.jorphan.math.TestStatCalculator: void testPercentagePoint()>
		<org.apache.jorphan.math.TestStatCalculator.java:56, 88.24%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.math.TestStatCalculator.java:57, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(long,long)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[437]
	<org.apache.jorphan.reflect.TestFunctor: void testClass()>
		<org.apache.jorphan.reflect.TestFunctor.java:158, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:159, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:160, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r19 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:163, 2.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r19 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:168, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r26 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:171, 2.78%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r26 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:176, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:183, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:184, 11.11%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[438]
	<org.apache.jorphan.reflect.TestFunctor: void testBadParameters()>
		<org.apache.jorphan.reflect.TestFunctor.java:190, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r3 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:194, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:198, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r10 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:202, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r13 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:206, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r17 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:210, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r22 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:214, 3.45%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r27 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[439]
	<org.apache.jorphan.reflect.TestFunctor: void testName()>
		<org.apache.jorphan.reflect.TestFunctor.java:104, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:108, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:112, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:114, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:118, 4.76%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r20 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:123, 19.05%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[440]
	<org.apache.jorphan.reflect.TestFunctor: void testNameTypes()>
		<org.apache.jorphan.reflect.TestFunctor.java:131, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:133, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:134, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r12 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:137, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:139, 22.22%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:140, 5.56%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r16 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[441]
	<org.apache.jorphan.reflect.TestFunctor: void testObjectName()>
		<org.apache.jorphan.reflect.TestFunctor.java:148, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.reflect.TestFunctor.java:149, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[442]
	<org.apache.jorphan.reflect.TestFunctor: void testIllegalState()>
		<org.apache.jorphan.reflect.TestFunctor.java:221, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r5 := @caughtexception])
		<org.apache.jorphan.reflect.TestFunctor.java:225, 12.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r8 := @caughtexception])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[443]
	<org.apache.jorphan.util.TestJorphanUtils: void testTruncate()>
		<org.apache.jorphan.util.TestJorphanUtils.java:132, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:133, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:134, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:135, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:136, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:137, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:139, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:140, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:141, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:142, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:143, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:144, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:145, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:146, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:147, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[444]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplit5()>
		<org.apache.jorphan.util.TestJorphanUtils.java:155, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:156, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:157, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:158, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:159, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:160, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:162, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:163, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:164, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:165, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:166, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:167, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:168, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:169, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:170, 15.79%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[445]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSS4()>
		<org.apache.jorphan.util.TestJorphanUtils.java:212, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:213, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:214, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:215, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:216, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:217, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:219, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:220, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:221, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:222, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:223, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:224, 18.75%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[446]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplit1()>
		<org.apache.jorphan.util.TestJorphanUtils.java:75, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:76, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:77, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:79, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:80, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:81, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:82, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:83, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[447]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplit2()>
		<org.apache.jorphan.util.TestJorphanUtils.java:89, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:90, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:91, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:93, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:94, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:95, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:96, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:97, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[448]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplit3()>
		<org.apache.jorphan.util.TestJorphanUtils.java:103, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:104, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:105, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:107, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:108, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:109, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:110, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:111, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[449]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplit4()>
		<org.apache.jorphan.util.TestJorphanUtils.java:117, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:118, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:119, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:121, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:122, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:123, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:124, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:125, 25.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[450]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSSNull()>
		<org.apache.jorphan.util.TestJorphanUtils.java:259, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:260, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:261, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:264, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:265, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:266, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[451]
	<org.apache.jorphan.util.TestJorphanUtils: void testTrim()>
		<org.apache.jorphan.util.TestJorphanUtils.java:291, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:292, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:293, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:294, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:295, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:296, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[452]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSS1()>
		<org.apache.jorphan.util.TestJorphanUtils.java:184, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:185, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:186, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:187, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:188, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[453]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSS2()>
		<org.apache.jorphan.util.TestJorphanUtils.java:194, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:195, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:196, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:197, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:198, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[454]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSS5()>
		<org.apache.jorphan.util.TestJorphanUtils.java:230, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:231, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:232, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:233, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:234, 37.50%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[455]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSSNulls()>
		<org.apache.jorphan.util.TestJorphanUtils.java:242, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<org.apache.jorphan.util.TestJorphanUtils.java:243, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r4 := @caughtexception])
		<org.apache.jorphan.util.TestJorphanUtils.java:249, 30.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
		<org.apache.jorphan.util.TestJorphanUtils.java:250, 10.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r6 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[456]
	<org.apache.jorphan.util.TestJorphanUtils: void testreplaceAllChars()>
		<org.apache.jorphan.util.TestJorphanUtils.java:280, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:283, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:285, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:287, 44.44%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[457]
	<org.apache.jorphan.util.TestJorphanUtils: void testIsBlank()>
		<org.apache.jorphan.util.TestJorphanUtils.java:319, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:320, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:321, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:322, 40.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertTrue(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertFalse(boolean)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[458]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSSNone()>
		<org.apache.jorphan.util.TestJorphanUtils.java:272, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:275, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:276, 50.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[459]
	<org.apache.jorphan.util.TestJorphanUtils: void testbaToHexString()>
		<org.apache.jorphan.util.TestJorphanUtils.java:300, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:301, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:302, 42.86%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[460]
	<org.apache.jorphan.util.TestJorphanUtils: void testSplitSSS3()>
		<org.apache.jorphan.util.TestJorphanUtils.java:204, 60.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
		<org.apache.jorphan.util.TestJorphanUtils.java:205, 80.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[461]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace1()>
		<org.apache.jorphan.util.TestJorphanUtils.java:38, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[462]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace2()>
		<org.apache.jorphan.util.TestJorphanUtils.java:42, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[463]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace3()>
		<org.apache.jorphan.util.TestJorphanUtils.java:46, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[464]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace4()>
		<org.apache.jorphan.util.TestJorphanUtils.java:50, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[465]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace5()>
		<org.apache.jorphan.util.TestJorphanUtils.java:54, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[466]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace6()>
		<org.apache.jorphan.util.TestJorphanUtils.java:58, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[467]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace7()>
		<org.apache.jorphan.util.TestJorphanUtils.java:62, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[468]
	<org.apache.jorphan.util.TestJorphanUtils: void testReplace8()>
		<org.apache.jorphan.util.TestJorphanUtils.java:66, 150.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[469]
	<org.apache.jorphan.util.TestJorphanUtils: void testEmpty()>
		<org.apache.jorphan.util.TestJorphanUtils.java:177, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[470]
	<test.RerunTest: void testRerun()>
		<test.RerunTest.java:33, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[471]
	<woolfel.DummyTestCase: void testMethodPass()>
		<woolfel.DummyTestCase.java:48, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r2 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[472]
	<woolfel.DummyTestCase: void testMethodPass2()>
		<woolfel.DummyTestCase.java:57, 33.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r2 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[473]
	<woolfel.DummyTestCase: void testMethodFail()>
		<woolfel.DummyTestCase.java:66, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r2 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(int,int)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[474]
	<woolfel.DummyTestCase: void testMethodFail2()>
		<woolfel.DummyTestCase.java:75, 66.67%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[$r2 := @caughtexception])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:1)

[475]
	<woolfel.DummyTestCase: void testFail()>
		<woolfel.DummyTestCase.java:83, 100.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void fail(java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[476]
	<woolfel.DummyTestCase: void testStringCompareFail()>
		<woolfel.DummyTestCase.java:93, 200.00%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

[477]
	<woolfel.DummyTestCase: void testObjectCompareFail()>
		<woolfel.DummyTestCase.java:97, 133.33%> (predicates:{}, inLoop:false, inCatch:false, exceptionalSuccs:[])
			<junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)> (bools:0, nulls:0, inLoop:false, inCatch:false, exceptionalSuccsSize:0)

